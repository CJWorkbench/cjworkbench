# See https://cloud.google.com/cloud-build/docs/build-debug-locally for debug
# instructions.
timeout: 2400s
steps:
# cache-from doesn't work well with multi-stage builds yet: see
# https://github.com/moby/moby/issues/32612. We don't win if we pull down
# migrate/worker/cron/frontend and try to build using their caches.
#
# One alternative win for build speed: author pull requests for each Python
# library that uses C, so they push bdist with manylinux. That way our
# Dockerfile won't need apt-get or gcc calls, saving oodles of time.
#
# We can at least pull the latest integration test: our integration tests
# don't use multi-stage build so they play nice with cache. (That's a great
# win because installing Firefox deps is particularly slow.)
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'pull', 'gcr.io/$PROJECT_ID/integration-test:latest' ]
# Build new Docker images
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build',
          '--target', 'frontend',
          '-t', 'gcr.io/$PROJECT_ID/frontend:$COMMIT_SHA',
          '-t', 'gcr.io/$PROJECT_ID/frontend:latest',
          '.'
        ]
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build',
          '--target', 'migrate',
          '-t', 'gcr.io/$PROJECT_ID/migrate:$COMMIT_SHA',
          '-t', 'gcr.io/$PROJECT_ID/migrate:latest',
          '.'
        ]
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build',
          '--target', 'worker',
          '-t', 'gcr.io/$PROJECT_ID/worker:$COMMIT_SHA',
          '-t', 'gcr.io/$PROJECT_ID/worker:latest',
          '.'
        ]
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build',
          '--target', 'cron',
          '-t', 'gcr.io/$PROJECT_ID/cron:$COMMIT_SHA',
          '-t', 'gcr.io/$PROJECT_ID/cron:latest',
          '.'
        ]
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build',
          '--file', 'Dockerfile.integrationtest',
          '--cache-from', 'gcr.io/$PROJECT_ID/integration-test:latest',
          '--target', 'cloudbuild',
          '-t', 'gcr.io/$PROJECT_ID/integration-test:$COMMIT_SHA',
          '-t', 'gcr.io/$PROJECT_ID/integration-test:latest',
          '.'
        ]
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'build',
          '-t', 'gcr.io/$PROJECT_ID/git-server:$COMMIT_SHA',
          './integrationtests/git-server'
        ]
# Unit-test
- name: 'docker/compose:1.21.2'
  args: [ '-f', 'server/tests/docker-compose.yml',
          'run',
          'unittest',
          # DELETEME [2018-10-30-ish] we started getting crashes when
          # unittest exited:
          #
          # Step #7: Destroying test database for alias 'default' ('test_cjworkbench')...
          # Step #7: Traceback (most recent call last):
          # Step #7: File "/usr/local/lib/python3.6/site-packages/django/db/backends/utils.py", line 63, in execute
          # Step #7: return self.cursor.execute(sql)
          # Step #7: psycopg2.OperationalError: database "test_cjworkbench" is being accessed by other users
          # Step #7: DETAIL: There are 6 other sessions using the database.
          # For now, don't delete the database.
          #
          # In the future, _do_ delete the database: these still-being-accessed
          # sessions are a bug.
          '-k'
        ]
  env:
    - 'PROJECT_ID=$PROJECT_ID'
    - 'COMMIT_SHA=$COMMIT_SHA'
# Integration-test: migrate, then run the integration-test image
- name: 'docker/compose:1.21.2'
  args: [ '-f', 'integrationtests/docker-compose.yml',
          '-f', 'integrationtests/docker-compose.cloudbuild-override.yml',
          'run',
          'migrate'
        ]
  env:
    - 'PROJECT_ID=$PROJECT_ID'
    - 'COMMIT_SHA=$COMMIT_SHA'
- name: 'docker/compose:1.21.2'
  args: [ '-f', 'integrationtests/docker-compose.yml',
          '-f', 'integrationtests/docker-compose.cloudbuild-override.yml',
          'run',
          'integration-test'
        ]
  env:
    - 'PROJECT_ID=$PROJECT_ID'
    - 'COMMIT_SHA=$COMMIT_SHA'
images:
- 'gcr.io/$PROJECT_ID/migrate:$COMMIT_SHA'
- 'gcr.io/$PROJECT_ID/migrate:latest'
- 'gcr.io/$PROJECT_ID/worker:$COMMIT_SHA'
- 'gcr.io/$PROJECT_ID/worker:latest'
- 'gcr.io/$PROJECT_ID/cron:$COMMIT_SHA'
- 'gcr.io/$PROJECT_ID/cron:latest'
- 'gcr.io/$PROJECT_ID/frontend:$COMMIT_SHA'
- 'gcr.io/$PROJECT_ID/frontend:latest'
- 'gcr.io/$PROJECT_ID/integration-test:latest'
