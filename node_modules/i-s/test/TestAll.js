describe('test all', function(){

     var is = require('../index')

    it('numeric: should work ok', function(){
        is.numeric('213').should.equal(true)
        is.numeric('105').should.equal(true)
        is.numeric('213a').should.equal(false)
        is.numeric(2).should.equal(true)
        is.numeric(3.442).should.equal(true)
    })

    it('number: should work ok', function(){
        is.number('213').should.equal(false)
        is.number('213a').should.equal(false)
        is.number(2).should.equal(true)
        is.number(3.442).should.equal(true)
    })

    it('int: should work ok', function(){
        is.int('213').should.equal(false)
        is.int('213a').should.equal(false)
        is.int(3.442).should.equal(false)
        is.int(2).should.equal(true)
    })

    it('float: should work ok', function(){
        is.float('213').should.equal(false)
        is.float('213a').should.equal(false)
        is.float(3.442).should.equal(true)
        is.float(2).should.equal(false)
    })

    it('string: should work ok', function(){
        is.string('213').should.equal(true)
        is.string('213a').should.equal(true)
        is.string(3.442).should.equal(false)
        is.string(2).should.equal(false)
        is.string([]).should.equal(false)
    })

    it('function: should work ok', function(){
        is.function(function(){}).should.equal(true)
        is.function(Object).should.equal(true)
        is.function(new Object()).should.equal(false)
        is.function([]).should.equal(false)
        is.function([].constructor).should.equal(true)
    })

    it('object: should work ok', function(){
        is.object({}).should.equal(true)
        is.object(new Object()).should.equal(true)
        is.object(new Date()).should.equal(false)
        is.object([]).should.equal(false)
        is.object('{}').should.equal(false)
    })

    it('arguments: should work ok', function(){
        function f(){
            return arguments
        }

        function g(){
            return arguments[0]
        }

        is.arguments(f(1,2,3)).should.equal(true)
        is.arguments([]).should.equal(false)
        is.arguments(g(3)).should.equal(false)
    })

    it('boolean: should work ok', function(){
        is.boolean(true).should.equal(true)
        is.boolean(false).should.equal(true)
        is.boolean(Boolean).should.equal(false)
        is.boolean('true').should.equal(false)
        is.boolean(!!'true').should.equal(true)
    })

    it('date: should work ok', function(){
        is.date(new Date()).should.equal(true)
        is.date(new Object()).should.equal(false)
    })

    it('regexp: should work ok', function(){
        is.regexp(/a/).should.equal(true)
        is.regexp('/a/').should.equal(false)
        is.regexp(new RegExp('/a/')).should.equal(true)
    })

    it('array: should work ok', function(){
        is.array(new Array()).should.equal(true)
        is.array(new Array(4)).should.equal(true)
        is.array([1,2,3]).should.equal(true)
        is.array('[1,2,3]').should.equal(false)
        is.array(function(){return arguments}()).should.equal(false)
    })

})