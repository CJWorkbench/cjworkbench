{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"s",
				"should"
			],
			[
				"fun",
				"function"
			],
			[
				"obj",
				"object_type"
			],
			[
				"metaObjectT",
				"metaObjectTypeTable"
			],
			[
				"meta",
				"metaObjectTable"
			],
			[
				"max",
				"max20"
			],
			[
				"type",
				"typeName"
			],
			[
				"get",
				"getTypeName"
			],
			[
				"v",
				"var"
			],
			[
				"conne",
				"connectionString"
			],
			[
				"conn",
				"connectionString"
			],
			[
				"add_meta_",
				"f_add_meta_columns"
			],
			[
				"created",
				"created_date"
			],
			[
				"meta_ob",
				"meta_object_type"
			],
			[
				"admin",
				"admin_id"
			],
			[
				"create",
				"created_by"
			],
			[
				"last",
				"last_modified_by"
			],
			[
				"meta_",
				"meta_object"
			],
			[
				"META_",
				"meta_object_type"
			],
			[
				"crea",
				"create_table"
			],
			[
				"cread_da",
				"created_date_col"
			],
			[
				"id",
				"id_col"
			],
			[
				"def",
				"definition"
			],
			[
				"ensureLastM",
				"ensureLastModifiedBy"
			],
			[
				"ensureCre",
				"ensureCreatedBy"
			],
			[
				"ensureL",
				"ensureLastModifiedDate"
			],
			[
				"ensureCrea",
				"ensureCreatedDate"
			],
			[
				"ensu",
				"ensureColumn"
			],
			[
				"lastMo",
				"lastModifiedByLength"
			],
			[
				"uuid",
				"uuidGenerate"
			],
			[
				"Oj",
				"ObjectTable"
			],
			[
				"Object",
				"ObjectTypeTable"
			],
			[
				"col",
				"colType"
			],
			[
				"proto",
				"prototype"
			],
			[
				"auto",
				"autoInitTable"
			],
			[
				"tab",
				"tableName"
			],
			[
				"pro",
				"prototype"
			],
			[
				"filter",
				"filterOnUser"
			],
			[
				"exce",
				"exceptSecret"
			],
			[
				"ex",
				"exceptSecret"
			],
			[
				"sele",
				"selectGetAllBy"
			],
			[
				"config",
				"CONFIG"
			],
			[
				"has",
				"hashPass"
			],
			[
				"re",
				"reject"
			],
			[
				"Sele",
				"SelectExistsUsers"
			],
			[
				"table_",
				"table_name"
			],
			[
				"me",
				"metaColumns"
			],
			[
				"page",
				"paginateSelect"
			],
			[
				"json",
				"jsonField"
			],
			[
				"find",
				"findByName"
			],
			[
				"st",
				"stringify"
			],
			[
				"entity",
				"entityToJson"
			],
			[
				"des",
				"descriptor"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"prop",
				"propName"
			],
			[
				"new",
				"newify"
			],
			[
				"alc",
				"alchemy"
			],
			[
				"a",
				"alchemy"
			],
			[
				"value",
				"valueToSql"
			],
			[
				"pr",
				"primaryKey"
			],
			[
				"prp",
				"preparedData"
			],
			[
				"preparedd",
				"preparedData"
			],
			[
				"user",
				"user_name"
			],
			[
				"paramete",
				"parameterized"
			],
			[
				"where",
				"whereConditions"
			],
			[
				"sql",
				"sqlQuery"
			],
			[
				"colu",
				"getInsertColumns"
			],
			[
				"into",
				"intoToString"
			],
			[
				"app",
				"appConfig"
			],
			[
				"columns",
				"columnsToString"
			],
			[
				"Inte",
				"IntegerType"
			],
			[
				"C",
				"COMPILER"
			],
			[
				"String",
				"StringType"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 217,
				"line_ending": "Unix"
			}
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 864,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 2947 files for \"functionally\"\n\n/home/radu/code/entity-engine/api/helpers/filterOnUser.js:\n    1: var F = require('functionally')\n    2  \n    3  var except = F.curry(function(keys, obj){\n\n/home/radu/code/entity-engine/api/object/getBy.js:\n    1: var F = require('functionally')\n    2  \n    3  var paginate = require('../helpers/paginate')\n\n/home/radu/code/entity-engine/entity.js:\n    1  var classy = require('classy')\n    2: var F      = require('functionally')\n    3  var copy   = require('./copy')\n    4  var CONFIG = require('./config')\n\n/home/radu/code/entity-engine/meta/ensureColumns.js:\n    3  var Column = require('alchemy/Column')\n    4  var Types  = require('alchemy/Types')\n    5: var F      = require('functionally')\n    6  \n    7  /**\n\n/home/radu/code/entity-engine/node_modules/alchemy/alchemy.js:\n    1: var F = require('functionally')\n    2  var getType = require('./sql/types/getType')\n    3  \n\n/home/radu/code/entity-engine/node_modules/alchemy/engine.js:\n    5  	var pg = require('pg')\n    6  	var bunyan = require('bunyan')\n    7: 	var F = require('functionally')\n    8  \n    9  	var appConfig = require('./config/app')\n\n/home/radu/code/entity-engine/node_modules/alchemy/loggerFactory.js:\n    4  var loggers = {}\n    5  var appConfig = require('./config/app')\n    6: var F = require('functionally')\n    7  \n    8  module.exports = function(name, location){\n\n/home/radu/code/entity-engine/node_modules/alchemy/node_modules/functionally/.idea/.name:\n    1: functionally\n\n/home/radu/code/entity-engine/node_modules/alchemy/node_modules/functionally/.idea/modules.xml:\n    3    <component name=\"ProjectModuleManager\">\n    4      <modules>\n    5:       <module fileurl=\"file://$PROJECT_DIR$/.idea/functionally.iml\" filepath=\"$PROJECT_DIR$/.idea/functionally.iml\" />\n    6      </modules>\n    7    </component>\n\n/home/radu/code/entity-engine/node_modules/alchemy/node_modules/functionally/.idea/workspace.xml:\n    3    <component name=\"ChangeListManager\">\n    4      <list default=\"true\" id=\"70a6e1fe-fed0-4974-97a2-30139578645e\" name=\"Default\" comment=\"\" />\n    5:     <ignored path=\"functionally.iws\" />\n    6      <ignored path=\".idea/workspace.xml\" />\n    7      <option name=\"TRACKING_ENABLED\" value=\"true\" />\n    .\n   20    <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"default_target\" />\n   21    <component name=\"FavoritesManager\">\n   22:     <favorites_list name=\"functionally\" />\n   23    </component>\n   24    <component name=\"FileEditorManager\">\n   ..\n  103            <PATH>\n  104              <PATH_ELEMENT>\n  105:               <option name=\"myItemId\" value=\"functionally\" />\n  106                <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n  107              </PATH_ELEMENT>\n  ...\n  109            <PATH>\n  110              <PATH_ELEMENT>\n  111:               <option name=\"myItemId\" value=\"functionally\" />\n  112                <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n  113              </PATH_ELEMENT>\n  114              <PATH_ELEMENT>\n  115:               <option name=\"myItemId\" value=\"functionally\" />\n  116                <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n  117              </PATH_ELEMENT>\n\n/home/radu/code/entity-engine/node_modules/alchemy/node_modules/functionally/README.md:\n    1: Functionally\n    2  ============\n    3  \n    4  Usage\n    5  ```\n    6: npm install functionally\n    7  ```\n    8  \n    9  ```js\n   10: var F = require('functionally')\n   11  \n   12  function log(msg){\n\n/home/radu/code/entity-engine/node_modules/alchemy/node_modules/functionally/package.json:\n    1  {\n    2:   \"name\": \"functionally\",\n    3    \"version\": \"0.2.1\",\n    4:   \"description\": \"Functionally\\r ============\",\n    5    \"main\": \"index.js\",\n    6    \"scripts\": {\n    .\n   18      \"should\": \"~4.0.4\"\n   19    },\n   20:   \"readme\": \"Functionally\\r\\n============\\r\\n\\r\\nUsage\\r\\n```\\r\\nnpm install functionally\\r\\n```\\r\\n\\r\\n```js\\r\\nvar F = require('functionally')\\r\\n\\r\\nfunction log(msg){\\r\\n    console.log(msg)\\r\\n}\\r\\n\\r\\nfunction greet(name){\\r\\n    return 'Hello ' + name + '!'\\r\\n}\\r\\n\\r\\nvar logGreeting = F.compose(log, greet)\\r\\n\\r\\nlogGreeting('Bob') //console.log('Hello Bob!')\\r\\n\\r\\n```\\r\\n\\r\\n## find(fn, target)\\r\\n\\r\\nReturns the first object in target for which fn returns a truthy value.\\r\\n\\r\\nExample\\r\\n\\r\\n```js\\r\\nF.find(function(obj){\\r\\n    return obj.name == 'js'\\r\\n}, [\\r\\n    {name: 'ruby'},\\r\\n    {name: 'js'},\\r\\n    {name: 'php'},\\r\\n    {name: 'erlang'}\\r\\n])\\r\\n//returns the second object in the array\\r\\n```\\r\\n\\r\\nThe ```find``` function is curried, so you can do\\r\\n```js\\r\\nvar findFirst = F.find(function(value, index, target){\\r\\n    if (index === 0){\\r\\n        return value\\r\\n    }\\r\\n})\\r\\n\\r\\nfindFirst([4,5,6]) == 4\\r\\n```\\r\\n\\r\\n## once(fn)\\r\\n\\r\\nReturns a function that calls fn just once.\\r\\n\\r\\nExample\\r\\n\\r\\n```js\\r\\nvar counter = 0\\r\\n\\r\\nvar inc = F.once(function(){\\r\\n    counter++\\r\\n})\\r\\n\\r\\ninc()\\r\\ncounter == 1\\r\\n\\r\\ninc()\\r\\ninc()\\r\\n\\r\\ncounter == 1\\r\\n```\\r\\n\\r\\nThe function returned by once returns the result of the original function. On subsequent calls, returns the same result.\\r\\n\\r\\n\",\n   21    \"readmeFilename\": \"README.md\",\n   22:   \"_id\": \"functionally@0.2.1\",\n   23    \"dist\": {\n   24      \"shasum\": \"c5007a29593631ff4fc5ce79302113291d1b8135\"\n   25    },\n   26:   \"_from\": \"functionally@0.2.1\",\n   27:   \"_resolved\": \"https://registry.npmjs.org/functionally/-/functionally-0.2.1.tgz\"\n   28  }\n   29  \n\n/home/radu/code/entity-engine/node_modules/alchemy/package.json:\n   18      \"pg\": \"~3.4.0\",\n   19      \"expect.js\": \"^0.3.0\",\n   20:     \"functionally\": \"~0.2.1\",\n   21      \"classy\": \"^1.4.0\",\n   22      \"bluebird\": \"~2.2.2\",\n\n/home/radu/code/entity-engine/node_modules/alchemy/sql/Select.js:\n    1  'use strict'\n    2  \n    3: var F               = require('functionally')\n    4  var defineStatement = require('./defineStatement')\n    5  \n\n/home/radu/code/entity-engine/node_modules/alchemy/sql/Table.js:\n    1  var classy = require('classy')\n    2  var Promise = require('bluebird')\n    3: var F = require('functionally')\n    4  \n    5  var defineElement = require('./defineElement')\n\n/home/radu/code/entity-engine/node_modules/alchemy/sql/types/getType.js:\n    1  var toUpperFirst = require('ustring').toUpperFirst\n    2: var F            = require('functionally')\n    3  var find         = F.find\n    4  var types        = require('./index')\n\n/home/radu/code/entity-engine/node_modules/alchemy/sql/where.js:\n    1: var F               = require('functionally')\n    2  \n    3  module.exports = function(column){\n\n/home/radu/code/entity-engine/node_modules/functionally/.idea/.name:\n    1: functionally\n\n/home/radu/code/entity-engine/node_modules/functionally/.idea/modules.xml:\n    3    <component name=\"ProjectModuleManager\">\n    4      <modules>\n    5:       <module fileurl=\"file://$PROJECT_DIR$/.idea/functionally.iml\" filepath=\"$PROJECT_DIR$/.idea/functionally.iml\" />\n    6      </modules>\n    7    </component>\n\n/home/radu/code/entity-engine/node_modules/functionally/.idea/workspace.xml:\n    3    <component name=\"ChangeListManager\">\n    4      <list default=\"true\" id=\"70a6e1fe-fed0-4974-97a2-30139578645e\" name=\"Default\" comment=\"\" />\n    5:     <ignored path=\"functionally.iws\" />\n    6      <ignored path=\".idea/workspace.xml\" />\n    7      <option name=\"TRACKING_ENABLED\" value=\"true\" />\n    .\n   20    <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"default_target\" />\n   21    <component name=\"FavoritesManager\">\n   22:     <favorites_list name=\"functionally\" />\n   23    </component>\n   24    <component name=\"FileEditorManager\">\n   ..\n  103            <PATH>\n  104              <PATH_ELEMENT>\n  105:               <option name=\"myItemId\" value=\"functionally\" />\n  106                <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n  107              </PATH_ELEMENT>\n  ...\n  109            <PATH>\n  110              <PATH_ELEMENT>\n  111:               <option name=\"myItemId\" value=\"functionally\" />\n  112                <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n  113              </PATH_ELEMENT>\n  114              <PATH_ELEMENT>\n  115:               <option name=\"myItemId\" value=\"functionally\" />\n  116                <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n  117              </PATH_ELEMENT>\n\n/home/radu/code/entity-engine/node_modules/functionally/README.md:\n    1: Functionally\n    2  ============\n    3  \n    4  Usage\n    5  ```\n    6: npm install functionally\n    7  ```\n    8  \n    9  ```js\n   10: var F = require('functionally')\n   11  \n   12  function log(msg){\n\n/home/radu/code/entity-engine/node_modules/functionally/package.json:\n    1  {\n    2:   \"name\": \"functionally\",\n    3    \"version\": \"0.3.1\",\n    4    \"description\": \"\",\n\n/home/radu/code/entity-engine/node_modules/knex/node_modules/liftoff/README.md:\n  191  **Examples using `cwd` and `configPath` together:**\n  192  \n  193: These are functionally identical:\n  194  ```\n  195  myapp --myappfile /var/www/project/Myappfile.js\n\n/home/radu/code/entity-engine/node_modules/knex/node_modules/liftoff/package.json:\n   44      \"extend\": \"~1.2.1\"\n   45    },\n   46:   \"readme\": \"<p align=\\\"center\\\">\\n  <a href=\\\"http://liftoffjs.com\\\">\\n    <img height=\\\"100\\\" width=\\\"297\\\" src=\\\"https://raw.githubusercontent.com/tkellen/node-liftoff/master/artwork/liftoff.png\\\"/>\\n  </a>\\n</p>\\n\\n# liftoff [![Build Status](https://secure.travis-ci.org/tkellen/node-liftoff.png)](http://travis-ci.org/tkellen/node-liftoff)\\n> Launch your command line tool with ease.\\n\\n[![NPM](https://nodei.co/npm/liftoff.png)](https://nodei.co/npm/liftoff/)\\n\\n## What is it?\\n[See this blog post](http://weblog.bocoup.com/building-command-line-tools-in-node-with-liftoff/), [check out this proof of concept](http://github.com/tkellen/node-hacker), or read on.\\n\\nSay you're writing a CLI tool.  Let's call it [hacker](http://github.com/tkellen/node-hacker).  You want to configure it using a `Hackerfile`.  This is node, so you install `hacker` locally for each project you use it in.  But, in order to get the `hacker` command in your PATH, you also install it globally.\\n\\nNow, when you run `hacker`, you want to configure what it does using the `Hackerfile` in your current directory, and you want it to execute using the local installation of your tool.  Also, it'd be nice if the `hacker` command was smart enough to traverse up your folders until it finds a `Hackerfile`&mdash;for those times when you're not in the root directory of your project.  Heck, you might even want to launch `hacker` from a folder outside of your project by manually specifying a working directory.  Liftoff manages this for you.\\n\\nSo, everything is working great.  Now you can find your local `hacker` and `Hackerfile` with ease.  Unfortunately, it turns out you've authored your `Hackerfile` in coffee-script, or some other JS variant.  In order to support *that*, you have to load the compiler for it, and then register the extension for it with node.  Good news, Liftoff can do that, and a whole lot more, too.\\n\\n## API\\n\\n### constructor(opts)\\n\\nCreate an instance of Liftoff to invoke your application.\\n\\nAn example utilizing all options:\\n```js\\nconst Hacker = new Liftoff({\\n  name: 'hacker',\\n  processTitle: 'hacker',\\n  moduleName: 'hacker',\\n  configName: 'hackerfile',\\n  extensions: {\\n    '.js': null,\\n    '.json': null,\\n    '.coffee': 'coffee-script/register'\\n  }\\n});\\n```\\n\\n#### opts.name\\n\\nSugar for setting `processTitle`, `moduleName`, `configName` automatically.\\n\\nType: `String`  \\nDefault: `null`\\n\\nThese are equivalent:\\n```js\\nconst Hacker = Liftoff({\\n  processTitle: 'hacker',\\n  moduleName: 'hacker',\\n  configName: 'hackerfile'\\n});\\n```\\n```js\\nconst Hacker = Liftoff({name:'hacker'});\\n```\\n\\n#### opts.moduleName\\n\\nSets which module your application expects to find locally when being run.\\n\\nType: `String`  \\nDefault: `null`\\n\\n#### opts.configName\\n\\nSets the name of the configuration file Liftoff will attempt to find.  Case-insensitive.\\n\\nType: `String`  \\nDefault: `null`\\n\\n#### opts.extensions\\n\\nSet extensions to include when searching for a configuration file.  If an external module is needed to load a given extension (e.g. `.coffee`), the module name should be specified as the value for the key.\\n\\nType: `Object`  \\nDefault: `{\\\".js\\\":null,\\\".json\\\":null}`\\n\\n**Examples:**\\n\\nIn this example Liftoff will look for `myappfile{.js,.json,.coffee}`.  If a config with the extension `.coffee` is found, Liftoff will try to require `coffee-script/require` from the current working directory.\\n```js\\nconst MyApp = new Liftoff({\\n  name: 'myapp'\\n  extensions: {\\n    '.js': null,\\n    '.json': null,\\n    '.coffee': 'coffee-script/register'\\n  }\\n});\\n```\\n\\nIn this example, Liftoff will look for `.myapp{rc}`.\\n```js\\nconst MyApp = new Liftoff({\\n  name: 'myapp',\\n  configName: '.myapp',\\n  extensions: {\\n    'rc': null\\n  }\\n});\\n```\\n\\nIn this example, Liftoff will automatically attempt to load the correct module for any javascript variant supported by [node-interpret](https://github.com/tkellen/node-interpret) (as long as it does not require a register method).\\n\\n```js\\nconst MyApp = new Liftoff({\\n  name: 'myapp',\\n  extensions: require('interpret').jsVariants\\n});\\n```\\n\\n#### opts.processTitle\\n\\nSets what the [process title](http://nodejs.org/api/process.html#process_process_title) will be.\\n\\nType: `String`  \\nDefault: `null`\\n\\n#### opts.completions(type)\\n\\nA method to handle bash/zsh/whatever completions.\\n\\nType: `Function`  \\nDefault: `null`\\n\\n## launch(opts, callback(env))\\nLaunches your application with provided options, builds an environment, and invokes your callback, passing the calculated environment as the first argument.\\n\\n##### Example Configuration w/ Options Parsing:\\n```js\\nconst Liftoff = require('liftoff');\\nconst MyApp = new Liftoff({name:'myapp'});\\nconst argv = require('minimist')(process.argv.slice(2));\\nconst invoke = function (env) {\\n  console.log('my environment is:', env);\\n  console.log('my cli options are:', argv);\\n  console.log('my liftoff config is:', this);\\n};\\nMyApp.launch({\\n  cwd: argv.cwd,\\n  configPath: argv.myappfile,\\n  require: argv.require,\\n  completion: argv.completion\\n}, invoke);\\n```\\n\\n#### opts.cwd\\n\\nChange the current working directory for this launch. Relative paths are calculated against `process.cwd()`.\\n\\nType: `String`  \\nDefault: `process.cwd()`\\n\\n**Example Configuration:**\\n```js\\nconst argv = require('minimist')(process.argv.slice(2));\\nMyApp.launch({\\n  cwd: argv.cwd\\n}, invoke);\\n```\\n\\n**Matching CLI Invocation:**\\n```\\nmyapp --cwd ../\\n```\\n\\n#### opts.configPath\\n\\nDon't search for a config, use the one provided. **Note:** Liftoff will assume the current working directory is the directory containing the config file unless an alternate location is explicitly specified using `cwd`.\\n\\nType: `String`  \\nDefault: `null`\\n\\n**Example Configuration:**\\n```js\\nvar argv = require('minimist')(process.argv.slice(2));\\nMyApp.launch({\\n  configPath: argv.myappfile\\n}, invoke);\\n```\\n\\n**Matching CLI Invocation:**\\n```\\nmyapp --myappfile /var/www/project/Myappfile.js\\n```\\n\\n**Examples using `cwd` and `configPath` together:**\\n\\nThese are functionally identical:\\n```\\nmyapp --myappfile /var/www/project/Myappfile.js\\nmyapp --cwd /var/www/project\\n```\\n\\nThese can run myapp from a shared directory as though it were located in another project:\\n```\\nmyapp --myappfile /Users/name/Myappfile.js --cwd /var/www/project1\\nmyapp --myappfile /Users/name/Myappfile.js --cwd /var/www/project2\\n```\\n\\n#### opts.require\\n\\nA string or array of modules to attempt requiring from the local working directory before invoking the launch callback.\\n\\nType: `String|Array`  \\nDefault: `null`\\n\\n**Example Configuration:**\\n```js\\nvar argv = require('minimist')(process.argv.slice(2));\\nMyApp.launch({\\n  require: argv.require\\n}, invoke);\\n```\\n\\n**Matching CLI Invocation:**\\n```js\\nmyapp --require coffee-script/register\\n```\\n\\n#### callback(env)\\n\\nA function to start your application.  When invoked, `this` will be your instance of Liftoff. The `env` param will contain the following keys:\\n\\n- `cwd`: the current working directory\\n- `require`: an array of modules that liftoff tried to pre-load\\n- `configNameRegex`: the regular expression used to find your config file\\n- `configPath`: the full path to your configuration file (if found)\\n- `configBase`: the base directory of your configuration file (if found)\\n- `modulePath`: the full path to the local module your project relies on (if found)\\n- `modulePackage`: the contents of the local module's package.json (if found)\\n\\n### events\\n\\n#### require(name, module)\\n\\nEmitted when a module is pre-loaded.\\n\\n```js\\nvar Hacker = new Liftoff({name:'hacker'});\\nHacker.on('require', function (name, module) {\\n  console.log('Requiring external module: '+name+'...');\\n  // automatically register coffee-script extensions\\n  if (name === 'coffee-script') {\\n    module.register();\\n  }\\n});\\n```\\n\\n#### requireFail(name, err)\\n\\nEmitted when a requested module cannot be preloaded.\\n\\n```js\\nvar Hacker = new Liftoff({name:'hacker'});\\nHacker.on('requireFail', function (name, err) {\\n  console.log('Unable to load:', name, err);\\n});\\n```\\n\\n## Examples\\n\\nCheck out how [gulp](https://github.com/gulpjs/gulp/blob/master/bin/gulp.js) uses Liftoff.\\n\\nFor a bare-bones example, try [the hacker project](https://github.com/tkellen/node-hacker/blob/master/bin/hacker.js).\\n\\nTo try the example, do the following:\\n\\n1. Install the sample project `hacker` with `npm install -g hacker`.\\n2. Make a `Hackerfile.js` with some arbitrary javascript it.\\n3. Install hacker next to it with `npm install hacker`.\\n3. Run `hacker` while in the same parent folder.\\n\",\n   47    \"readmeFilename\": \"README.md\",\n   48    \"_id\": \"liftoff@0.11.3\",\n\n/home/radu/code/entity-engine/objects/properties/validation.js:\n    1  'use strict'\n    2  \n    3: var F = require('functionally')\n    4  \n    5  function validatingFunction(){\n\n/home/radu/code/entity-engine/package.json:\n   15      \"classy\": \"^1.4.2\",\n   16      \"newify\": \"^1.0.0\",\n   17:     \"functionally\": \"^0.2.0\",\n   18      \"bunyan\": \"~0.23.1\",\n   19      \"bcrypt\": \"~0.7.8\",\n\n48 matches across 26 files\n\n\nSearching 2811 files for \"functionally\"\n\n/home/radu/code/i-s/node_modules/functionally/.idea/.name:\n    1: functionally\n\n/home/radu/code/i-s/node_modules/functionally/.idea/modules.xml:\n    3    <component name=\"ProjectModuleManager\">\n    4      <modules>\n    5:       <module fileurl=\"file://$PROJECT_DIR$/.idea/functionally.iml\" filepath=\"$PROJECT_DIR$/.idea/functionally.iml\" />\n    6      </modules>\n    7    </component>\n\n/home/radu/code/i-s/node_modules/functionally/.idea/workspace.xml:\n    3    <component name=\"ChangeListManager\">\n    4      <list default=\"true\" id=\"70a6e1fe-fed0-4974-97a2-30139578645e\" name=\"Default\" comment=\"\" />\n    5:     <ignored path=\"functionally.iws\" />\n    6      <ignored path=\".idea/workspace.xml\" />\n    7      <option name=\"TRACKING_ENABLED\" value=\"true\" />\n    .\n   20    <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"default_target\" />\n   21    <component name=\"FavoritesManager\">\n   22:     <favorites_list name=\"functionally\" />\n   23    </component>\n   24    <component name=\"FileEditorManager\">\n   ..\n  103            <PATH>\n  104              <PATH_ELEMENT>\n  105:               <option name=\"myItemId\" value=\"functionally\" />\n  106                <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n  107              </PATH_ELEMENT>\n  ...\n  109            <PATH>\n  110              <PATH_ELEMENT>\n  111:               <option name=\"myItemId\" value=\"functionally\" />\n  112                <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.ProjectViewProjectNode\" />\n  113              </PATH_ELEMENT>\n  114              <PATH_ELEMENT>\n  115:               <option name=\"myItemId\" value=\"functionally\" />\n  116                <option name=\"myItemType\" value=\"com.intellij.ide.projectView.impl.nodes.PsiDirectoryNode\" />\n  117              </PATH_ELEMENT>\n\n/home/radu/code/i-s/node_modules/functionally/README.md:\n    1: Functionally\n    2  ============\n    3  \n    4  Usage\n    5  ```\n    6: npm install functionally\n    7  ```\n    8  \n    9  ```js\n   10: var F = require('functionally')\n   11  \n   12  function log(msg){\n\n/home/radu/code/i-s/node_modules/functionally/package.json:\n    1  {\n    2:   \"name\": \"functionally\",\n    3    \"version\": \"0.3.1\",\n    4:   \"description\": \"Functionally\\r ============\",\n    5    \"main\": \"index.js\",\n    6    \"scripts\": {\n    .\n   18      \"should\": \"~4.0.4\"\n   19    },\n   20:   \"readme\": \"Functionally\\r\\n============\\r\\n\\r\\nUsage\\r\\n```\\r\\nnpm install functionally\\r\\n```\\r\\n\\r\\n```js\\r\\nvar F = require('functionally')\\r\\n\\r\\nfunction log(msg){\\r\\n    console.log(msg)\\r\\n}\\r\\n\\r\\nfunction greet(name){\\r\\n    return 'Hello ' + name + '!'\\r\\n}\\r\\n\\r\\nvar logGreeting = F.compose(log, greet)\\r\\n\\r\\nlogGreeting('Bob') //console.log('Hello Bob!')\\r\\n\\r\\n```\\r\\n\\r\\n## find(fn, target)\\r\\n\\r\\nReturns the first object in target for which fn returns a truthy value.\\r\\n\\r\\nExample\\r\\n\\r\\n```js\\r\\nF.find(function(obj){\\r\\n    return obj.name == 'js'\\r\\n}, [\\r\\n    {name: 'ruby'},\\r\\n    {name: 'js'},\\r\\n    {name: 'php'},\\r\\n    {name: 'erlang'}\\r\\n])\\r\\n//returns the second object in the array\\r\\n```\\r\\n\\r\\nThe ```find``` function is curried, so you can do\\r\\n```js\\r\\nvar findFirst = F.find(function(value, index, target){\\r\\n    if (index === 0){\\r\\n        return value\\r\\n    }\\r\\n})\\r\\n\\r\\nfindFirst([4,5,6]) == 4\\r\\n```\\r\\n\\r\\n## once(fn)\\r\\n\\r\\nReturns a function that calls fn just once.\\r\\n\\r\\nExample\\r\\n\\r\\n```js\\r\\nvar counter = 0\\r\\n\\r\\nvar inc = F.once(function(){\\r\\n    counter++\\r\\n})\\r\\n\\r\\ninc()\\r\\ncounter == 1\\r\\n\\r\\ninc()\\r\\ninc()\\r\\n\\r\\ncounter == 1\\r\\n```\\r\\n\\r\\nThe function returned by once returns the result of the original function. On subsequent calls, returns the same result.\\r\\n\\r\\n## maxArgs(fn, count)\\r\\n\\r\\nIf you use parseInt as the parameter to array.map, you get an undesired result\\r\\n```js\\r\\n['1','2','3'].map(parseInt)\\r\\n//[1, NaN, NaN]\\r\\n```\\r\\nBut if you use maxArgs:\\r\\n\\r\\n```js\\r\\nvar parseInt = F.maxArgs(parseInt, 1)\\r\\n['1','2','3'].map(parseInt)\\r\\n//you get [1,2,3], the expected result\\r\\n```\",\n   21    \"readmeFilename\": \"README.md\",\n   22:   \"_id\": \"functionally@0.3.1\",\n   23:   \"_from\": \"functionally@~0.3.1\"\n   24  }\n   25  \n\n/home/radu/code/i-s/package.json:\n   27    },\n   28    \"dependencies\": {\n   29:     \"functionally\": \"~0.3.1\"\n   30    },\n   31    \"author\": \"Radu Brehar\",\n\n19 matches across 6 files\n\n\nSearching 13 files for \"functionally\"\n\n0 matches across 0 files\n",
			"settings":
			{
				"buffer_size": 23102,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "index.js",
			"settings":
			{
				"buffer_size": 33,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/index.js",
			"settings":
			{
				"buffer_size": 489,
				"line_ending": "Unix"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 1355,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/number.js",
			"settings":
			{
				"buffer_size": 105,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/numeric.js",
			"settings":
			{
				"buffer_size": 111,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/array.js",
			"settings":
			{
				"buffer_size": 81,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/int.js",
			"settings":
			{
				"buffer_size": 143,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/float.js",
			"settings":
			{
				"buffer_size": 181,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/string.js",
			"settings":
			{
				"buffer_size": 85,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/boolean.js",
			"settings":
			{
				"buffer_size": 86,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/function.js",
			"settings":
			{
				"buffer_size": 160,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/date.js",
			"settings":
			{
				"buffer_size": 156,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/object.js",
			"settings":
			{
				"buffer_size": 158,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/regexp.js",
			"settings":
			{
				"buffer_size": 158,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/arguments.js",
			"settings":
			{
				"buffer_size": 179,
				"line_ending": "Unix"
			}
		},
		{
			"file": "test/TestAll.js",
			"settings":
			{
				"buffer_size": 3141,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 312.0,
		"selected_items":
		[
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"du",
				"File: Duplicate"
			],
			[
				"dup",
				"File: Duplicate"
			],
			[
				"rena",
				"File: Rename"
			],
			[
				"dele",
				"File: Delete"
			],
			[
				"ss plpl",
				"Set Syntax: PL/pgSQL (Postgres)"
			],
			[
				"move",
				"File: Move"
			],
			[
				"ss plp",
				"Set Syntax: PL/pgSQL (Postgres)"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"ss sql",
				"Set Syntax: SQL"
			],
			[
				"del",
				"File: Delete"
			],
			[
				"markd",
				"Markdown Preview: Preview in Browser"
			],
			[
				"markdo",
				"Markdown Preview: Preview in Browser"
			],
			[
				"rename",
				"File: Rename"
			],
			[
				"mini",
				"View: Toggle Minimap"
			],
			[
				"re",
				"File: Rename"
			],
			[
				"renam",
				"File: Rename"
			],
			[
				"delete",
				"File: Delete"
			],
			[
				"ss javas",
				"Set Syntax: JavaScript"
			],
			[
				"ss json",
				"Set Syntax: JSON"
			],
			[
				"ss pla",
				"Set Syntax: Plain Text"
			],
			[
				"ren",
				"File: Rename"
			],
			[
				"word",
				"Word Wrap: Toggle"
			],
			[
				"ss jso",
				"Set Syntax: JSON"
			],
			[
				"ss js",
				"Set Syntax: Java Server Page (JSP)"
			],
			[
				"markdow",
				"Markdown Preview: Preview in Browser"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"ss sa",
				"Set Syntax: Sass"
			],
			[
				"ss sty",
				"Set Syntax: Stylus"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"ss java",
				"Set Syntax: JavaScript"
			],
			[
				"ss javasc",
				"Set Syntax: JavaScript"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"ss live",
				"Set Syntax: LiveScript"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/radu/code/i-s/test/TestAll.js",
		"/home/radu/code/i-s/node_modules/browserify/test/tr_error.js",
		"/home/radu/code/i-s/index.js",
		"/home/radu/code/correct/src/newType.js",
		"/home/radu/code/correct/Makefile",
		"/home/radu/code/correct/node_modules/should/should.js",
		"/home/radu/code/correct/test/string/StringTests.js",
		"/home/radu/code/entity-engine/api/record/create.js",
		"/home/radu/code/entity-engine/node_modules/pg/test/integration/client/results-as-array-tests.js",
		"/home/radu/code/entity-engine/copy.js",
		"/home/radu/code/entity-engine/API.md",
		"/home/radu/code/entity-engine/api/index.js",
		"/home/radu/code/entity-engine/alchemy.js",
		"/home/radu/code/entity-engine/objects/helpers/index.js",
		"/home/radu/code/entity-engine/objects/ObjectBase.js",
		"/home/radu/code/entity-engine/ObjectBase.js",
		"/home/radu/code/entity-engine/objects/helpers/object.getByName.js",
		"/home/radu/code/entity-engine/index.js",
		"/home/radu/code/entity-engine/node_modules/alchemy/alchemy.sublime-project",
		"/home/radu/code/entity-engine/api/ObjectBase.js",
		"/home/radu/code/entity-engine/ObjectBase.bak.js",
		"/home/radu/code/entity-engine/db-scripts/utils.sql",
		"/home/radu/code/entity-engine/node_modules/bunyan/node_modules/dtrace-provider/libusdt/usdt_tracepoints_i386.s",
		"/home/radu/code/entity-engine/node_modules/pg/test/unit/utils-tests.js",
		"/home/radu/code/entity-engine/node_modules/pg/script/dump-db-types.js",
		"/home/radu/code/entity-engine/DB.MD",
		"/home/radu/code/entity-engine/objects/properties/toSql.js",
		"/home/radu/code/entity-engine/package.json",
		"/home/radu/code/entity-engine/meta/config.js",
		"/home/radu/code/entity-engine/init/README.md",
		"/home/radu/code/entity-engine/objects/User.js",
		"/home/radu/code/entity-engine/api/object/create.js",
		"/home/radu/code/entity-engine/defineObject.js",
		"/home/radu/code/entity-engine/api/helpers/paginate.js",
		"/home/radu/code/entity-engine/db-scripts/drop.sql",
		"/home/radu/code/entity-engine/api/helpers/selectBy.js",
		"/home/radu/code/entity-engine/api/object/getBy.js",
		"/home/radu/code/entity-engine/api/MetaTable.js",
		"/home/radu/code/entity-engine/db-scripts/test.sql",
		"/home/radu/code/entity-engine/node_modules/alchemy/node_modules/pg/script/travis-pg-9.2-install.sh",
		"/home/radu/code/entity-engine/node_modules/alchemy/getInstantiatorFunction.js",
		"/home/radu/code/entity-engine/node_modules/alchemy/test/InsertTests.js",
		"/home/radu/code/entity-engine/node_modules/alchemy/Insert.js",
		"/home/radu/code/entity-engine/config/index.js",
		"/home/radu/code/entity-engine/api/helpers/filterOnUser.js",
		"/home/radu/code/entity-engine/loggerFactory.js",
		"/home/radu/code/entity-engine/node_modules/functionally/functionally.sublime-project",
		"/home/radu/code/entity-engine/meta/ensureColumns.js",
		"/home/radu/code/entity-engine/init/03.initMetaData.js",
		"/home/radu/code/entity-engine/node_modules/classy/test/DefineTests.js",
		"/home/radu/code/entity-engine/test/DefineEntityTests.js",
		"/home/radu/code/entity-engine/api/helpers/entityToJson.js",
		"/home/radu/code/entity-engine/api/helpers/select.js",
		"/home/radu/code/entity-engine/api/getByName.js",
		"/home/radu/code/entity-engine/api/object/list.js",
		"/home/radu/code/entity-engine/init/02.initMetaTables.js",
		"/home/radu/code/entity-hapi/node_modules/entity-engine/config/index.js",
		"/home/radu/code/entity-engine/api/helpers/paginateSelect.js",
		"/home/radu/code/entity-engine/init/index.js",
		"/home/radu/code/entity-engine/init/01.initDb.js",
		"/home/radu/code/entity-engine/passwd/genSaltedPassword.js",
		"/home/radu/code/entity-engine/api/object/getById.js",
		"/home/radu/code/entity-engine/init/b.02.js",
		"/home/radu/code/entity-engine/entity.js",
		"/home/radu/code/entity-engine/meta/defineTable.js",
		"/home/radu/code/entity-engine/utils/uuid-gen.js",
		"/home/radu/code/entity-engine/meta/getObjectTypeId.js",
		"/home/radu/code/entity-engine/meta/addObjectMeta.js",
		"/home/radu/code/entity-engine/logs/entity.log",
		"/home/radu/code/entity-engine/Makefile",
		"/home/radu/code/entity-engine/meta/ObjectType.table.js",
		"/home/radu/code/entity-engine/meta/Object.table.js",
		"/home/radu/code/entity-engine/init/04.createUsers.js",
		"/home/radu/code/entity-hapi/node_modules/entity-engine/init/index.js",
		"/home/radu/code/entity-engine/node_modules/classy/src/core/canGetOwnPropertyDescriptor.js",
		"/home/radu/code/entity-engine/node_modules/alchemy/node_modules/classy/node_modules/newify/getInstantiatorFunction.js",
		"/home/radu/code/entity-engine/node_modules/alchemy/node_modules/pg/test/integration/connection-pool/optional-config-tests.js",
		"/home/radu/code/entity-engine/node_modules/classy/test/mixins/MixinInitOnTests.js",
		"/home/radu/code/entity-engine/node_modules/classy/src/isSubclassOf.js",
		"/home/radu/code/entity-engine/node_modules/classy/test/ClassInheritanceTests.js",
		"/home/radu/code/entity-engine/node_modules/alchemy/alchemy.js",
		"/home/radu/code/entity-engine/logs/alchemy-sql.log",
		"/home/radu/code/entity-engine/node_modules/alchemy/sql/types/getType.js",
		"/home/radu/code/entity-engine/node_modules/should/gulpfile.js",
		"/home/radu/code/throwy/.exit",
		"/home/radu/code/entity-engine/logs/alchemy-main.log",
		"/home/radu/code/entity-engine/node_modules/alchemy/loggerFactory.js",
		"/home/radu/code/entity-engine/cache/object.js",
		"/home/radu/code/entity-engine/addObjectMeta.js",
		"/home/radu/code/entity-engine/api/object/x.js",
		"/home/radu/code/entity-engine/meta/index.js",
		"/home/radu/code/entity-engine/proxy.js",
		"/home/radu/code/entity-engine/node_modules/should/CONTRIBUTING.md",
		"/home/radu/code/entity-engine/init/createUsers.03.js",
		"/home/radu/code/entity-engine/api/object/delete.js",
		"/home/radu/code/entity-engine/MetaTable.js",
		"/home/radu/code/entity-engine/node_modules/alchemy/sql/types/defineType.js",
		"/home/radu/code/entity-engine/node_modules/mocha/node_modules/mkdirp/test/umask_sync.js",
		"/home/radu/code/entity-engine/node_modules/alchemy/node_modules/pg/node_modules/pgpass/node_modules/split/node_modules/through/test/index.js",
		"/home/radu/code/entity-engine/node_modules/alchemy/node_modules/pg/test/integration/client/row-description-on-results-tests.js",
		"/home/radu/code/entity-engine/README.md",
		"/home/radu/code/entity-engine/node_modules/bunyan/examples/long-running.js",
		"/home/radu/code/entity-engine/api/helpers/MetaTable.js",
		"/home/radu/code/entity-engine/node_modules/mocha/node_modules/jade/node_modules/mkdirp/.gitignore.orig",
		"/home/radu/code/entity-engine/node_modules/bunyan/node_modules/dtrace-provider/.gitmodules",
		"/home/radu/code/entity-engine/node_modules/bcrypt/.npmignore",
		"/home/radu/code/entity-engine/node_modules/node-sass/libsass/color_names.hpp",
		"/home/radu/code/entity-engine/entity-engine.sublime-project",
		"/home/radu/code/entity-engine/node_modules/newify/node_modules/tape/test/exit/second.js",
		"/home/radu/code/entity-engine/node_modules/gulp/node_modules/liftoff/node_modules/findup-sync/node_modules/glob/node_modules/minimatch/test/extglob-ending-with-state-char.js",
		"/home/radu/code/entity-engine/node_modules/newify/node_modules/tape/node_modules/deep-equal/example/cmp.js",
		"/home/radu/code/entity-engine/entities/User.js",
		"/home/radu/code/entity-engine/EntityBase.js",
		"/home/radu/code/entity-engine/node_modules/nib/node_modules/stylus/node_modules/cssom/lib/CSSMediaRule.js",
		"/home/radu/code/entity-engine/node_modules/hapi/test/clientTimeout.js",
		"/home/radu/code/entity-engine/init/initMetaTable.01.js",
		"/home/radu/code/entity-engine/api/getById.js",
		"/home/radu/code/entity-engine/getMetaTable.js",
		"/home/radu/code/entity-engine/node_modules/nib/lib/nib/color-image.styl",
		"/home/radu/code/entity-engine/addEntityMeta.js",
		"/home/radu/code/entity-engine/node_modules/express/lib/middleware/init.js",
		"/home/radu/code/entity-engine/init/createUsers.02.js",
		"/home/radu/code/entity-engine/api/getBy.js",
		"/home/radu/code/entity-engine/node_modules/alchemy/Column.js",
		"/home/radu/code/entity-engine/node_modules/gulp/node_modules/vinyl-fs/node_modules/glob-watcher/node_modules/gaze/node_modules/globule/test/globule_test.js",
		"/home/radu/code/entity-engine/node_modules/stylus/lib/nodes/group.js",
		"/home/radu/code/entity-engine/node_modules/node-sass/media/logo.svg",
		"/home/radu/code/entity-engine/node_modules/node-sass/libsass/utf8_string.cpp"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"/home/radu/code/i-s/src",
			"/home/radu/code/i-s",
			"/home/radu/code/entity-engine",
			"/home/radu/code/entity-engin",
			"/home/radu/code/entity-hapi",
			"/home/radu/code/entity-engine",
			"/home/radu/code/entity-hapi",
			"/home/radu/code/entity-engine",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"functionally",
			"==",
			"number",
			"true",
			"int",
			"number",
			"numeric",
			"scripts",
			"boolean",
			"arguments",
			"object",
			"function",
			"string",
			"array",
			"string",
			"v",
			"type(",
			"types",
			"is_min_len",
			"f_add_meta",
			"f_add_meta_constraints",
			"f_create_object",
			"username",
			"f_add_meta_columns",
			"f_create_table",
			"list",
			"curl ",
			"curl",
			"*",
			"min",
			"this",
			"fns",
			"initProperties",
			"initTable",
			"f_fill_db_meta",
			"f_enforce_meta_tables",
			"f_create_users_table",
			"add_meta_columns",
			"f_add_meta_columns",
			"fill_db_meta",
			"enforce_meta_fkeys",
			"admin_id",
			"fill_db_meta",
			"create_meta_schema",
			"create_users_table",
			"create_meta_schema",
			"PERFORM",
			"object_user",
			"create_constrained_table",
			"enforce_meta_fkeys",
			"create_users_table",
			"EXECUTE",
			"enforce_meta_fkeys",
			"create_users_table",
			"create_meta_schema",
			"create_users_table",
			"created_date",
			"type",
			"varchar",
			"create_tab",
			"create_db",
			"ObjectType.table",
			"arr",
			"createdByLength",
			"lastModifiedByLength",
			"name",
			"initTable",
			"create",
			"default",
			"defaults",
			"Column",
			"create logger",
			"addObjectMeta",
			"addobjectm",
			"log(",
			"alchemy",
			"create",
			"state",
			"ObjectTable",
			"ObjectMetaTable",
			"ObjectTypeMetaTable",
			"defineTable",
			"Table",
			"throwy",
			"CONFIG",
			"))\n",
			"JsonColumn",
			"EntityBase",
			"defineObject",
			"CONFIG",
			"Promise",
			"metaTable",
			"addObjectMeta",
			"name",
			"getMetaTable",
			"UUIDColumn",
			"addObjectMeta",
			"addEntityMeta",
			"tableName",
			"defineEntity",
			"EntityBase",
			"newify",
			"cacheEntity",
			"entity",
			"Entity",
			"EntityError",
			"EntityBase",
			"defineEntity",
			"entity",
			"entities/",
			"require('newify",
			"throw new Erro",
			"Transaction",
			"Column",
			"json",
			"value",
			"CREATE",
			"jsonb",
			"* 1",
			"*1",
			"* 1",
			"got haha",
			"except",
			"console.log('id is",
			"create",
			"addEntityMeta",
			"metadatatablename",
			"metadata_entity_list"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 7,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 217,
						"regions":
						{
						},
						"selection":
						[
							[
								111,
								111
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 864,
						"regions":
						{
						},
						"selection":
						[
							[
								546,
								546
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 23102,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										124,
										136
									],
									[
										272,
										284
									],
									[
										457,
										469
									],
									[
										724,
										736
									],
									[
										846,
										858
									],
									[
										1079,
										1091
									],
									[
										1315,
										1327
									],
									[
										1486,
										1498
									],
									[
										1723,
										1735
									],
									[
										1771,
										1783
									],
									[
										2110,
										2122
									],
									[
										2410,
										2422
									],
									[
										2611,
										2623
									],
									[
										2900,
										2912
									],
									[
										3159,
										3171
									],
									[
										3422,
										3434
									],
									[
										3506,
										3518
									],
									[
										3575,
										3587
									],
									[
										3743,
										3755
									],
									[
										3812,
										3824
									],
									[
										3961,
										3973
									],
									[
										4025,
										4037
									],
									[
										4078,
										4090
									],
									[
										5350,
										5362
									],
									[
										5485,
										5497
									],
									[
										5556,
										5568
									],
									[
										5571,
										5583
									],
									[
										5751,
										5763
									],
									[
										5973,
										5985
									],
									[
										6223,
										6235
									],
									[
										6467,
										6479
									],
									[
										6664,
										6676
									],
									[
										6806,
										6818
									],
									[
										7022,
										7034
									],
									[
										7070,
										7082
									],
									[
										7388,
										7400
									],
									[
										7688,
										7700
									],
									[
										7889,
										7901
									],
									[
										8178,
										8190
									],
									[
										8437,
										8449
									],
									[
										8679,
										8691
									],
									[
										8763,
										8775
									],
									[
										8832,
										8844
									],
									[
										8979,
										8991
									],
									[
										9216,
										9228
									],
									[
										15541,
										15553
									],
									[
										18296,
										18308
									],
									[
										18476,
										18488
									],
									[
										18701,
										18713
									],
									[
										18907,
										18919
									],
									[
										18955,
										18967
									],
									[
										19263,
										19275
									],
									[
										19563,
										19575
									],
									[
										19764,
										19776
									],
									[
										20053,
										20065
									],
									[
										20312,
										20324
									],
									[
										20544,
										20556
									],
									[
										20628,
										20640
									],
									[
										20697,
										20709
									],
									[
										20834,
										20846
									],
									[
										20903,
										20915
									],
									[
										21052,
										21064
									],
									[
										21116,
										21128
									],
									[
										21169,
										21181
									],
									[
										22775,
										22787
									],
									[
										22815,
										22827
									],
									[
										22939,
										22951
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								23100,
								23100
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 8694.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 33,
						"regions":
						{
						},
						"selection":
						[
							[
								31,
								31
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 489,
						"regions":
						{
						},
						"selection":
						[
							[
								13,
								13
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1355,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"parser": "markdown",
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"target": "disk"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/number.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 105,
						"regions":
						{
						},
						"selection":
						[
							[
								105,
								105
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/numeric.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 111,
						"regions":
						{
						},
						"selection":
						[
							[
								107,
								107
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/array.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 81,
						"regions":
						{
						},
						"selection":
						[
							[
								78,
								78
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/int.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 143,
						"regions":
						{
						},
						"selection":
						[
							[
								143,
								143
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/float.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 181,
						"regions":
						{
						},
						"selection":
						[
							[
								181,
								181
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/string.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 85,
						"regions":
						{
						},
						"selection":
						[
							[
								82,
								82
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "src/boolean.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 86,
						"regions":
						{
						},
						"selection":
						[
							[
								83,
								83
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "src/function.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 160,
						"regions":
						{
						},
						"selection":
						[
							[
								160,
								160
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "src/date.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 156,
						"regions":
						{
						},
						"selection":
						[
							[
								152,
								152
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "src/object.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 158,
						"regions":
						{
						},
						"selection":
						[
							[
								154,
								154
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "src/regexp.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 158,
						"regions":
						{
						},
						"selection":
						[
							[
								156,
								156
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "src/arguments.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 179,
						"regions":
						{
						},
						"selection":
						[
							[
								170,
								170
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 1,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 864,
						"regions":
						{
						},
						"selection":
						[
							[
								662,
								662
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 217,
						"regions":
						{
						},
						"selection":
						[
							[
								217,
								217
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 489,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "test/TestAll.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3141,
						"regions":
						{
						},
						"selection":
						[
							[
								183,
								183
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clipboard_manager":
	{
		"height": 118.0
	},
	"output.exec":
	{
		"height": 328.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.haskell_sublime_load":
	{
		"height": 118.0
	},
	"project": "is.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"pac",
				"package.json"
			],
			[
				"pa",
				"package.json"
			],
			[
				"rea",
				"README.md"
			],
			[
				"make",
				"Makefile"
			],
			[
				"packa",
				"package.json"
			],
			[
				"testa",
				"test/TestAll.js"
			],
			[
				"inde",
				"src/index.js"
			],
			[
				"index",
				"index.js"
			],
			[
				"string",
				"test/string/StringTests.js"
			],
			[
				"query",
				"query.js"
			],
			[
				"create",
				"api/object/create.js"
			],
			[
				"api.md",
				"API.md"
			],
			[
				"objectb",
				"ObjectBase.js"
			],
			[
				"api.",
				"API.md"
			],
			[
				"user",
				"objects/User.js"
			],
			[
				"utils",
				"db-scripts/utils.sql"
			],
			[
				"db-s",
				"db-scripts/create.sql"
			],
			[
				"object",
				"ObjectBase.js"
			],
			[
				"config",
				"config/index.js"
			],
			[
				"db",
				"DB.MD"
			],
			[
				"configin",
				"config/index.js"
			],
			[
				"filtero",
				"api/helpers/filterOnUser.js"
			],
			[
				"defineo",
				"defineObject.js"
			],
			[
				"configindex",
				"config/index.js"
			],
			[
				"getob",
				"meta/getObjectTypeId.js"
			],
			[
				"alche",
				"alchemy.js"
			],
			[
				"addobje",
				"addObjectMeta.js"
			],
			[
				"addob",
				"addObjectMeta.js"
			],
			[
				"ob",
				"ObjectBase.js"
			],
			[
				"logger",
				"loggerFactory.js"
			],
			[
				"object.ta",
				"meta/Object.table.js"
			],
			[
				"objectt",
				"meta/ObjectType.table.js"
			],
			[
				"db.",
				"DB.MD"
			],
			[
				"metata",
				"MetaTable.js"
			],
			[
				"adden",
				"addEntityMeta.js"
			],
			[
				"entity",
				"EntityBase.js"
			],
			[
				"metat",
				"MetaTable.js"
			],
			[
				"getme",
				"getMetaTable.js"
			],
			[
				"ent",
				"EntityBase.js"
			],
			[
				"users",
				"entities/User.js"
			],
			[
				"entityb",
				"EntityBase.js"
			],
			[
				"getby",
				"api/entity/getById.js"
			],
			[
				"get",
				"getMetaTable.js"
			],
			[
				"configinde",
				"config/index.js"
			],
			[
				"addent",
				"addEntityMeta.js"
			],
			[
				"adde",
				"addEntityMeta.js"
			],
			[
				"initme",
				"init/initMetaTable.01.js"
			],
			[
				"getm",
				"getMetaTable.js"
			],
			[
				"init",
				"node_modules/express/lib/middleware/init.js"
			],
			[
				"addm",
				"addEntityMeta.js"
			],
			[
				"select",
				"api/helpers/selectBy.js"
			],
			[
				"getb",
				"api/getById.js"
			],
			[
				"addentt",
				"addEntityMeta.js"
			],
			[
				"entit",
				"EntityBase.js"
			],
			[
				"definee",
				"defineEntity.js"
			],
			[
				"getmeta",
				"getMetaTable.js"
			],
			[
				"pagina",
				"api/helpers/paginate.js"
			],
			[
				"loggerf",
				"loggerFactory.js"
			],
			[
				"initindex",
				"init/index.js"
			],
			[
				"selectb",
				"api/helpers/selectBy.js"
			],
			[
				"sele",
				"api/helpers/selectBy.js"
			],
			[
				"paginates",
				"api/helpers/paginateSelect.js"
			],
			[
				"api",
				"api/index.js"
			],
			[
				"list",
				"api/list.js"
			],
			[
				"entitto",
				"api/helpers.js/entityToJson.js"
			],
			[
				"enti",
				"EntityBase.js"
			],
			[
				"entityt",
				"api/helpers.js/entityToJson.js"
			],
			[
				"eba",
				"EntityBase.js"
			],
			[
				"addenti",
				"addEntityMeta.js"
			],
			[
				"entitytojson",
				"api/helpers.js/entityToJson.js"
			],
			[
				"addme",
				"addEntityMeta.js"
			],
			[
				"definet",
				"node_modules/alchemy/sql/types/defineType.js"
			],
			[
				"stringt",
				"node_modules/alchemy/sql/types/StringType.js"
			],
			[
				"alc",
				"alchemy.js"
			],
			[
				"det",
				"test/DefineEntityTests.js"
			],
			[
				"deft",
				"node_modules/classy/test/DefineTests.js"
			],
			[
				"integert",
				"node_modules/alchemy/sql/types/IntegerType.js"
			],
			[
				"ty",
				"node_modules/alchemy/Types.js"
			],
			[
				"addt",
				"addTableMeta.js"
			],
			[
				"eb",
				"EntityBase.js"
			],
			[
				"apiin",
				"api/index.js"
			],
			[
				"addta",
				"addTableMeta.js"
			],
			[
				"sql.g",
				"sql.log"
			],
			[
				"table",
				"addTableMeta.js"
			],
			[
				"def",
				"defineEntity.js"
			],
			[
				"define",
				"defineEntity.js"
			],
			[
				"copy",
				"copy.js"
			],
			[
				"addtablemeta",
				"addTableMeta.js"
			],
			[
				"entitb",
				"EntityBase.js"
			],
			[
				"log",
				"node_modules/alchemy/loggerFactory.js"
			],
			[
				"hapi",
				"config/hapi.js"
			],
			[
				"app",
				"app.js"
			],
			[
				"passp",
				"config/passport.js"
			],
			[
				"layout",
				"views/layout.jade"
			],
			[
				"loggerindex",
				"config/logger/index.js"
			],
			[
				"pack",
				"package.json"
			],
			[
				"layo",
				"views/layout.jade"
			],
			[
				"layout.d",
				"views/layout.jade"
			],
			[
				"www",
				"bin/www"
			],
			[
				"read",
				"README.md"
			],
			[
				"re",
				"README.md"
			],
			[
				"colu",
				"Column.js"
			],
			[
				"ta",
				"Table.js"
			],
			[
				"createt",
				"test/CreateTable.js"
			],
			[
				"insertt",
				"test/InsertTests.js"
			],
			[
				"sql",
				"SqlStatement.js"
			],
			[
				"selectt",
				"test/SelectTests.js"
			],
			[
				"sqls",
				"SqlStatement.js"
			],
			[
				"ins",
				"Insert.js"
			],
			[
				"tab",
				"Table.js"
			],
			[
				"inser",
				"Insert.js"
			],
			[
				"update",
				"Update.js"
			],
			[
				"column",
				"Column.js"
			],
			[
				"cre",
				"test/CreateTable.js"
			],
			[
				"co",
				"Column.js"
			],
			[
				"schema",
				"SchemaElement.js"
			],
			[
				"schemae",
				"SchemaElement.js"
			],
			[
				"col",
				"Column.js"
			],
			[
				"engi",
				"engine.js"
			],
			[
				"lo",
				"loggerFactory.js"
			],
			[
				"en",
				"engine.js"
			],
			[
				"al",
				"alchemy.js"
			],
			[
				"selet",
				"test/SelectTests.js"
			],
			[
				"engin",
				"engine.js"
			],
			[
				"ite",
				"test/InsertTests.js"
			],
			[
				"aclhe",
				"alchemy.js"
			],
			[
				"engine",
				"engine.js"
			],
			[
				"type",
				"Types.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"~/code/entity-designer/entity-designer.sublime-project"
			],
			[
				"alc",
				"~/code/alchemy/alchemy.sublime-project"
			],
			[
				"f",
				"~/code/functionally/functionally.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 212.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
