/*(c) Copyright 2015 Pivotal Software, Inc. All Rights Reserved.*/
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Collapsible = undefined;

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _weakMap = require('babel-runtime/core-js/weak-map');

var _weakMap2 = _interopRequireDefault(_weakMap);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _animation_mixin = require('pui-react-mixins/mixins/animation_mixin');

var _animation_mixin2 = _interopRequireDefault(_animation_mixin);

var _puiReactMixins = require('pui-react-mixins');

var _puiReactMixins2 = _interopRequireDefault(_puiReactMixins);

var _puiReactHelpers = require('pui-react-helpers');

var _bounding_client_rect = require('pui-react-mixins/components/bounding_client_rect');

require('pui-css-collapse');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var types = _react2.default.PropTypes;

var privates = new _weakMap2.default();

var CollapsibleComponent = function (_mixin$with) {
  (0, _inherits3.default)(CollapsibleComponent, _mixin$with);

  function CollapsibleComponent(props, context) {
    (0, _classCallCheck3.default)(this, CollapsibleComponent);

    var _this = (0, _possibleConstructorReturn3.default)(this, (CollapsibleComponent.__proto__ || (0, _getPrototypeOf2.default)(CollapsibleComponent)).call(this, props, context));

    _this.toggleAnimation = function (isAnimating) {
      return privates.set(_this, { isAnimating: isAnimating });
    };

    _this.triggerExpansionCallbacks = function (isAnimating) {
      if (isAnimating) return;
      var _this$props = _this.props,
          expanded = _this$props.expanded,
          onEntered = _this$props.onEntered,
          onExited = _this$props.onExited;

      expanded && onEntered && onEntered();
      !expanded && onExited && onExited();
      privates.set(_this, { expanded: expanded });
    };

    privates.set(_this, { isAnimating: false, expanded: props.expanded });
    return _this;
  }

  (0, _createClass3.default)(CollapsibleComponent, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          _props$boundingClient = _props.boundingClientRect.height,
          height = _props$boundingClient === undefined ? 0 : _props$boundingClient,
          children = _props.children,
          container = _props.container,
          containerReady = _props.containerReady,
          delay = _props.delay,
          expanded = _props.expanded,
          onEntered = _props.onEntered,
          onExited = _props.onExited,
          others = (0, _objectWithoutProperties3.default)(_props, ['boundingClientRect', 'children', 'container', 'containerReady', 'delay', 'expanded', 'onEntered', 'onExited']);

      var fractionOpen = this.animate('fractionOpen', expanded ? 1 : 0, delay);
      var isAnimating = !expanded && fractionOpen > 0 || expanded && fractionOpen < 1;
      var style = height && isAnimating ? { marginBottom: -height * (1 - fractionOpen) } : {};

      if (privates.get(this).isAnimating !== isAnimating) {
        this.toggleAnimation(isAnimating);
      }

      if (privates.get(this).expanded !== expanded) {
        this.triggerExpansionCallbacks(isAnimating);
      }

      var props = (0, _puiReactHelpers.mergeProps)(others, {
        className: ['collapse', { 'in': expanded || isAnimating }],
        style: isAnimating ? { overflow: 'hidden' } : {},
        'aria-hidden': !expanded
      });

      return _react2.default.createElement(
        'div',
        props,
        _react2.default.createElement(
          'div',
          { className: 'collapse-shield', style: style },
          children
        )
      );
    }
  }]);
  return CollapsibleComponent;
}((0, _puiReactMixins2.default)(_react2.default.Component).with(_animation_mixin2.default));

CollapsibleComponent.propTypes = {
  boundingClientRect: types.object,
  container: types.object,
  containerReady: types.object,
  delay: types.number,
  disableAnimation: types.bool,
  expanded: types.bool,
  onEntered: types.func,
  onExited: types.func,
  transitionProgress: types.number
};
CollapsibleComponent.defaultProps = {
  delay: 400
};
var Collapsible = exports.Collapsible = (0, _bounding_client_rect.useBoundingClientRect)(CollapsibleComponent);