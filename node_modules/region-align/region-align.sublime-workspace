{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sour",
				"sourceRegion"
			],
			[
				"Reg",
				"RegionAlign"
			],
			[
				"s",
				"should"
			],
			[
				"fun",
				"function"
			],
			[
				"obj",
				"object_type"
			],
			[
				"metaObjectT",
				"metaObjectTypeTable"
			],
			[
				"meta",
				"metaObjectTable"
			],
			[
				"max",
				"max20"
			],
			[
				"type",
				"typeName"
			],
			[
				"get",
				"getTypeName"
			],
			[
				"v",
				"var"
			],
			[
				"conne",
				"connectionString"
			],
			[
				"conn",
				"connectionString"
			],
			[
				"add_meta_",
				"f_add_meta_columns"
			],
			[
				"created",
				"created_date"
			],
			[
				"meta_ob",
				"meta_object_type"
			],
			[
				"admin",
				"admin_id"
			],
			[
				"create",
				"created_by"
			],
			[
				"last",
				"last_modified_by"
			],
			[
				"meta_",
				"meta_object"
			],
			[
				"META_",
				"meta_object_type"
			],
			[
				"crea",
				"create_table"
			],
			[
				"cread_da",
				"created_date_col"
			],
			[
				"id",
				"id_col"
			],
			[
				"def",
				"definition"
			],
			[
				"ensureLastM",
				"ensureLastModifiedBy"
			],
			[
				"ensureCre",
				"ensureCreatedBy"
			],
			[
				"ensureL",
				"ensureLastModifiedDate"
			],
			[
				"ensureCrea",
				"ensureCreatedDate"
			],
			[
				"ensu",
				"ensureColumn"
			],
			[
				"lastMo",
				"lastModifiedByLength"
			],
			[
				"uuid",
				"uuidGenerate"
			],
			[
				"Oj",
				"ObjectTable"
			],
			[
				"Object",
				"ObjectTypeTable"
			],
			[
				"col",
				"colType"
			],
			[
				"proto",
				"prototype"
			],
			[
				"auto",
				"autoInitTable"
			],
			[
				"tab",
				"tableName"
			],
			[
				"pro",
				"prototype"
			],
			[
				"filter",
				"filterOnUser"
			],
			[
				"exce",
				"exceptSecret"
			],
			[
				"ex",
				"exceptSecret"
			],
			[
				"sele",
				"selectGetAllBy"
			],
			[
				"config",
				"CONFIG"
			],
			[
				"has",
				"hashPass"
			],
			[
				"re",
				"reject"
			],
			[
				"Sele",
				"SelectExistsUsers"
			],
			[
				"table_",
				"table_name"
			],
			[
				"me",
				"metaColumns"
			],
			[
				"page",
				"paginateSelect"
			],
			[
				"json",
				"jsonField"
			],
			[
				"find",
				"findByName"
			],
			[
				"st",
				"stringify"
			],
			[
				"entity",
				"entityToJson"
			],
			[
				"des",
				"descriptor"
			],
			[
				"define",
				"defineProperty"
			],
			[
				"prop",
				"propName"
			],
			[
				"new",
				"newify"
			],
			[
				"alc",
				"alchemy"
			],
			[
				"a",
				"alchemy"
			],
			[
				"value",
				"valueToSql"
			],
			[
				"pr",
				"primaryKey"
			],
			[
				"prp",
				"preparedData"
			],
			[
				"preparedd",
				"preparedData"
			],
			[
				"user",
				"user_name"
			],
			[
				"paramete",
				"parameterized"
			],
			[
				"where",
				"whereConditions"
			],
			[
				"sql",
				"sqlQuery"
			],
			[
				"colu",
				"getInsertColumns"
			],
			[
				"into",
				"intoToString"
			],
			[
				"app",
				"appConfig"
			],
			[
				"columns",
				"columnsToString"
			],
			[
				"Inte",
				"IntegerType"
			],
			[
				"C",
				"COMPILER"
			],
			[
				"String",
				"StringType"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Makefile",
			"settings":
			{
				"buffer_size": 217,
				"line_ending": "Unix"
			}
		},
		{
			"file": "index.js",
			"settings":
			{
				"buffer_size": 6793,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 357 files for \"Region.alignToPoint(sourceRegion, targetRegion.ge\"\n\n/home/radu/code/region-align/Region.static.js:\n   68      //</debug>\n   69  \n   70:     return Region.alignToPoint(sourceRegion, targetRegion.getPoint(align[1]), align[0])\n   71  }\n   72  \n\n1 match in 1 file\n",
			"settings":
			{
				"buffer_size": 285,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "computeAlignRegion.js",
			"settings":
			{
				"buffer_size": 3447,
				"line_ending": "Unix"
			}
		},
		{
			"file": "alignToNormalized.js",
			"settings":
			{
				"buffer_size": 5225,
				"line_ending": "Unix"
			}
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 706,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Region.static.js",
			"settings":
			{
				"buffer_size": 2874,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Region.proto.js",
			"settings":
			{
				"buffer_size": 789,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"du",
				"File: Duplicate"
			],
			[
				"rena",
				"File: Rename"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"dup",
				"File: Duplicate"
			],
			[
				"dele",
				"File: Delete"
			],
			[
				"ss plpl",
				"Set Syntax: PL/pgSQL (Postgres)"
			],
			[
				"move",
				"File: Move"
			],
			[
				"ss plp",
				"Set Syntax: PL/pgSQL (Postgres)"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"ss sql",
				"Set Syntax: SQL"
			],
			[
				"del",
				"File: Delete"
			],
			[
				"markd",
				"Markdown Preview: Preview in Browser"
			],
			[
				"markdo",
				"Markdown Preview: Preview in Browser"
			],
			[
				"rename",
				"File: Rename"
			],
			[
				"mini",
				"View: Toggle Minimap"
			],
			[
				"re",
				"File: Rename"
			],
			[
				"renam",
				"File: Rename"
			],
			[
				"delete",
				"File: Delete"
			],
			[
				"ss javas",
				"Set Syntax: JavaScript"
			],
			[
				"ss json",
				"Set Syntax: JSON"
			],
			[
				"ss pla",
				"Set Syntax: Plain Text"
			],
			[
				"ren",
				"File: Rename"
			],
			[
				"word",
				"Word Wrap: Toggle"
			],
			[
				"ss jso",
				"Set Syntax: JSON"
			],
			[
				"ss js",
				"Set Syntax: Java Server Page (JSP)"
			],
			[
				"markdow",
				"Markdown Preview: Preview in Browser"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"ss sa",
				"Set Syntax: Sass"
			],
			[
				"ss sty",
				"Set Syntax: Stylus"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"ss java",
				"Set Syntax: JavaScript"
			],
			[
				"ss javasc",
				"Set Syntax: JavaScript"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"ss live",
				"Set Syntax: LiveScript"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/radu/code/region-align"
	],
	"file_history":
	[
		"/home/radu/code/region-align/package.json",
		"/home/radu/code/region-align/index.js",
		"/home/radu/code/region-align/node_modules/region/node_modules/classy/test/ClassOverrideTests.js",
		"/home/radu/code/region-align/computeAlignRegion.js",
		"/home/radu/code/region-align/alignToNormalized.js",
		"/home/radu/code/i-s/test/TestAll.js",
		"/home/radu/code/i-s/node_modules/browserify/test/tr_error.js",
		"/home/radu/code/i-s/index.js",
		"/home/radu/code/correct/src/newType.js",
		"/home/radu/code/correct/Makefile",
		"/home/radu/code/correct/node_modules/should/should.js",
		"/home/radu/code/correct/test/string/StringTests.js",
		"/home/radu/code/entity-engine/api/record/create.js",
		"/home/radu/code/entity-engine/node_modules/pg/test/integration/client/results-as-array-tests.js",
		"/home/radu/code/entity-engine/copy.js",
		"/home/radu/code/entity-engine/API.md",
		"/home/radu/code/entity-engine/api/index.js",
		"/home/radu/code/entity-engine/alchemy.js",
		"/home/radu/code/entity-engine/objects/helpers/index.js",
		"/home/radu/code/entity-engine/objects/ObjectBase.js",
		"/home/radu/code/entity-engine/ObjectBase.js",
		"/home/radu/code/entity-engine/objects/helpers/object.getByName.js",
		"/home/radu/code/entity-engine/index.js",
		"/home/radu/code/entity-engine/node_modules/alchemy/alchemy.sublime-project",
		"/home/radu/code/entity-engine/api/ObjectBase.js",
		"/home/radu/code/entity-engine/ObjectBase.bak.js",
		"/home/radu/code/entity-engine/db-scripts/utils.sql",
		"/home/radu/code/entity-engine/node_modules/bunyan/node_modules/dtrace-provider/libusdt/usdt_tracepoints_i386.s",
		"/home/radu/code/entity-engine/node_modules/pg/test/unit/utils-tests.js",
		"/home/radu/code/entity-engine/node_modules/pg/script/dump-db-types.js",
		"/home/radu/code/entity-engine/DB.MD",
		"/home/radu/code/entity-engine/objects/properties/toSql.js",
		"/home/radu/code/entity-engine/package.json",
		"/home/radu/code/entity-engine/meta/config.js",
		"/home/radu/code/entity-engine/init/README.md",
		"/home/radu/code/entity-engine/objects/User.js",
		"/home/radu/code/entity-engine/api/object/create.js",
		"/home/radu/code/entity-engine/defineObject.js",
		"/home/radu/code/entity-engine/api/helpers/paginate.js",
		"/home/radu/code/entity-engine/db-scripts/drop.sql",
		"/home/radu/code/entity-engine/api/helpers/selectBy.js",
		"/home/radu/code/entity-engine/api/object/getBy.js",
		"/home/radu/code/entity-engine/api/MetaTable.js",
		"/home/radu/code/entity-engine/db-scripts/test.sql",
		"/home/radu/code/entity-engine/node_modules/alchemy/node_modules/pg/script/travis-pg-9.2-install.sh",
		"/home/radu/code/entity-engine/node_modules/alchemy/getInstantiatorFunction.js",
		"/home/radu/code/entity-engine/node_modules/alchemy/test/InsertTests.js",
		"/home/radu/code/entity-engine/node_modules/alchemy/Insert.js",
		"/home/radu/code/entity-engine/config/index.js",
		"/home/radu/code/entity-engine/api/helpers/filterOnUser.js",
		"/home/radu/code/entity-engine/loggerFactory.js",
		"/home/radu/code/entity-engine/node_modules/functionally/functionally.sublime-project",
		"/home/radu/code/entity-engine/meta/ensureColumns.js",
		"/home/radu/code/entity-engine/init/03.initMetaData.js",
		"/home/radu/code/entity-engine/node_modules/classy/test/DefineTests.js",
		"/home/radu/code/entity-engine/test/DefineEntityTests.js",
		"/home/radu/code/entity-engine/api/helpers/entityToJson.js",
		"/home/radu/code/entity-engine/api/helpers/select.js",
		"/home/radu/code/entity-engine/api/getByName.js",
		"/home/radu/code/entity-engine/api/object/list.js",
		"/home/radu/code/entity-engine/init/02.initMetaTables.js",
		"/home/radu/code/entity-hapi/node_modules/entity-engine/config/index.js",
		"/home/radu/code/entity-engine/api/helpers/paginateSelect.js",
		"/home/radu/code/entity-engine/init/index.js",
		"/home/radu/code/entity-engine/init/01.initDb.js",
		"/home/radu/code/entity-engine/passwd/genSaltedPassword.js",
		"/home/radu/code/entity-engine/api/object/getById.js",
		"/home/radu/code/entity-engine/init/b.02.js",
		"/home/radu/code/entity-engine/entity.js",
		"/home/radu/code/entity-engine/meta/defineTable.js",
		"/home/radu/code/entity-engine/utils/uuid-gen.js",
		"/home/radu/code/entity-engine/meta/getObjectTypeId.js",
		"/home/radu/code/entity-engine/meta/addObjectMeta.js",
		"/home/radu/code/entity-engine/logs/entity.log",
		"/home/radu/code/entity-engine/Makefile",
		"/home/radu/code/entity-engine/meta/ObjectType.table.js",
		"/home/radu/code/entity-engine/meta/Object.table.js",
		"/home/radu/code/entity-engine/init/04.createUsers.js",
		"/home/radu/code/entity-hapi/node_modules/entity-engine/init/index.js",
		"/home/radu/code/entity-engine/node_modules/classy/src/core/canGetOwnPropertyDescriptor.js",
		"/home/radu/code/entity-engine/node_modules/alchemy/node_modules/classy/node_modules/newify/getInstantiatorFunction.js",
		"/home/radu/code/entity-engine/node_modules/alchemy/node_modules/pg/test/integration/connection-pool/optional-config-tests.js",
		"/home/radu/code/entity-engine/node_modules/classy/test/mixins/MixinInitOnTests.js",
		"/home/radu/code/entity-engine/node_modules/classy/src/isSubclassOf.js",
		"/home/radu/code/entity-engine/node_modules/classy/test/ClassInheritanceTests.js",
		"/home/radu/code/entity-engine/node_modules/alchemy/alchemy.js",
		"/home/radu/code/entity-engine/logs/alchemy-sql.log",
		"/home/radu/code/entity-engine/node_modules/alchemy/sql/types/getType.js",
		"/home/radu/code/entity-engine/node_modules/should/gulpfile.js",
		"/home/radu/code/throwy/.exit",
		"/home/radu/code/entity-engine/logs/alchemy-main.log",
		"/home/radu/code/entity-engine/node_modules/alchemy/loggerFactory.js",
		"/home/radu/code/entity-engine/cache/object.js",
		"/home/radu/code/entity-engine/addObjectMeta.js",
		"/home/radu/code/entity-engine/api/object/x.js",
		"/home/radu/code/entity-engine/meta/index.js",
		"/home/radu/code/entity-engine/proxy.js",
		"/home/radu/code/entity-engine/node_modules/should/CONTRIBUTING.md",
		"/home/radu/code/entity-engine/init/createUsers.03.js",
		"/home/radu/code/entity-engine/api/object/delete.js",
		"/home/radu/code/entity-engine/MetaTable.js",
		"/home/radu/code/entity-engine/node_modules/alchemy/sql/types/defineType.js",
		"/home/radu/code/entity-engine/node_modules/mocha/node_modules/mkdirp/test/umask_sync.js",
		"/home/radu/code/entity-engine/node_modules/alchemy/node_modules/pg/node_modules/pgpass/node_modules/split/node_modules/through/test/index.js",
		"/home/radu/code/entity-engine/node_modules/alchemy/node_modules/pg/test/integration/client/row-description-on-results-tests.js",
		"/home/radu/code/entity-engine/README.md",
		"/home/radu/code/entity-engine/node_modules/bunyan/examples/long-running.js",
		"/home/radu/code/entity-engine/api/helpers/MetaTable.js",
		"/home/radu/code/entity-engine/node_modules/mocha/node_modules/jade/node_modules/mkdirp/.gitignore.orig",
		"/home/radu/code/entity-engine/node_modules/bunyan/node_modules/dtrace-provider/.gitmodules",
		"/home/radu/code/entity-engine/node_modules/bcrypt/.npmignore",
		"/home/radu/code/entity-engine/node_modules/node-sass/libsass/color_names.hpp",
		"/home/radu/code/entity-engine/entity-engine.sublime-project",
		"/home/radu/code/entity-engine/node_modules/newify/node_modules/tape/test/exit/second.js",
		"/home/radu/code/entity-engine/node_modules/gulp/node_modules/liftoff/node_modules/findup-sync/node_modules/glob/node_modules/minimatch/test/extglob-ending-with-state-char.js",
		"/home/radu/code/entity-engine/node_modules/newify/node_modules/tape/node_modules/deep-equal/example/cmp.js",
		"/home/radu/code/entity-engine/entities/User.js",
		"/home/radu/code/entity-engine/EntityBase.js",
		"/home/radu/code/entity-engine/node_modules/nib/node_modules/stylus/node_modules/cssom/lib/CSSMediaRule.js",
		"/home/radu/code/entity-engine/node_modules/hapi/test/clientTimeout.js",
		"/home/radu/code/entity-engine/init/initMetaTable.01.js",
		"/home/radu/code/entity-engine/api/getById.js",
		"/home/radu/code/entity-engine/getMetaTable.js",
		"/home/radu/code/entity-engine/node_modules/nib/lib/nib/color-image.styl",
		"/home/radu/code/entity-engine/addEntityMeta.js",
		"/home/radu/code/entity-engine/node_modules/express/lib/middleware/init.js",
		"/home/radu/code/entity-engine/init/createUsers.02.js",
		"/home/radu/code/entity-engine/api/getBy.js"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"/home/radu/code/region-align",
			"/home/radu/code/i-s/src",
			"/home/radu/code/i-s",
			"/home/radu/code/entity-engine",
			"/home/radu/code/entity-engin",
			"/home/radu/code/entity-hapi",
			"/home/radu/code/entity-engine",
			"/home/radu/code/entity-hapi",
			"/home/radu/code/entity-engine",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Region.alignToPoint(sourceRegion, targetRegion.ge",
			"offset",
			"alignto",
			"Region.from",
			"region.from",
			"region.",
			"function COMPUTE_ALIGN_REGION(sourceRegion, targetRegion, positions, config){",
			"alignto",
			"alignToRegion",
			"ALIGN_TO_NORMALIZED",
			"targetRegion",
			"COMPUTE_ALIGN_REGION",
			"region.align",
			"targetRegion",
			"alignToPoint",
			"this",
			"this.",
			"ALIGN_TO_NORMALIZED",
			"COMPUTE_ALIGN_REGION",
			"ALIGN_TO_NORMALIZED",
			"COMPUTE_ALIGN_REGION",
			"this.",
			"alignRegions",
			"alignto",
			"setSize",
			"COMPUTE_ALIGN_REGION",
			"computeAlignRegion",
			"alignToNormalized",
			"computeAlignRegion",
			"  *",
			" *",
			",",
			" ",
			",\n",
			"\n         i = 0,\n         len = positions.length,\n         pos,\n         intersection,\n         itArea,\n         maxArea = -1,\n         maxAreaInd",
			"alignToNormalized",
			"computeAlignRegion",
			"this.getregion",
			"alignToNormalized",
			"this.",
			"computeAlignRegion",
			"alignToNormalized",
			"computeAlignRegion",
			"Region",
			"var region",
			"functionally",
			"==",
			"number",
			"true",
			"int",
			"number",
			"numeric",
			"scripts",
			"boolean",
			"arguments",
			"object",
			"function",
			"string",
			"array",
			"string",
			"v",
			"type(",
			"types",
			"is_min_len",
			"f_add_meta",
			"f_add_meta_constraints",
			"f_create_object",
			"username",
			"f_add_meta_columns",
			"f_create_table",
			"list",
			"curl ",
			"curl",
			"*",
			"min",
			"this",
			"fns",
			"initProperties",
			"initTable",
			"f_fill_db_meta",
			"f_enforce_meta_tables",
			"f_create_users_table",
			"add_meta_columns",
			"f_add_meta_columns",
			"fill_db_meta",
			"enforce_meta_fkeys",
			"admin_id",
			"fill_db_meta",
			"create_meta_schema",
			"create_users_table",
			"create_meta_schema",
			"PERFORM",
			"object_user",
			"create_constrained_table",
			"enforce_meta_fkeys",
			"create_users_table",
			"EXECUTE",
			"enforce_meta_fkeys",
			"create_users_table",
			"create_meta_schema",
			"create_users_table",
			"created_date",
			"type",
			"varchar",
			"create_tab",
			"create_db",
			"ObjectType.table",
			"arr",
			"createdByLength",
			"lastModifiedByLength",
			"name",
			"initTable",
			"create",
			"default",
			"defaults",
			"Column",
			"create logger",
			"addObjectMeta",
			"addobjectm",
			"log(",
			"alchemy",
			"create",
			"state",
			"ObjectTable",
			"ObjectMetaTable",
			"ObjectTypeMetaTable",
			"defineTable",
			"Table"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 217,
						"regions":
						{
						},
						"selection":
						[
							[
								217,
								217
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6793,
						"regions":
						{
						},
						"selection":
						[
							[
								5733,
								5733
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2005.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 285,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										172,
										221
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								217,
								217
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "computeAlignRegion.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3447,
						"regions":
						{
						},
						"selection":
						[
							[
								2908,
								2908
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "alignToNormalized.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5225,
						"regions":
						{
						},
						"selection":
						[
							[
								211,
								211
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 706,
						"regions":
						{
						},
						"selection":
						[
							[
								47,
								47
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Region.static.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2874,
						"regions":
						{
						},
						"selection":
						[
							[
								1850,
								1850
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 702.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Region.proto.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 789,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"open_with_edit": true,
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 34.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clipboard_manager":
	{
		"height": 118.0
	},
	"output.exec":
	{
		"height": 328.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.haskell_sublime_load":
	{
		"height": 118.0
	},
	"project": "region-align.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"pac",
				"package.json"
			],
			[
				"pa",
				"package.json"
			],
			[
				"index",
				"index.js"
			],
			[
				"align",
				"alignToNormalized.js"
			],
			[
				"com",
				"computeAlignRegion.js"
			],
			[
				"rea",
				"README.md"
			],
			[
				"make",
				"Makefile"
			],
			[
				"packa",
				"package.json"
			],
			[
				"testa",
				"test/TestAll.js"
			],
			[
				"inde",
				"src/index.js"
			],
			[
				"string",
				"test/string/StringTests.js"
			],
			[
				"query",
				"query.js"
			],
			[
				"create",
				"api/object/create.js"
			],
			[
				"api.md",
				"API.md"
			],
			[
				"objectb",
				"ObjectBase.js"
			],
			[
				"api.",
				"API.md"
			],
			[
				"user",
				"objects/User.js"
			],
			[
				"utils",
				"db-scripts/utils.sql"
			],
			[
				"db-s",
				"db-scripts/create.sql"
			],
			[
				"object",
				"ObjectBase.js"
			],
			[
				"config",
				"config/index.js"
			],
			[
				"db",
				"DB.MD"
			],
			[
				"configin",
				"config/index.js"
			],
			[
				"filtero",
				"api/helpers/filterOnUser.js"
			],
			[
				"defineo",
				"defineObject.js"
			],
			[
				"configindex",
				"config/index.js"
			],
			[
				"getob",
				"meta/getObjectTypeId.js"
			],
			[
				"alche",
				"alchemy.js"
			],
			[
				"addobje",
				"addObjectMeta.js"
			],
			[
				"addob",
				"addObjectMeta.js"
			],
			[
				"ob",
				"ObjectBase.js"
			],
			[
				"logger",
				"loggerFactory.js"
			],
			[
				"object.ta",
				"meta/Object.table.js"
			],
			[
				"objectt",
				"meta/ObjectType.table.js"
			],
			[
				"db.",
				"DB.MD"
			],
			[
				"metata",
				"MetaTable.js"
			],
			[
				"adden",
				"addEntityMeta.js"
			],
			[
				"entity",
				"EntityBase.js"
			],
			[
				"metat",
				"MetaTable.js"
			],
			[
				"getme",
				"getMetaTable.js"
			],
			[
				"ent",
				"EntityBase.js"
			],
			[
				"users",
				"entities/User.js"
			],
			[
				"entityb",
				"EntityBase.js"
			],
			[
				"getby",
				"api/entity/getById.js"
			],
			[
				"get",
				"getMetaTable.js"
			],
			[
				"configinde",
				"config/index.js"
			],
			[
				"addent",
				"addEntityMeta.js"
			],
			[
				"adde",
				"addEntityMeta.js"
			],
			[
				"initme",
				"init/initMetaTable.01.js"
			],
			[
				"getm",
				"getMetaTable.js"
			],
			[
				"init",
				"node_modules/express/lib/middleware/init.js"
			],
			[
				"addm",
				"addEntityMeta.js"
			],
			[
				"select",
				"api/helpers/selectBy.js"
			],
			[
				"getb",
				"api/getById.js"
			],
			[
				"addentt",
				"addEntityMeta.js"
			],
			[
				"entit",
				"EntityBase.js"
			],
			[
				"definee",
				"defineEntity.js"
			],
			[
				"getmeta",
				"getMetaTable.js"
			],
			[
				"pagina",
				"api/helpers/paginate.js"
			],
			[
				"loggerf",
				"loggerFactory.js"
			],
			[
				"initindex",
				"init/index.js"
			],
			[
				"selectb",
				"api/helpers/selectBy.js"
			],
			[
				"sele",
				"api/helpers/selectBy.js"
			],
			[
				"paginates",
				"api/helpers/paginateSelect.js"
			],
			[
				"api",
				"api/index.js"
			],
			[
				"list",
				"api/list.js"
			],
			[
				"entitto",
				"api/helpers.js/entityToJson.js"
			],
			[
				"enti",
				"EntityBase.js"
			],
			[
				"entityt",
				"api/helpers.js/entityToJson.js"
			],
			[
				"eba",
				"EntityBase.js"
			],
			[
				"addenti",
				"addEntityMeta.js"
			],
			[
				"entitytojson",
				"api/helpers.js/entityToJson.js"
			],
			[
				"addme",
				"addEntityMeta.js"
			],
			[
				"definet",
				"node_modules/alchemy/sql/types/defineType.js"
			],
			[
				"stringt",
				"node_modules/alchemy/sql/types/StringType.js"
			],
			[
				"alc",
				"alchemy.js"
			],
			[
				"det",
				"test/DefineEntityTests.js"
			],
			[
				"deft",
				"node_modules/classy/test/DefineTests.js"
			],
			[
				"integert",
				"node_modules/alchemy/sql/types/IntegerType.js"
			],
			[
				"ty",
				"node_modules/alchemy/Types.js"
			],
			[
				"addt",
				"addTableMeta.js"
			],
			[
				"eb",
				"EntityBase.js"
			],
			[
				"apiin",
				"api/index.js"
			],
			[
				"addta",
				"addTableMeta.js"
			],
			[
				"sql.g",
				"sql.log"
			],
			[
				"table",
				"addTableMeta.js"
			],
			[
				"def",
				"defineEntity.js"
			],
			[
				"define",
				"defineEntity.js"
			],
			[
				"copy",
				"copy.js"
			],
			[
				"addtablemeta",
				"addTableMeta.js"
			],
			[
				"entitb",
				"EntityBase.js"
			],
			[
				"log",
				"node_modules/alchemy/loggerFactory.js"
			],
			[
				"hapi",
				"config/hapi.js"
			],
			[
				"app",
				"app.js"
			],
			[
				"passp",
				"config/passport.js"
			],
			[
				"layout",
				"views/layout.jade"
			],
			[
				"loggerindex",
				"config/logger/index.js"
			],
			[
				"pack",
				"package.json"
			],
			[
				"layo",
				"views/layout.jade"
			],
			[
				"layout.d",
				"views/layout.jade"
			],
			[
				"www",
				"bin/www"
			],
			[
				"read",
				"README.md"
			],
			[
				"re",
				"README.md"
			],
			[
				"colu",
				"Column.js"
			],
			[
				"ta",
				"Table.js"
			],
			[
				"createt",
				"test/CreateTable.js"
			],
			[
				"insertt",
				"test/InsertTests.js"
			],
			[
				"sql",
				"SqlStatement.js"
			],
			[
				"selectt",
				"test/SelectTests.js"
			],
			[
				"sqls",
				"SqlStatement.js"
			],
			[
				"ins",
				"Insert.js"
			],
			[
				"tab",
				"Table.js"
			],
			[
				"inser",
				"Insert.js"
			],
			[
				"update",
				"Update.js"
			],
			[
				"column",
				"Column.js"
			],
			[
				"cre",
				"test/CreateTable.js"
			],
			[
				"co",
				"Column.js"
			],
			[
				"schema",
				"SchemaElement.js"
			],
			[
				"schemae",
				"SchemaElement.js"
			],
			[
				"col",
				"Column.js"
			],
			[
				"engi",
				"engine.js"
			],
			[
				"lo",
				"loggerFactory.js"
			],
			[
				"en",
				"engine.js"
			],
			[
				"al",
				"alchemy.js"
			],
			[
				"selet",
				"test/SelectTests.js"
			],
			[
				"engin",
				"engine.js"
			],
			[
				"ite",
				"test/InsertTests.js"
			],
			[
				"aclhe",
				"alchemy.js"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"re",
				"~/code/region/region.sublime-project"
			],
			[
				"entity",
				"~/code/entity-designer/entity-designer.sublime-project"
			],
			[
				"",
				"~/code/react-date-picker/react-date-picker.sublime-project"
			],
			[
				"enti",
				"~/code/entity-designer/entity-designer.sublime-project"
			],
			[
				"alc",
				"~/code/alchemy/alchemy.sublime-project"
			],
			[
				"f",
				"~/code/functionally/functionally.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 446.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
