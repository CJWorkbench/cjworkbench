#!/bin/bash

ENV=${1:?"Usage: $0 ENVIRONMENT SHA"}
SHA=${2:?"Usage: $0 ENVIRONMENT SHA"}

find_sha1_on_env() {
  env="$1"
  kubectl -n "$env" get deployment frontend-deployment \
      -o custom-columns=x:'{.spec.template.spec.containers[0].image}' \
    | tail -n1 \
    | cut -d: -f2
}

LAST_SHA=$(find_sha1_on_env "$ENV")
echo -n "Running migrations for $SHA on $ENV..." >&2
kubectl -n "$ENV" delete job migrate-job >/dev/null || true
kubectl -n "$ENV" delete pod -lapp=migrate-job >/dev/null || true
cat "$(dirname "$0")"/kubernetes/migrate.yaml \
      | sed -e "s/:latest/:$SHA/" \
      | kubectl -n $ENV apply -f - \
      >/dev/null
until [ "$(kubectl -n $ENV get jobs migrate-job --no-headers -o custom-columns=status:status.succeeded)" = "1" ]; do
  echo -n '.' >&2
  sleep 1
done
echo ' done' >&2

echo -n "Setting frontend, worker and cron images to $SHA on $ENV..." >&2
kubectl -n $ENV set image deployment/worker-deployment worker=gcr.io/cj-workbench/worker:$SHA >/dev/null
kubectl -n $ENV set image deployment/cron-deployment cron=gcr.io/cj-workbench/cron:$SHA >/dev/null
kubectl -n $ENV set image deployment/frontend-deployment frontend=gcr.io/cj-workbench/frontend:$SHA >/dev/null
echo ' done' >&2

echo -n 'Waiting for rollout to finish...' >&2
kubectl -n $ENV rollout status deployment/worker-deployment >/dev/null
echo -n '.' >&2
kubectl -n $ENV rollout status deployment/frontend-deployment >/dev/null
echo -n '.' >&2
kubectl -n $ENV rollout status deployment/cron-deployment >/dev/null
echo ' done' >&2

echo >&2
echo 'Inspect services at https://console.cloud.google.com/kubernetes/workload?project=cj-workbench' >&2
