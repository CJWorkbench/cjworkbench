# Generated by Django 2.2.8 on 2019-12-16 16:46

import cjwstate.models.commands.util
import cjwstate.models.fields
import cjwstate.models.module_version
from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


# To generate this file:
# 1. AVOID django's squashmigrations. Its migration errors because each step
#    uses our app's models, which may be long-gone or whose fields may be gone
#    by the time the step is run.
# 2. python ./manage.py squashmigrations server NNNN -- just to generate the
#    `replaces` line, which is the only line that has any value
# 2. mkdir t && mv server/migrations/* t
# 3. bin/dev sql -c "DELETE FROM django_migrations WHERE app = 'server'"
# 4. bin/dev python ./manage.py makemigrations server
# 5. copy/paste the `sites` dependency and the `django_sites` RunSQL from
#    t/0001_squashed_... into the new migration
# 6. copy/paste the `replaces` line from t/0001_squashed_... into the new
#    migration
# 7. copy/paste this comment into the migration
# 8. Rename the new migration to 0001_squashed_... (same name as in the t/
#    directory
# 9. rm t/0001_squashed_*
# 10. mv t/* server/migrations/
# 11. (after everybody everywhere has applied the migration): remove the
#     `replaces` line and delete all the replaced migrations.
#
# And presto! A succinct migration. It works because our app allows all tables
# to start empty. (`./manage.py reload-*-modules` populates all the data we
# need.)


class Migration(migrations.Migration):

    initial = True

    replaces = [
        ("server", "0001_squashed_0048_auto_20190218_2115"),
        ("server", "0002_internalize_converttotext"),
        ("server", "0003_nix_external_convert_to_text"),
        ("server", "0004_internalize_converttexttonumber"),
        ("server", "0005_unique_implicit_duplicate_workflows"),
        ("server", "0006_clear_empty_colnames_from_cache"),
        ("server", "0007_auto_20190508_1752"),
        ("server", "0008_auto_20190523_2128"),
        ("server", "0009_auto_20190528_1337"),
        ("server", "0010_auto_20190528_1352"),
        ("server", "0011_auto_20190530_2132"),
        ("server", "0008_schedule_orphan_fetches"),
        ("server", "0012_merge_20190531_1440"),
        ("server", "0013_upgrade-uploadfile-to-upload"),
        ("server", "0014_nix_upload_stored_objects"),
        ("server", "0015_auto_20190603_1422"),
        ("server", "0016_auto_20190603_1628"),
        ("server", "0017_auto_20190603_1637"),
        ("server", "0018_fix_upload_stored_data_version"),
        ("server", "0019_workflow_last_viewed_at"),
        ("server", "0020_auto_20190618_1731"),
        ("server", "0021_auto_20190618_1734"),
        ("server", "0022_auto_20190618_1803"),
        ("server", "0023_set_max_fetches_for_zealous_early_adopters"),
        ("server", "0024_remove_storedobject_metadata"),
        ("server", "0025_wfmodule_file_upload_api_token"),
        ("server", "0026_auto_20190724_2358"),
        ("server", "0027_wfmodule_slug"),
        ("server", "0028_auto_20190727_2043"),
        ("server", "0029_auto_20190727_2107"),
        ("server", "0030_inprogressupload"),
        ("server", "0031_auto_20190729_0208"),
        ("server", "0032_auto_20190729_0211"),
        ("server", "0033_assign_wf_module_slugs"),
        ("server", "0034_auto_20190730_1633"),
        ("server", "0035_auto_20190830_1623"),
        ("server", "0036_wfmodule_cached_render_result_errors"),
        ("server", "0037_auto_20190913_2006"),
        ("server", "0038_auto_20190926_1255"),
    ]

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("cjworkbench", "0002_userprofile_max_fetches_per_day"),
        ("sites", "0001_initial"),
    ]

    operations = [
        migrations.RunSQL(
            sql=[
                """
                UPDATE django_site
                SET domain = 'app.workbenchdata.com', name = 'Workbench';
                """
            ]
        ),
        migrations.CreateModel(
            name="Delta",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "datetime",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="datetime"
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_server.delta_set+",
                        to="contenttypes.ContentType",
                    ),
                ),
                (
                    "prev_delta",
                    models.OneToOneField(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="next_delta",
                        to="server.Delta",
                    ),
                ),
            ],
            options={"db_table": "server_delta"},
        ),
        migrations.CreateModel(
            name="Tab",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField(db_index=False)),
                ("name", models.TextField()),
                ("position", models.IntegerField()),
                ("selected_wf_module_position", models.IntegerField(null=True)),
                ("is_deleted", models.BooleanField(default=False)),
            ],
            options={"db_table": "server_tab", "ordering": ["position"]},
        ),
        migrations.CreateModel(
            name="AddModuleCommand",
            fields=[
                (
                    "delta_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="server.Delta",
                    ),
                ),
                (
                    "wf_module_delta_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=django.contrib.postgres.fields.ArrayField(
                            base_field=models.IntegerField(), size=2
                        ),
                        size=None,
                    ),
                ),
            ],
            options={"db_table": "server_addmodulecommand"},
            bases=(
                cjwstate.models.commands.util.ChangesWfModuleOutputs,
                "server.delta",
            ),
        ),
        migrations.CreateModel(
            name="AddTabCommand",
            fields=[
                (
                    "delta_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="server.Delta",
                    ),
                ),
                ("old_selected_tab_position", models.IntegerField()),
            ],
            options={"db_table": "server_addtabcommand"},
            bases=("server.delta",),
        ),
        migrations.CreateModel(
            name="ChangeDataVersionCommand",
            fields=[
                (
                    "delta_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="server.Delta",
                    ),
                ),
                (
                    "wf_module_delta_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=django.contrib.postgres.fields.ArrayField(
                            base_field=models.IntegerField(), size=2
                        ),
                        size=None,
                    ),
                ),
                (
                    "old_version",
                    models.DateTimeField(null=True, verbose_name="old_version"),
                ),
                ("new_version", models.DateTimeField(verbose_name="new_version")),
            ],
            options={"db_table": "server_changedataversioncommand"},
            bases=(
                cjwstate.models.commands.util.ChangesWfModuleOutputs,
                "server.delta",
            ),
        ),
        migrations.CreateModel(
            name="ChangeParametersCommand",
            fields=[
                (
                    "delta_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="server.Delta",
                    ),
                ),
                (
                    "wf_module_delta_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=django.contrib.postgres.fields.ArrayField(
                            base_field=models.IntegerField(), size=2
                        ),
                        size=None,
                    ),
                ),
                (
                    "old_values",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        verbose_name="old_values"
                    ),
                ),
                (
                    "new_values",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        verbose_name="new_values"
                    ),
                ),
            ],
            options={"db_table": "server_changeparameterscommand"},
            bases=(
                cjwstate.models.commands.util.ChangesWfModuleOutputs,
                "server.delta",
            ),
        ),
        migrations.CreateModel(
            name="ChangeWfModuleNotesCommand",
            fields=[
                (
                    "delta_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="server.Delta",
                    ),
                ),
                ("new_value", models.TextField(verbose_name="new_value")),
                ("old_value", models.TextField(verbose_name="old_value")),
            ],
            options={"db_table": "server_changewfmodulenotescommand"},
            bases=("server.delta",),
        ),
        migrations.CreateModel(
            name="ChangeWorkflowTitleCommand",
            fields=[
                (
                    "delta_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="server.Delta",
                    ),
                ),
                ("new_value", models.TextField(verbose_name="new_value")),
                ("old_value", models.TextField(verbose_name="old_value")),
            ],
            options={"db_table": "server_changeworkflowtitlecommand"},
            bases=("server.delta",),
        ),
        migrations.CreateModel(
            name="DeleteModuleCommand",
            fields=[
                (
                    "delta_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="server.Delta",
                    ),
                ),
                (
                    "wf_module_delta_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=django.contrib.postgres.fields.ArrayField(
                            base_field=models.IntegerField(), size=2
                        ),
                        size=None,
                    ),
                ),
            ],
            options={"db_table": "server_deletemodulecommand"},
            bases=(
                cjwstate.models.commands.util.ChangesWfModuleOutputs,
                "server.delta",
            ),
        ),
        migrations.CreateModel(
            name="DeleteTabCommand",
            fields=[
                (
                    "delta_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="server.Delta",
                    ),
                )
            ],
            options={"db_table": "server_deletetabcommand"},
            bases=("server.delta",),
        ),
        migrations.CreateModel(
            name="DuplicateTabCommand",
            fields=[
                (
                    "delta_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="server.Delta",
                    ),
                ),
                ("old_selected_tab_position", models.IntegerField()),
            ],
            options={"db_table": "server_duplicatetabcommand"},
            bases=("server.delta",),
        ),
        migrations.CreateModel(
            name="InitWorkflowCommand",
            fields=[
                (
                    "delta_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="server.Delta",
                    ),
                )
            ],
            options={"db_table": "server_initworkflowcommand"},
            bases=("server.delta",),
        ),
        migrations.CreateModel(
            name="ReorderModulesCommand",
            fields=[
                (
                    "delta_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="server.Delta",
                    ),
                ),
                (
                    "wf_module_delta_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=django.contrib.postgres.fields.ArrayField(
                            base_field=models.IntegerField(), size=2
                        ),
                        size=None,
                    ),
                ),
                ("old_order", models.TextField()),
                ("new_order", models.TextField()),
            ],
            options={"db_table": "server_reordermodulescommand"},
            bases=(
                cjwstate.models.commands.util.ChangesWfModuleOutputs,
                "server.delta",
            ),
        ),
        migrations.CreateModel(
            name="ReorderTabsCommand",
            fields=[
                (
                    "delta_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="server.Delta",
                    ),
                ),
                (
                    "wf_module_delta_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=django.contrib.postgres.fields.ArrayField(
                            base_field=models.IntegerField(), size=2
                        ),
                        size=None,
                    ),
                ),
                (
                    "old_order",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(), size=None
                    ),
                ),
                (
                    "new_order",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.IntegerField(), size=None
                    ),
                ),
            ],
            options={"db_table": "server_reordertabscommand"},
            bases=(
                cjwstate.models.commands.util.ChangesWfModuleOutputs,
                "server.delta",
            ),
        ),
        migrations.CreateModel(
            name="SetTabNameCommand",
            fields=[
                (
                    "delta_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="server.Delta",
                    ),
                ),
                (
                    "wf_module_delta_ids",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=django.contrib.postgres.fields.ArrayField(
                            base_field=models.IntegerField(), size=2
                        ),
                        size=None,
                    ),
                ),
                ("old_name", models.TextField()),
                ("new_name", models.TextField()),
            ],
            options={"db_table": "server_settabnamecommand"},
            bases=(
                cjwstate.models.commands.util.ChangesWfModuleOutputs,
                "server.delta",
            ),
        ),
        migrations.CreateModel(
            name="Workflow",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="name")),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                (
                    "last_viewed_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "anonymous_owner_session_key",
                    models.CharField(
                        blank=True,
                        max_length=40,
                        null=True,
                        verbose_name="anonymous_owner_session_key",
                    ),
                ),
                ("original_workflow_id", models.IntegerField(blank=True, null=True)),
                ("public", models.BooleanField(default=False)),
                ("example", models.BooleanField(default=False)),
                ("in_all_users_workflow_lists", models.BooleanField(default=False)),
                (
                    "lesson_slug",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="lesson_slug",
                    ),
                ),
                ("selected_tab_position", models.IntegerField(default=0)),
                (
                    "last_delta",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        related_name="+",
                        to="server.Delta",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owned_workflows",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"db_table": "server_workflow"},
        ),
        migrations.CreateModel(
            name="WfModule",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField()),
                ("module_id_name", models.CharField(default="", max_length=200)),
                ("order", models.IntegerField()),
                ("notes", models.TextField(blank=True, null=True)),
                ("stored_data_version", models.DateTimeField(blank=True, null=True)),
                ("is_collapsed", models.BooleanField(default=False)),
                ("is_deleted", models.BooleanField(default=False)),
                ("auto_update_data", models.BooleanField(default=False)),
                ("next_update", models.DateTimeField(blank=True, null=True)),
                ("update_interval", models.IntegerField(default=86400)),
                ("last_update_check", models.DateTimeField(blank=True, null=True)),
                ("notifications", models.BooleanField(default=False)),
                ("has_unseen_notification", models.BooleanField(default=False)),
                (
                    "cached_migrated_params",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True, null=True
                    ),
                ),
                (
                    "cached_migrated_params_module_version",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "cached_render_result_delta_id",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "cached_render_result_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ok", "ok"),
                            ("error", "error"),
                            ("unreachable", "unreachable"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "cached_render_result_errors",
                    cjwstate.models.fields.RenderErrorsField(blank=True, default=list),
                ),
                ("cached_render_result_error", models.TextField(blank=True)),
                (
                    "cached_render_result_quick_fixes",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        blank=True, default=list
                    ),
                ),
                ("cached_render_result_json", models.BinaryField(blank=True)),
                (
                    "cached_render_result_columns",
                    cjwstate.models.fields.ColumnsField(blank=True, null=True),
                ),
                (
                    "cached_render_result_nrows",
                    models.IntegerField(blank=True, null=True),
                ),
                ("is_busy", models.BooleanField(default=False)),
                (
                    "fetch_error",
                    models.CharField(
                        blank=True, max_length=10000, verbose_name="fetch_error"
                    ),
                ),
                ("last_relevant_delta_id", models.IntegerField(default=0)),
                (
                    "params",
                    django.contrib.postgres.fields.jsonb.JSONField(default=dict),
                ),
                (
                    "secrets",
                    django.contrib.postgres.fields.jsonb.JSONField(default=dict),
                ),
                (
                    "file_upload_api_token",
                    models.CharField(
                        blank=True, default=None, max_length=100, null=True
                    ),
                ),
                (
                    "tab",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wf_modules",
                        to="server.Tab",
                    ),
                ),
            ],
            options={"db_table": "server_wfmodule", "ordering": ["order"]},
        ),
        migrations.CreateModel(
            name="UploadedFile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(default=django.utils.timezone.now, null=True),
                ),
                ("name", models.CharField(max_length=255)),
                ("size", models.IntegerField(default=0)),
                ("uuid", models.CharField(max_length=255)),
                ("bucket", models.CharField(max_length=255)),
                ("key", models.CharField(max_length=255)),
                (
                    "wf_module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="uploaded_files",
                        to="server.WfModule",
                    ),
                ),
            ],
            options={"db_table": "server_uploadedfile", "ordering": ["-created_at"]},
        ),
        migrations.AddField(
            model_name="tab",
            name="workflow",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tabs",
                to="server.Workflow",
            ),
        ),
        migrations.CreateModel(
            name="StoredObject",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bucket", models.CharField(blank=True, default="", max_length=255)),
                ("key", models.CharField(blank=True, default="", max_length=255)),
                ("stored_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("hash", models.CharField(max_length=32)),
                ("size", models.IntegerField(default=0)),
                ("read", models.BooleanField(default=False)),
                (
                    "wf_module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stored_objects",
                        to="server.WfModule",
                    ),
                ),
            ],
            options={"db_table": "server_storedobject"},
        ),
        migrations.CreateModel(
            name="ModuleVersion",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_name", models.CharField(max_length=200)),
                (
                    "source_version_hash",
                    models.CharField(default="1.0", max_length=200),
                ),
                ("last_update_time", models.DateTimeField(auto_now=True)),
                (
                    "spec",
                    django.contrib.postgres.fields.jsonb.JSONField(
                        validators=[
                            cjwstate.models.module_version._django_validate_module_spec
                        ],
                        verbose_name="spec",
                    ),
                ),
                ("js_module", models.TextField(default="", verbose_name="js_module")),
            ],
            options={
                "db_table": "server_moduleversion",
                "ordering": ["last_update_time"],
                "unique_together": {("id_name", "last_update_time")},
            },
        ),
        migrations.CreateModel(
            name="InProgressUpload",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, primary_key=True, serialize=False
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                ("is_completed", models.BooleanField(default=False)),
                (
                    "wf_module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="in_progress_uploads",
                        to="server.WfModule",
                    ),
                ),
            ],
            options={"db_table": "server_inprogressupload"},
        ),
        migrations.AddField(
            model_name="delta",
            name="workflow",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="deltas",
                to="server.Workflow",
            ),
        ),
        migrations.CreateModel(
            name="AclEntry",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        db_index=True, max_length=254, verbose_name="email"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("can_edit", models.BooleanField(default=False)),
                (
                    "workflow",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="acl",
                        to="server.Workflow",
                    ),
                ),
            ],
            options={"db_table": "server_aclentry", "ordering": ["email"]},
        ),
        migrations.AddIndex(
            model_name="wfmodule",
            index=models.Index(
                condition=models.Q(
                    ("is_deleted", False), ("next_update__isnull", False)
                ),
                fields=["next_update"],
                name="pending_update_queue",
            ),
        ),
        migrations.AddConstraint(
            model_name="wfmodule",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("next_update__isnull", True), ("auto_update_data", False)
                    ),
                    models.Q(
                        ("next_update__isnull", False), ("auto_update_data", True)
                    ),
                    _connector="OR",
                ),
                name="auto_update_consistency_check",
            ),
        ),
        migrations.AddConstraint(
            model_name="wfmodule",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("cached_migrated_params__isnull", True),
                        ("cached_migrated_params_module_version__isnull", True),
                    ),
                    models.Q(
                        ("cached_migrated_params__isnull", False),
                        ("cached_migrated_params_module_version__isnull", False),
                    ),
                    _connector="OR",
                ),
                name="cached_migrated_params_consistency_check",
            ),
        ),
        migrations.AddConstraint(
            model_name="wfmodule",
            constraint=models.UniqueConstraint(
                fields=("tab_id", "slug"), name="unique_wf_module_slug"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="tab", unique_together={("workflow", "slug")}
        ),
        migrations.AddField(
            model_name="settabnamecommand",
            name="tab",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="server.Tab"
            ),
        ),
        migrations.AddField(
            model_name="reordermodulescommand",
            name="tab",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="server.Tab"
            ),
        ),
        migrations.AddField(
            model_name="duplicatetabcommand",
            name="tab",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="server.Tab"
            ),
        ),
        migrations.AddField(
            model_name="deletetabcommand",
            name="tab",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="server.Tab"
            ),
        ),
        migrations.AddField(
            model_name="deletemodulecommand",
            name="wf_module",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="server.WfModule"
            ),
        ),
        migrations.AddField(
            model_name="changewfmodulenotescommand",
            name="wf_module",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="server.WfModule"
            ),
        ),
        migrations.AddField(
            model_name="changeparameterscommand",
            name="wf_module",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="server.WfModule"
            ),
        ),
        migrations.AddField(
            model_name="changedataversioncommand",
            name="wf_module",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="server.WfModule"
            ),
        ),
        migrations.AddField(
            model_name="addtabcommand",
            name="tab",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="server.Tab"
            ),
        ),
        migrations.AddField(
            model_name="addmodulecommand",
            name="wf_module",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="server.WfModule"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="aclentry", unique_together={("workflow", "email")}
        ),
    ]
