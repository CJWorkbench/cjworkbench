# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-12-05 21:36
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import server.models.commands.util


# To generate this file:
# 1. AVOID django's squashmigrations. Its migration errors because each step
#    uses our app's models, which may be long-gone or whose fields may be gone
#    by the time the step is run.
# 2. python ./manage.py squashmigrations server NNNN -- just to generate the
#    `replaces` line, which is the only line that has any value
# 2. mkdir t && mv server/migrations/* t
# 3. bin/dev sql -c "DELETE FROM django_migrations WHERE app = 'server'"
# 4. bin/dev python ./manage.py makemigrations server
# 5. copy/paste the `django_sites` RunSQL from t/0001_squashed_... into the new
#    migration
# 6. copy/paste the `replaces` line from t/0001_squashed_... into the new
#    migration
# 7. copy/paste this comment into the migration
# 8. Rename the new migration to 0001_squashed_... (same name as in the t/
#    directory
# 9. rm t/0001_squashed_*
# 10. mv t/* server/migrations/
#
# And presto! A succinct migration. It works because our app allows all tables
# to start empty. (`./manage.py reload-*-modules` populates all the data we
# need.)


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('sites', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RunSQL(sql=[
            """
            UPDATE django_site
            SET domain = 'app.workbenchdata.com', name = 'Workbench';
            """
        ]),
        migrations.CreateModel(
            name='AclEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(db_index=True, max_length=254, verbose_name='email')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('can_edit', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Delta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='datetime')),
            ],
            options={
                'base_manager_name': 'base_objects',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('category', models.CharField(max_length=200, verbose_name='category')),
                ('id_name', models.CharField(max_length=200, verbose_name='id_name')),
                ('dispatch', models.CharField(max_length=200, verbose_name='dispatch')),
                ('source', models.CharField(default='internal', max_length=200, verbose_name='source')),
                ('description', models.CharField(default='', max_length=200, verbose_name='description')),
                ('author', models.CharField(default='Workbench', max_length=200, verbose_name='author')),
                ('link', models.URLField(default='', verbose_name='link')),
                ('icon', models.CharField(default='url', max_length=20, verbose_name='icon')),
                ('loads_data', models.BooleanField(default=False, verbose_name='loads_data')),
                ('has_zen_mode', models.BooleanField(default=False, verbose_name='has_zen_mode')),
                ('help_url', models.CharField(default='', max_length=200, verbose_name='help_url')),
                ('row_action_menu_entry_title', models.CharField(default='', max_length=200, verbose_name='row_action_menu_entry_title')),
                ('js_module', models.TextField(default='', verbose_name='js_module')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ModuleVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_version_hash', models.CharField(default='1.0', max_length=200, verbose_name='source_version_hash')),
                ('last_update_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='last_update_time')),
                ('html_output', models.BooleanField(default=False, verbose_name='html_output')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='module_versions', to='server.Module')),
            ],
            options={
                'ordering': ['last_update_time'],
            },
        ),
        migrations.CreateModel(
            name='ParameterSpec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('statictext', 'Statictext'), ('string', 'String'), ('integer', 'Integer'), ('float', 'Float'), ('button', 'Button'), ('checkbox', 'Checkbox'), ('menu', 'Menu'), ('column', 'Column'), ('multicolumn', 'Multiple columns'), ('radio', 'Radio'), ('secret', 'Secret'), ('custom', 'Custom')], default='string', max_length=16)),
                ('name', models.CharField(max_length=256, verbose_name='name')),
                ('id_name', models.CharField(max_length=200, verbose_name='id_name')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('def_value', models.TextField(blank=True, default='')),
                ('def_items', models.TextField(blank=True, null=True)),
                ('def_visible', models.BooleanField(default=True)),
                ('ui_only', models.BooleanField(default=False)),
                ('multiline', models.BooleanField(default=False)),
                ('placeholder', models.TextField(blank=True, default='')),
                ('visible_if', models.TextField(default='', verbose_name='visible_if')),
                ('module_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parameter_specs', to='server.ModuleVersion')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ParameterVal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('value', models.TextField(blank=True, default='')),
                ('items', models.TextField(blank=True, null=True)),
                ('visible', models.BooleanField(default=True)),
                ('parameter_spec', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parameter_vals', to='server.ParameterSpec')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='StoredObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='')),
                ('stored_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('hash', models.CharField(max_length=32)),
                ('metadata', models.CharField(default=None, max_length=255, null=True)),
                ('size', models.IntegerField(default=0)),
                ('read', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Tab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('position', models.IntegerField()),
                ('selected_wf_module_position', models.IntegerField(null=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('size', models.IntegerField(default=0)),
                ('uuid', models.CharField(max_length=255)),
                ('bucket', models.CharField(max_length=255)),
                ('key', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='WfModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('stored_data_version', models.DateTimeField(blank=True, null=True)),
                ('is_collapsed', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('auto_update_data', models.BooleanField(default=False)),
                ('next_update', models.DateTimeField(blank=True, null=True)),
                ('update_interval', models.IntegerField(default=86400)),
                ('last_update_check', models.DateTimeField(blank=True, null=True)),
                ('notifications', models.BooleanField(default=False)),
                ('has_unseen_notification', models.BooleanField(default=False)),
                ('cached_render_result_delta_id', models.IntegerField(blank=True, null=True)),
                ('cached_render_result_status', models.CharField(blank=True, choices=[('ok', 'ok'), ('error', 'error'), ('unreachable', 'unreachable')], max_length=20, null=True)),
                ('cached_render_result_error', models.TextField(blank=True)),
                ('cached_render_result_json', models.BinaryField(blank=True)),
                ('cached_render_result_quick_fixes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list)),
                ('is_busy', models.BooleanField(default=False)),
                ('fetch_error', models.CharField(blank=True, max_length=2000, verbose_name='fetch_error')),
                ('last_relevant_delta_id', models.IntegerField(default=0)),
                ('module_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wf_modules', to='server.ModuleVersion')),
                ('tab', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wf_modules', to='server.Tab')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('anonymous_owner_session_key', models.CharField(blank=True, max_length=40, null=True, verbose_name='anonymous_owner_session_key')),
                ('original_workflow_id', models.IntegerField(blank=True, null=True)),
                ('public', models.BooleanField(default=False)),
                ('example', models.BooleanField(default=False)),
                ('in_all_users_workflow_lists', models.BooleanField(default=False)),
                ('lesson_slug', models.CharField(blank=True, max_length=100, null=True, verbose_name='lesson_slug')),
                ('selected_tab_position', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='AddModuleCommand',
            fields=[
                ('delta_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server.Delta')),
                ('wf_module_delta_ids', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=2), size=None)),
                ('order', models.IntegerField()),
                ('selected_wf_module_position', models.IntegerField(blank=True, null=True)),
                ('wf_module', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='server.WfModule')),
            ],
            options={
                'abstract': False,
            },
            bases=('server.delta', server.models.commands.util.ChangesWfModuleOutputs),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ChangeDataVersionCommand',
            fields=[
                ('delta_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server.Delta')),
                ('wf_module_delta_ids', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=2), size=None)),
                ('old_version', models.DateTimeField(null=True, verbose_name='old_version')),
                ('new_version', models.DateTimeField(verbose_name='new_version')),
                ('wf_module', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='server.WfModule')),
            ],
            options={
                'abstract': False,
            },
            bases=('server.delta', server.models.commands.util.ChangesWfModuleOutputs),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ChangeParametersCommand',
            fields=[
                ('delta_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server.Delta')),
                ('wf_module_delta_ids', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=2), size=None)),
                ('old_values', django.contrib.postgres.fields.jsonb.JSONField(verbose_name='old_values')),
                ('new_values', django.contrib.postgres.fields.jsonb.JSONField(verbose_name='new_values')),
                ('wf_module', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='server.WfModule')),
            ],
            options={
                'abstract': False,
            },
            bases=('server.delta', server.models.commands.util.ChangesWfModuleOutputs),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ChangeWfModuleNotesCommand',
            fields=[
                ('delta_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server.Delta')),
                ('new_value', models.TextField(verbose_name='new_value')),
                ('old_value', models.TextField(verbose_name='old_value')),
                ('wf_module', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='server.WfModule')),
            ],
            options={
                'abstract': False,
            },
            bases=('server.delta',),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ChangeWfModuleUpdateSettingsCommand',
            fields=[
                ('delta_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server.Delta')),
                ('new_auto', models.BooleanField()),
                ('old_auto', models.BooleanField()),
                ('new_next_update', models.DateField(null=True)),
                ('old_next_update', models.DateField(null=True)),
                ('new_update_interval', models.IntegerField()),
                ('old_update_interval', models.IntegerField()),
                ('wf_module', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='server.WfModule')),
            ],
            options={
                'abstract': False,
            },
            bases=('server.delta',),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ChangeWorkflowTitleCommand',
            fields=[
                ('delta_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server.Delta')),
                ('new_value', models.TextField(verbose_name='new_value')),
                ('old_value', models.TextField(verbose_name='old_value')),
            ],
            options={
                'abstract': False,
            },
            bases=('server.delta',),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='DeleteModuleCommand',
            fields=[
                ('delta_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server.Delta')),
                ('wf_module_delta_ids', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=2), size=None)),
                ('wf_module', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='server.WfModule')),
            ],
            options={
                'abstract': False,
            },
            bases=('server.delta', server.models.commands.util.ChangesWfModuleOutputs),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='InitWorkflowCommand',
            fields=[
                ('delta_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server.Delta')),
            ],
            options={
                'abstract': False,
            },
            bases=('server.delta',),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ReorderModulesCommand',
            fields=[
                ('delta_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server.Delta')),
                ('wf_module_delta_ids', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=2), size=None)),
                ('old_order', models.TextField()),
                ('new_order', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('server.delta', server.models.commands.util.ChangesWfModuleOutputs),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='workflow',
            name='last_delta',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='+', to='server.Delta'),
        ),
        migrations.AddField(
            model_name='workflow',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owned_workflows', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='uploadedfile',
            name='wf_module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_files', to='server.WfModule'),
        ),
        migrations.AddField(
            model_name='tab',
            name='workflow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tabs', to='server.Workflow'),
        ),
        migrations.AddField(
            model_name='storedobject',
            name='wf_module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stored_objects', to='server.WfModule'),
        ),
        migrations.AddField(
            model_name='parameterval',
            name='wf_module',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parameter_vals', to='server.WfModule'),
        ),
        migrations.AddField(
            model_name='delta',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_server.delta_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='delta',
            name='prev_delta',
            field=models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='next_delta', to='server.Delta'),
        ),
        migrations.AddField(
            model_name='delta',
            name='workflow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deltas', to='server.Workflow'),
        ),
        migrations.AddField(
            model_name='aclentry',
            name='workflow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acl', to='server.Workflow'),
        ),
        migrations.AddField(
            model_name='reordermodulescommand',
            name='tab',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='server.Tab'),
        ),
        migrations.AlterUniqueTogether(
            name='aclentry',
            unique_together=set([('workflow', 'email')]),
        ),
    ]
