# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2019-01-24 22:15
from __future__ import unicode_literals

from django.db import migrations


def nix_updatesettingscommands(apps, schema_editor):
    Command = apps.get_model('server', 'ChangeWfModuleUpdateSettingsCommand')
    Delta = apps.get_model('server', 'Delta')
    Workflow = apps.get_model('server', 'Workflow')
    WfModule = apps.get_model('server', 'WfModule')
    DeltaCommands = [
        apps.get_model('server', 'AddModuleCommand'),
        apps.get_model('server', 'ChangeDataVersionCommand'),
        apps.get_model('server', 'ChangeParametersCommand'),
        apps.get_model('server', 'DeleteModuleCommand'),
        apps.get_model('server', 'ReorderModulesCommand'),
    ]

    # Remove one Command at a time. This is an easy way to solve the question,
    # 'how to remove two at once?'
    #
    # On production, we have <120 of these commands. So don't worry about
    # speed.
    while True:
        cmd = Command.objects.first()
        if cmd is None:
            break

        # Remove from the linked list
        Delta.objects \
            .filter(id=cmd.id) \
            .update(prev_delta_id=None)  # so we don't violate uniqueness
        Delta.objects \
            .filter(prev_delta_id=cmd.id) \
            .update(prev_delta_id=cmd.prev_delta_id)

        # Remove any link to it...
        Workflow.objects \
            .filter(last_delta_id=cmd.id) \
            .update(last_delta_id=cmd.prev_delta_id)
        WfModule.objects \
            .filter(last_relevant_delta_id=cmd.id) \
            .update(last_relevant_delta_id=cmd.prev_delta_id)
        # ... even in AddModuleCommand.wf_module_delta_ids et al (this is a
        # real edge case, and it may not even affect the user's experience.)
        for OtherCommand in DeltaCommands:
            for other_cmd in (
                OtherCommand.objects
                .filter(wf_module_delta_ids__contains=[cmd.id])
            ):
                value = []
                for wf_module_id, delta_id in other_cmd.wf_module_delta_ids:
                    if delta_id == cmd.id:
                        delta_id = cmd.prev_delta_id
                    value.append([wf_module_id, delta_id])
                other_cmd.wf_module_delta_ids = value
                other_cmd.save(update_fields=['wf_module_delta_ids'])

        # Delete Command -- it's multi-table inherited, so delete the rows from
        # both tables.
        Command.objects.filter(id=cmd.id).delete()
        Delta.objects.filter(id=cmd.id).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('server', '0038_auto_20190124_1837'),
    ]

    operations = [
        migrations.RunPython(nix_updatesettingscommands, elidable=True),
    ]
