# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-09-20 16:25
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import server.models.commands

# To generate this file:
# 1. AVOID django's squashmigrations. Its migration errors because each step
#    uses our app's models, which may be long-gone or whose fields may be gone
#    by the time the step is run.
# 2. python ./manage.py squashmigrations ... -- just to generate the `replaces`
#    line, which is the only line that has any value
# 2. mkdir t && mv server/migrations/* t
# 3. bin/dev sql -c "DELETE FROM django_migrations WHERE app = 'server'"
# 4. bin/dev python ./manage.py makemigrations
# 5. copy/paste the `django_sites` RunSQL from t/0001_squashed_... into the new
#    migration
# 6. copy/paste the `replaces` line from t/0001_squashed_... into the new
#    migration
# 7. Rename the new migration to 0001_squashed_... (same name as in the t/
#    directory
# 8. rm t/0001_squashed_*
# 9. mv t/* server/migrations/
#
# And presto! A succinct migration. It works because our app allows all tables
# to start empty. (`./manage.py reload-*-modules` populates all the data we
# need.)


class Migration(migrations.Migration):
    replaces = [('server', '0001_initial'), ('server', '0002_auto_20161102_2210'), ('server', '0003_auto_20161121_1832'), ('server', '0004_remove_workflow_modules'), ('server', '0005_workflow_modules'), ('server', '0006_auto_20161121_2149'), ('server', '0007_auto_20161123_2115'), ('server', '0008_auto_20161129_2057'), ('server', '0009_auto_20161213_2020'), ('server', '0010_auto_20161215_0019'), ('server', '0011_auto_20170109_2317'), ('server', '0012_auto_20170121_0013'), ('server', '0013_auto_20170127_1910'), ('server', '0014_auto_20170127_1913'), ('server', '0015_auto_20170128_1935'), ('server', '0016_auto_20170128_2130'), ('server', '0017_auto_20170130_1843'), ('server', '0018_storedobject'), ('server', '0019_auto_20170208_1856'), ('server', '0020_auto_20170208_2359'), ('server', '0021_auto_20170222_0321'), ('server', '0022_auto_20170223_2339'), ('server', '0023_auto_20170227_0203'), ('server', '0024_auto_20170408_0118'), ('server', '0025_auto_20170426_1759'), ('server', '0026_auto_20170504_0038'), ('server', '0027_auto_20170515_1910'), ('server', '0028_auto_20170515_2035'), ('server', '0029_auto_20170621_1445'), ('server', '0030_auto_20170622_0420'), ('server', '0031_auto_20170623_0350'), ('server', '0032_auto_20170623_0413'), ('server', '0033_auto_20170630_0017'), ('server', '0034_auto_20170706_0037'), ('server', '0035_auto_20170707_0109'), ('server', '0036_auto_20170707_0125'), ('server', '0037_reordermodulescommand'), ('server', '0038_auto_20170714_2226'), ('server', '0039_wfmodule_notes'), ('server', '0039_auto_20170718_2300'), ('server', '0040_merge_20170718_2333'), ('server', '0041_changeworkflowtitlecommand'), ('server', '0042_delta_polymorphic_ctype'), ('server', '0043_module_description'), ('server', '0044_auto_20170719_1759'), ('server', '0045_changewfmodulenotecommand'), ('server', '0046_auto_20170720_2023'), ('server', '0047_auto_20170720_2025'), ('server', '0048_auto_20170720_2032'), ('server', '0049_sitename'), ('server', '0050_auto_20170725_2034'), ('server', '0051_auto_20170725_2221'), ('server', '0052_auto_20170726_0113'), ('server', '0053_wfmodule_is_collapsed'), ('server', '0054_changewfmodulecollapsedsettingcommand'), ('server', '0055_auto_20170731_0158'), ('server', '0053_auto_20170727_0117'), ('server', '0054_auto_20170730_0134'), ('server', '0056_merge_20170731_0227'), ('server', '0054_workflow_public'), ('server', '0057_merge_20170731_1941'), ('server', '0058_auto_20170801_2247'), ('server', '0059_module_icon'), ('server', '0060_auto_20170803_0339'), ('server', '0061_auto_20170807_1817'), ('server', '0062_auto_20170810_2339'), ('server', '0063_auto_20170828_0601'), ('server', '0064_auto_20170905_1705'), ('server', '0065_auto_20170914_1657'), ('server', '0066_auto_20170914_1945'), ('server', '0067_auto_20170922_2211'), ('server', '0068_auto_20170926_2229'), ('server', '0069_auto_20171002_2020'), ('server', '0070_auto_20171012_1403'), ('server', '0071_auto_20171013_1352'), ('server', '0072_auto_20171013_1942'), ('server', '0073_auto_20171013_1945'), ('server', '0074_storedobject_success'), ('server', '0075_remove_storedobject_success'), ('server', '0076_auto_20171025_1551'), ('server', '0077_auto_20171124_2107'), ('server', '0078_module_loads_data'), ('server', '0079_auto_20171212_1917'), ('server', '0080_wfmodule_notifications'), ('server', '0080_auto_20171213_2203'), ('server', '0081_notification'), ('server', '0082_storedobject_read'), ('server', '0083_auto_20180109_0149'), ('server', '0084_module_html_output'), ('server', '0085_auto_20180122_2223'), ('server', '0086_parameterspec_placeholder'), ('server', '0087_auto_20180125_0131'), ('server', '0088_workflow_module_library_collapsed'), ('server', '0089_workflow_selected_wf_module'), ('server', '0089_auto_20180201_0043'), ('server', '0090_merge_20180201_0308'), ('server', '0091_auto_20180209_0121'), ('server', '0092_deletemodulecommand_selected_wf_module'), ('server', '0093_storedobject_to_uploadedfile'), ('server', '0093_auto_20180322_1822'), ('server', '0094_merge_20180328_0159'), ('server', '0095_remove_parameterspec_visible_if_not'), ('server', '0096_auto_20180411_0213'), ('server', '0097_addmodulecommand_selected_wf_module'), ('server', '0098_workflow_lesson_stub'), ('server', '0099_workflow_lesson_stub_to_lesson_slug'), ('server', '0100_auto_20180512_0146'), ('server', '0101_auto_20180607_2145'), ('server', '0102_remove_workflow_module_library_collapsed'), ('server', '0103_auto_20180615_1703'), ('server', '0104_auto_20180618_2016'), ('server', '0105_auto_20180619_1934'), ('server', '0106_auto_20180621_2059'), ('server', '0107_auto_20180625_1946'), ('server', '0108_auto_20180625_1946'), ('server', '0109_auto_20180711_1902'), ('server', '0110_auto_20180716_2240'), ('server', '0111_wfmodule_cached_render_result_workflow_id'), ('server', '0112_auto_20180717_1305'), ('server', '0113_remove_storedobject_type'), ('server', '0114_auto_20180813_2252'), ('server', '0115_auto_20180814_1535'), ('server', '0116_remove_parameterspec_derived_data'), ('server', '0117_wfmodule_last_relevant_delta_id'), ('server', '0118_auto_20180815_1852'), ('server', '0119_auto_20180815_1952'), ('server', '0120_module_has_zen_mode'), ('server', '0121_workflow_in_all_users_workflow_lists'), ('server', '0122_module_row_action_menu_entry_title'), ('server', '0123_auto_20180913_2011'), ('server', '0123_auto_20180911_1847'), ('server', '0124_merge_20180919_1812'), ('server', '0125_auto_20180920_1524')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.RunSQL(
            sql=["""
                 DO $$
                 BEGIN
                    IF EXISTS (
                         SELECT 1 FROM information_schema.tables
                         WHERE table_name = 'django_site'
                    )
                    THEN
                         UPDATE django_site
                         SET domain = 'app.workbenchdata.com',
                             name = 'Workbench';
                    END IF;
                 END
                 $$
                """]
        ),
        migrations.CreateModel(
            name='Delta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('command_description', models.CharField(max_length=200, verbose_name='command_description')),
                ('datetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='datetime')),
            ],
            options={
                'base_manager_name': 'base_objects',
            },
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('category', models.CharField(max_length=200, verbose_name='category')),
                ('id_name', models.CharField(max_length=200, verbose_name='id_name')),
                ('dispatch', models.CharField(max_length=200, verbose_name='dispatch')),
                ('source', models.CharField(default='internal', max_length=200, verbose_name='source')),
                ('description', models.CharField(default='', max_length=200, verbose_name='description')),
                ('author', models.CharField(default='Workbench', max_length=200, verbose_name='author')),
                ('link', models.URLField(default='', verbose_name='link')),
                ('icon', models.CharField(default='url', max_length=20, verbose_name='icon')),
                ('loads_data', models.BooleanField(default=False, verbose_name='loads_data')),
                ('has_zen_mode', models.BooleanField(default=False, verbose_name='has_zen_mode')),
                ('help_url', models.CharField(default='', max_length=200, verbose_name='help_url')),
                ('row_action_menu_entry_title', models.CharField(default='', max_length=200, verbose_name='row_action_menu_entry_title')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ModuleVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_version_hash', models.CharField(default='1.0', max_length=200, verbose_name='source_version_hash')),
                ('last_update_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='last_update_time')),
                ('html_output', models.BooleanField(default=False, verbose_name='html_output')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='module_versions', to='server.Module')),
            ],
            options={
                'ordering': ['last_update_time'],
            },
        ),
        migrations.CreateModel(
            name='ParameterSpec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('statictext', 'Statictext'), ('string', 'String'), ('integer', 'Integer'), ('float', 'Float'), ('button', 'Button'), ('checkbox', 'Checkbox'), ('menu', 'Menu'), ('column', 'Column'), ('multicolumn', 'Multiple columns'), ('radio', 'Radio'), ('secret', 'Secret'), ('custom', 'Custom')], default='string', max_length=16)),
                ('name', models.CharField(max_length=256, verbose_name='name')),
                ('id_name', models.CharField(max_length=200, verbose_name='id_name')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('def_value', models.TextField(blank=True, default='')),
                ('def_items', models.TextField(blank=True, null=True)),
                ('def_visible', models.BooleanField(default=True)),
                ('ui_only', models.BooleanField(default=False)),
                ('multiline', models.BooleanField(default=False)),
                ('placeholder', models.TextField(blank=True, default='')),
                ('visible_if', models.TextField(default='', verbose_name='visible_if')),
                ('module_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parameter_specs', to='server.ModuleVersion')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ParameterVal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=0, verbose_name='order')),
                ('value', models.TextField(blank=True, default='')),
                ('items', models.TextField(blank=True, null=True)),
                ('visible', models.BooleanField(default=True)),
                ('parameter_spec', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parameter_vals', to='server.ParameterSpec')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='StoredObject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='')),
                ('stored_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('hash', models.CharField(max_length=32)),
                ('metadata', models.CharField(default=None, max_length=255, null=True)),
                ('size', models.IntegerField(default=0)),
                ('read', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.CharField(default=None, max_length=100, null=True)),
                ('name', models.CharField(default=None, max_length=255, null=True)),
                ('size', models.IntegerField(default=0)),
                ('uuid', models.CharField(default=None, max_length=255, null=True)),
                ('bucket', models.CharField(default=None, max_length=255, null=True)),
                ('key', models.CharField(default=None, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='WfModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('stored_data_version', models.DateTimeField(blank=True, null=True)),
                ('is_collapsed', models.BooleanField(default=False)),
                ('auto_update_data', models.BooleanField(default=False)),
                ('next_update', models.DateTimeField(blank=True, null=True)),
                ('update_interval', models.IntegerField(default=86400)),
                ('last_update_check', models.DateTimeField(blank=True, null=True)),
                ('notifications', models.BooleanField(default=False)),
                ('has_unseen_notification', models.BooleanField(default=False)),
                ('cached_render_result_workflow_id', models.IntegerField(blank=True, null=True)),
                ('cached_render_result_delta_id', models.IntegerField(blank=True, null=True)),
                ('cached_render_result_error', models.TextField(blank=True)),
                ('cached_render_result_json', models.BinaryField(blank=True)),
                ('is_busy', models.BooleanField(default=False)),
                ('fetch_error', models.CharField(blank=True, max_length=2000, verbose_name='fetch_error')),
                ('last_relevant_delta_id', models.IntegerField(default=0)),
                ('module_version', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wf_modules', to='server.ModuleVersion')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('anonymous_owner_session_key', models.CharField(blank=True, max_length=40, null=True, verbose_name='anonymous_owner_session_key')),
                ('original_workflow_id', models.IntegerField(blank=True, null=True)),
                ('public', models.BooleanField(default=False)),
                ('example', models.BooleanField(default=False)),
                ('in_all_users_workflow_lists', models.BooleanField(default=False)),
                ('lesson_slug', models.CharField(blank=True, max_length=100, null=True, verbose_name='lesson_slug')),
                ('selected_wf_module', models.IntegerField(blank=True, default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AddModuleCommand',
            fields=[
                ('delta_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server.Delta')),
                ('dependent_wf_module_last_delta_ids', models.CharField(blank=True, max_length=99999, validators=[django.core.validators.int_list_validator])),
                ('order', models.IntegerField()),
                ('applied', models.BooleanField(default=True)),
                ('selected_wf_module', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('server.delta', server.models.commands.util.ChangesWfModuleOutputs),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ChangeDataVersionCommand',
            fields=[
                ('delta_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server.Delta')),
                ('dependent_wf_module_last_delta_ids', models.CharField(blank=True, max_length=99999, validators=[django.core.validators.int_list_validator])),
                ('old_version', models.DateTimeField(null=True, verbose_name='old_version')),
                ('new_version', models.DateTimeField(verbose_name='new_version')),
            ],
            options={
                'abstract': False,
            },
            bases=('server.delta', server.models.commands.util.ChangesWfModuleOutputs),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ChangeParameterCommand',
            fields=[
                ('delta_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server.Delta')),
                ('dependent_wf_module_last_delta_ids', models.CharField(blank=True, max_length=99999, validators=[django.core.validators.int_list_validator])),
                ('new_value', models.TextField(verbose_name='new_value')),
                ('old_value', models.TextField(verbose_name='old_value')),
            ],
            options={
                'abstract': False,
            },
            bases=('server.delta', server.models.commands.util.ChangesWfModuleOutputs),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ChangeWfModuleNotesCommand',
            fields=[
                ('delta_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server.Delta')),
                ('new_value', models.TextField(verbose_name='new_value')),
                ('old_value', models.TextField(verbose_name='old_value')),
            ],
            options={
                'abstract': False,
            },
            bases=('server.delta',),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ChangeWfModuleUpdateSettingsCommand',
            fields=[
                ('delta_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server.Delta')),
                ('new_auto', models.BooleanField()),
                ('old_auto', models.BooleanField()),
                ('new_next_update', models.DateField(null=True)),
                ('old_next_update', models.DateField(null=True)),
                ('new_update_interval', models.IntegerField()),
                ('old_update_interval', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
            bases=('server.delta',),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ChangeWorkflowTitleCommand',
            fields=[
                ('delta_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server.Delta')),
                ('new_value', models.TextField(verbose_name='new_value')),
                ('old_value', models.TextField(verbose_name='old_value')),
            ],
            options={
                'abstract': False,
            },
            bases=('server.delta',),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='DeleteModuleCommand',
            fields=[
                ('delta_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server.Delta')),
                ('dependent_wf_module_last_delta_ids', models.CharField(blank=True, max_length=99999, validators=[django.core.validators.int_list_validator])),
                ('selected_wf_module', models.IntegerField(blank=True, null=True)),
                ('applied', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('server.delta', server.models.commands.util.ChangesWfModuleOutputs),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ReorderModulesCommand',
            fields=[
                ('delta_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='server.Delta')),
                ('dependent_wf_module_last_delta_ids', models.CharField(blank=True, max_length=99999, validators=[django.core.validators.int_list_validator])),
                ('old_order', models.TextField()),
                ('new_order', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('server.delta', server.models.commands.util.ChangesWfModuleOutputs),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('base_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='workflow',
            name='last_delta',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='+', to='server.Delta'),
        ),
        migrations.AddField(
            model_name='workflow',
            name='owner',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='wfmodule',
            name='workflow',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wf_modules', to='server.Workflow'),
        ),
        migrations.AddField(
            model_name='uploadedfile',
            name='wf_module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_files', to='server.WfModule'),
        ),
        migrations.AddField(
            model_name='storedobject',
            name='wf_module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stored_objects', to='server.WfModule'),
        ),
        migrations.AddField(
            model_name='parameterval',
            name='wf_module',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parameter_vals', to='server.WfModule'),
        ),
        migrations.AddField(
            model_name='delta',
            name='next_delta',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='+', to='server.Delta'),
        ),
        migrations.AddField(
            model_name='delta',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_server.delta_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='delta',
            name='prev_delta',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='+', to='server.Delta'),
        ),
        migrations.AddField(
            model_name='delta',
            name='workflow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deltas', to='server.Workflow'),
        ),
        migrations.AddField(
            model_name='deletemodulecommand',
            name='wf_module',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='server.WfModule'),
        ),
        migrations.AddField(
            model_name='changewfmoduleupdatesettingscommand',
            name='wf_module',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='server.WfModule'),
        ),
        migrations.AddField(
            model_name='changewfmodulenotescommand',
            name='wf_module',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='server.WfModule'),
        ),
        migrations.AddField(
            model_name='changeparametercommand',
            name='parameter_val',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='server.ParameterVal'),
        ),
        migrations.AddField(
            model_name='changedataversioncommand',
            name='wf_module',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='server.WfModule'),
        ),
        migrations.AddField(
            model_name='addmodulecommand',
            name='wf_module',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='server.WfModule'),
        ),
    ]
