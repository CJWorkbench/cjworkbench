version: '3.4'
# This docker-compose.yml is only used by cloudbuild: not by devs.

services:
  testdb:
    image: postgres:10
    volumes:
    - type: tmpfs
      target: /var/lib/postgresql/data
    environment:
      POSTGRES_USER: 'cjworkbench'
      POSTGRES_PASSWORD: 'cjworkbench'
      POSTGRES_DB: 'cjworkbench'
      PGDATA: /var/lib/postgresql/data/10.4
    command: [
      '-c', 'wal_level=minimal',
      '-c', 'max_wal_senders=0',
      '-c', 'fsync=off',
      '-c', 'synchronous_commit=off',
      '-c', 'full_page_writes=off'
    ]

  testrabbitmq:
    image: rabbitmq:3.7.8-alpine
    volumes:
      - type: tmpfs
        target: /var/lib/rabbitmq
    environment:
      # Use just one CPU
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: '+S 1:1 +stbt ts +A 12'

  testminio:
    image: minio/minio:RELEASE.2019-10-12T01-39-57Z
    volumes:
      - type: tmpfs
        target: /data
    environment:
      # The "mc" command will create the minio_access/minio_secret user
      MINIO_ACCESS_KEY: minio_root_access
      MINIO_SECRET_KEY: minio_root_secret
    command: server /data

  # RACE! Let's add a minio user as quickly as we can, and _hope_ we add the
  # user before unit tests start.
  addminiouser:
    image: minio/mc:RELEASE.2019-10-09T22-54-57Z
    depends_on: [ 'testminio' ]
    entrypoint: ''
    command: [ 'sh', '-c', 'while ! nc -z testminio 9000; do sleep 0.1; done; mc config host add workbench http://testminio:9000 minio_root_access minio_root_secret && mc admin user add workbench minio_access minio_secret && mc admin policy set workbench readwrite user=minio_access && sleep 999999' ]

  unittest:
    image: 'gcr.io/${PROJECT_ID}/frontend:${COMMIT_SHA}'
    # RACE! Sleep 10 so that `addminiouser` can finish
    command: [ 'sh', '-c', '/app/cjwkernel/setup-sandboxes.sh all && sleep 10 && exec ./manage.py test -v2' ]
    depends_on: [ 'testdb', 'testrabbitmq', 'testminio', 'addminiouser' ]
    security_opt:
      - seccomp=docker/pyspawner-seccomp-profile.json
    cap_add:
      - SYS_ADMIN # for /app/cjwkernel/setup-sandboxes.sh (on k8s we use an init container instead)
      - NET_ADMIN # for pyspawner to create new network namespace without access to private network
    # WHY privileged? Woe is we! SYS_ADMIN and special seccomp aren't enough to
    # make /app/cjwkernel/setup-sandboxes.sh work on Cloud Build servers. But
    # [2019-11-06, adamhooper] they work on my machine. The big difference
    # is Docker version; so maybe if/wen Cloud Build upgrades its Docker daemon
    # to 19.03 we can try deleting "privileged".
    privileged: true  # WHY?
    environment:
      PYTHONUNBUFFERED: '1'
      ASGI_THREADS: '5'
      CJW_RABBITMQ_HOST: amqp://guest:guest@testrabbitmq
      CJW_PRODUCTION: 'True'
      CJW_DB_HOST: testdb
      CJW_DB_PASSWORD: cjworkbench
      CJW_SECRET_KEY: cjw-secret-key
      CJW_MOCK_EMAIL: 'True'
      MINIO_ACCESS_KEY: minio_access
      MINIO_SECRET_KEY: minio_secret
      MINIO_URL: http://testminio:9000
      MINIO_BUCKET_PREFIX: unittest
