version: '3.4'
# This docker-compose.yml is only used by cloudbuild: not by devs.

services:
  testdb:
    image: postgres:12
    volumes:
    - type: tmpfs
      target: /var/lib/postgresql/data
    environment:
      POSTGRES_USER: 'cjworkbench'
      POSTGRES_PASSWORD: 'cjworkbench'
      POSTGRES_DB: 'cjworkbench'
      PGDATA: /var/lib/postgresql/data/12
    command: [
      '-c', 'wal_level=minimal',
      '-c', 'max_wal_senders=0',
      '-c', 'fsync=off',
      '-c', 'synchronous_commit=off',
      '-c', 'full_page_writes=off'
    ]

  testrabbitmq:
    image: rabbitmq:3.8.11-alpine
    environment:
      # Use just one CPU
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: '+S 1:1'

  testminio:
    image: minio/minio:RELEASE.2021-05-26T00-22-46Z
    volumes:
      - type: tmpfs
        target: /data
    environment:
      MINIO_ACCESS_KEY: minio_access
      MINIO_SECRET_KEY: minio_secret
    entrypoint: ''
    command:
      - sh
      - '-c'
      - |
        PREFIX=unittest
        for bucket in user-files static stored-objects external-modules cached-render-results upload; do
            mkdir -p /data/$$PREFIX-$$bucket
        done
        rm -rf /data/.minio.sys
        mkdir -p /data/.minio.sys/buckets/$$PREFIX-static/
        cat > /data/.minio.sys/buckets/$$PREFIX-static/policy.json <<EOT
        {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Sid": "",
                    "Effect": "Allow",
                    "Principal": {"AWS": "*"},
                    "Action": ["s3:GetBucketLocation", "s3:ListBucket"],
                    "Resource": ["arn:aws:s3:::$$PREFIX-static"]
                },
                {
                    "Sid": "",
                    "Effect": "Allow",
                    "Principal": {"AWS": "*"},
                    "Action": ["s3:GetObject"],
                    "Resource": ["arn:aws:s3:::$$PREFIX-static/*"]
                }
            ]
        }
        EOT
        minio server /data

  testtusd:
    image: tusproject/tusd:v1.4.0
    environment:
      AWS_ACCESS_KEY_ID: minio_access
      AWS_SECRET_ACCESS_KEY: minio_secret
      AWS_REGION: us-east-1
    command: [
      '-port=8080',
      # no hooks in unit tests
      '-s3-endpoint=http://testminio:9000',
      '-s3-bucket=unittest-upload',
    ]

  migrate:
    image: 'gcr.io/${PROJECT_ID}/migrate:${COMMIT_SHA}'
    depends_on: [ 'testdb' ]
    environment:
      FLYWAY_URL: 'jdbc:postgresql://testdb/cjworkbench'
      FLYWAY_USER: cjworkbench
      FLYWAY_PASSWORD: cjworkbench

  unittest:
    image: 'gcr.io/${PROJECT_ID}/unittest:${COMMIT_SHA}'
    command: [ 'sh', '-c', '/app/cjwkernel/setup-sandboxes.sh all && exec /opt/venv/django/bin/python manage.py test --keepdb --noinput -v2' ]
    depends_on: [ 'testdb', 'testrabbitmq', 'testminio', 'testtusd' ]
    security_opt:
      - seccomp=docker/pyspawner-seccomp-profile.json
    cap_add:
      - SYS_ADMIN # for /app/cjwkernel/setup-sandboxes.sh (on k8s we use an init container instead)
      - NET_ADMIN # for pyspawner to create new network namespace without access to private network
    # WHY privileged? Woe is we! SYS_ADMIN and special seccomp aren't enough to
    # make /app/cjwkernel/setup-sandboxes.sh work on Cloud Build servers. But
    # [2019-11-06, adamhooper] they work on my machine. The big difference
    # is Docker version; so maybe if/wen Cloud Build upgrades its Docker daemon
    # to 19.03 we can try deleting "privileged".
    privileged: true  # WHY?
    environment:
      PYTHONUNBUFFERED: '1'
      ASGI_THREADS: '3'
      CJW_RABBITMQ_HOST: amqp://guest:guest@testrabbitmq/
      CJW_PRODUCTION: 'True'
      CJW_DB_HOST: testdb
      CJW_DB_PASSWORD: cjworkbench
      CJW_SECRET_KEY: cjw-secret-key
      CJW_MOCK_EMAIL: 'True'
      AWS_ACCESS_KEY_ID: minio_access
      AWS_SECRET_ACCESS_KEY: minio_secret
      AWS_S3_ENDPOINT: http://testminio:9000
      S3_BUCKET_NAME_PATTERN: "unittest-%s"
      TUS_CREATE_UPLOAD_URL: http://testtusd:8080/files
