.param-filters {
  @extend %content-2;
  line-height: 1.5rem; //FIXME fix class of text that does not wrap

  h5 {
    @extend .content-2;
    color: $brand-orange--darker;
    text-transform: uppercase;
    line-height: 1.6rem;
    margin-bottom: 0;
    font-weight: bold;
  }

  .filter {
    border: 1px solid $brand-orange--medium;
    border-radius: 5px;
    padding: .5rem;

    & + .filter {
      margin-top: 1rem;
    }

    .filter-heading {
      position: relative;

      button.delete { // delete filter group
        position: absolute;
        right: -.75rem;
        top: -.25rem;
        border: 0;
        color: $brand-orange--darker;
      }
    }

    .filter-operator {
      text-align: left; // in a filter, operators stay on the left
    }
  }

  .filter-operator {
    // both &>.filter-operator and .filter>.filter-operator
    text-align: center;
    margin-top: .6rem;
    margin-bottom: .5rem;

    button, span {
      background: none;
      box-shadow: none;
      margin: 0;
      padding: 0;
      border: 0;
      font-weight: bold;

      &.unselected-operator {
        cursor: pointer;
        color: $text-muted;
        &:hover {
          color: $brand-orange;
        }
      }

      &.selected-operator {
        //font-weight: bold;
        color: $brand-orange--darker;
      }

      &:last-child {
        margin-left: .5rem;
        border-left: 1px solid $light-gray;
        padding-left: .5rem;
      }
    }
  }

  .add-filter {
    // both &>.add-filter and .filter>.add-filter
    button {
      background: none;
      border: 0;
      padding: 0;
      margin: 0;
      cursor: pointer;
      color: $text-muted;;
      font-weight: bold;

      &:hover {
        color: $brand-orange;
      }
    }

    button + button {
      margin-left: .5rem;
      border-left: 1px solid $light-gray;
      padding-left: .4rem;
    }
  }

  &>.add-filter {
    text-align: center;
    margin-top: .5rem;
  }

  .filter {
    &>.add-filter {
      margin-top: .5rem;
    }
  }

  .subfilter {
    position: relative; // to position button.delete

    button.delete { // delete condition
      margin-top: $param-group-margin;
      position: absolute;
      right: 0;
      border: 0;
      color: $medium-gray;
      padding-right: 0;
      padding-top: 0;
    }

    label.case-sensitive {
      margin-top: $param-group-margin;
      position: absolute;
      right: 2rem;
      font-size: 1.3rem;
      display: flex;
      align-items: center;
      margin-bottom: 0;

      input::after { // to diplay checkbox correctly bug? // FIXME
        position: absolute;
        top: 0;

      }
    }
  }

  .column:not(:last-child):not(:last-of-type) .react-select__control { // #1, column always there - keep round border at bottom if the last of list within filter of type (buttons are in the subfilter)
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }

  select { // #2, select condition, aways there, 3px border-radius when no #3
    background-color: $table-background;
    border: 2px solid $Vlight-gray;
    border-top-color: transparent;
    border-bottom-color: transparent;
    border-radius: 0;
    &:hover {
      border-color: darken($Vlight-gray, 7%);
    }
    &:focus {
      border-color: $data-action--border;
    }
    &:last-child {
      border-bottom-left-radius: 3px;
      border-bottom-right-radius: 3px;
      border-bottom-color: $Vlight-gray;
      &:hover {
        border-color: darken($Vlight-gray, 7%);
      }
    }
  }

  .value .autosize textarea { // value displayed if required by condition in #2 -- always in last position
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-top-color: transparent;
    &:hover {
      border-color: darken($Vlight-gray, 7%);
    }
    &:focus {
      border-color: $data-action--border;
    }
  }

  .value {
    .autosize {
      @extend %autosize-with-textarea;
      &>* {
        @extend %module-parameter;
        height: auto; // unset %module-parameter height: our height varies
      }
    }
  }

  button.delete { // for all button.delette
    font-size: 1.1rem;
    background-color: transparent;
    opacity: .5;
    cursor: pointer;
    &:hover {
      opacity: 1;
    }
  }

  select {
    @extend %custom-select;
  }
}

//read-only edits
.workflow-root.read-only {

  span.selected-operator {
    border-left: 0;
    margin-left: 0;
    padding-left: 0;
  }

  label.case-sensitive {
    display: none;
  }
  .subfilter button.delete{
    display: none;
  }
}
