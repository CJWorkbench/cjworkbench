/* Output Pane */
.outputpane {
  flex: 1 1 auto;
  position: relative;
}

.outputpane-iframe {
  width:100%;
  height: calc(50% - 3rem);
  margin-bottom: -0.5rem;
  position:relative;
  iframe {
    border:none;
    height: 100%;
    width: 100%;
    padding-bottom: 0.5rem;
  }
  .outputpane-iframe-control-overlay {
    position: absolute;
    top:1.5rem;
    right:6rem;
    width: 4rem;
    height: 4rem;
    background-color: transparent;
  }
  .outputpane-iframe-control-overlay .btn {
    position: absolute;
    width: 4rem;
    height: 4rem;
    border-radius: 50px;
    display: flex;
    justify-content: center;
    align-items: center;
    border: 1px solid #E7E7E7;
    font-size: 1.6rem;
  }
  .outputpane-iframe-control-overlay .btn:hover{
    background-color: #48C8D7;
    border: 0px;
    color: #fff;
  }
}

.btn icon icon-code

/* This div may be superfluous wrt .outputpane */

.outputpane-iframe + .outputpane-table {
  height: calc(50% - 3rem);
}
.outputpane-table {
  height:calc(100% - 5.5rem);
  position:relative;
}

.outputpane-header {
  height: 5.5rem;
  background-color: #FFFFFF;
  padding: 2rem 3rem 2rem 3rem;
}

.outputpane-data {
  overflow: hidden;
  position: absolute;
  top:5.5rem;
  left:0;
  right:0;
  bottom:0;
}

.react-grid-Canvas{
  background-color:#fff;
}

.overlapping .outputpane.focus .outputpane-box {
  z-index: 2;
  box-shadow: 0px 2px 10px rgba(0,0,0,0.2);
}

/* Create an overlay to absorb click events so we don't change settings or set a different
active wfmodule on focus change. We use the pseudo-element "after" to avoid writing an empty
div into the DOM, since we don't really want another element, we just want this behavior. */

.overlapping .outputpane:not(.focus)::after {
  content:' ';
  display: block;
  top:0;
  left:0;
  right:0;
  bottom:0;
  position:absolute;
}
