// Dropdown menus


.dropdown-menu {
  position: absolute;
  margin-top: 0.5rem;
  border:2px solid $brand-workspace--medium;
  border-radius: 5px;
  box-shadow: $overlay-shadow;
  padding:0.5rem 0 0.5rem 0;

  .dropdown-item {
    @extend .content-3;
    height: 4rem;
    width: 14rem;
    background-color: $white;
    display: flex;
    align-items: center;
    justify-content: flex-start;
    padding-left: 1rem;
    cursor:pointer;

    i, span {color: $brand-text--medium;}

    &:hover {
      background-color: $dark-accent--soft;

    i, span {color: $brand-text--dark;}
    }
    &:active {
      background-color: $dark-accent--medium;
    }
  }

  .dropdown-divider{
    opacity: 0.5;
  }

  i {
    margin-right: .75rem;
    width: 1.25rem;
    font-size: 1.25rem;
    display: flex;
    justify-content: center;
  }
}

.workflow-root.in-lesson,
.lessons-page {

  .dropdown-menu {
    border:2px solid $brand-learn--medium;
  }
  .custom-select:focus{
    border: 2px solid $brand-learn;
    box-shadow: none;
  }

  .module-parameter:focus{
    border: 2px solid $brand-learn;
    box-shadow: none;
  }
}



// Parameters input and text Fields

// Getting rid of system blue

textarea:focus, input:focus{
    outline: none;
}

// Shared style to all paramters in modules

.module-parameter {
  cursor: pointer;
  width:100%;
  color: $brand-text--dark;
  @extend .content-3;
  height:3.5rem;
  border-radius: 3px;
  border: 2px solid $Vlight-gray;
  background-color: $Vlight-gray !important;
  &:hover {
  border: 2px solid $dark-accent--soft;
  }
}

.single-line-text-field {
  @extend .module-parameter;
  position: relative; // so we can position button absolute
  height: auto;
  padding: .5rem 1rem;

  .resize-calculator, textarea {
    word-break: break-all;
  }

  .resize-calculator {
    overflow: hidden;
    height: 0;
    // The <span> inside will render ... but it won't appear on the page
  }

  textarea {
    display: block;
    font: inherit;
    padding: 0;
    margin: 0;
    border: 0;
    background: transparent;
    width: 100%;
    height: 100%;
    resize: none;
    overflow: hidden;
    color:$brand-text--dark;
  }

  button {
    cursor: pointer;
    position: absolute;
    right: 1.2rem;
    bottom: .9rem;
    width: 1.5rem;
    height: 1.5rem;
    text-align: center;
    border: 0;
    background: transparent;
    color: $brand-orange;
  }
}

.number-field {
  @extend .module-parameter;
  display: flex; // so button can align to the right
  height: auto;
  padding: 0;

  input {
    flex: 1 1 auto; // almost all horizontal space
    display: block;
    font: inherit;
    padding: .7rem 1rem;
    margin: 0;
    border: 0;
    line-height: 1;
    background: transparent;

    // Hide "spin" arrows
    -moz-appearance: textfield;
    &::-webkit-outer-spin-button, &::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
  }

  button {
    flex: 0 0 auto; // just a bit of space on the right
    cursor: pointer;
    width: 1.6rem;
    height: 3.2rem;
    line-height: 1;
    text-align: center;
    border: 0;
    padding: 0;
    margin: 0;
    background: transparent;
    color: $brand-orange;
  }
}

.text-field {
  @extend .module-parameter;
  padding: 0 1rem;
  white-space: nowrap;
  display: flex;
  line-height: 3.3rem;
  width: 100%;
  resize: none;
  overflow:hidden;
}

.wf-card .text-field {
  margin-top: -0.1rem;
}

.text-field-large {
  height: 12rem;
  width: 100%;
  padding: 1rem;
  resize: vertical;
  overflow:hidden;
}

.text-field-readonly {
  white-space: nowrap;
  width:23rem;
  line-height: 1.5rem;
  height: 1.5rem;
  overflow: hidden;
}

.dropdown-selector {
  font-size: 1.3rem;
  color:#686768;
}



.custom-select {
  background-size: 0px;
  &:focus{
  border: 2px solid $brand-workspace;
  box-shadow: none;
  }
}

.chart-series-multi-select {

  .input-group-prepend{

    button {
      z-index: 2;
      position: absolute;
      border-radius: 3px 0 0 3px!important;
      width: 2rem;
    }
  }

  .custom-select {
    margin-left: 1.8rem;
  }

  .buttons {
    text-align: right;
    padding-top: .5rem;

    button {
      font: inherit;
      font-size: 1.5rem;
      color: inherit;
      cursor: pointer;
      background: transparent;
      border: 0;
      display: inline-block;
      padding-right: 0;
      opacity: .7;
      &:hover {opacity: 1}
    }
  }
}

.module-parameter:focus{
  border: 2px solid $brand-workspace;
}



// placeholder text within text fields

::-webkit-input-placeholder { /* Chrome/Opera/Safari */
  color:$placeholder;
  font-size: 1.3rem;

}
::-moz-placeholder { /* Firefox 19+ */
  color: $placeholder;
  font-size: 1.3rem;
}

:-ms-input-placeholder { /* IE 10+ */
  color:$placeholder;
}

:-moz-placeholder { /* Firefox 18- */
  color:$placeholder;
  font-size: 1.3rem;
}


.form-control-lg, .input-group-lg > .form-control, .input-group-lg > .input-group-addon, .input-group-lg > .input-group-btn > .btn{
  border-radius: 0px;
  border: 0px;
  height: 3.5rem;
}

.form-control:focus{
  border-color: $brand-workspace;
}

.form-control-lg.form-control{
  height:3.5rem!important;
  border: 2px solid $Vlight-gray;
  border-radius: 3px;
  background-color: $Vlight-gray;
  height: 3.5rem;
}

select.form-control {
    -webkit-appearance: none;
    -webkit-border-radius: 0px;
    background-image: url("data:image/svg+xml;utf8,<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='24' height='24' viewBox='0 0 24 24'><path fill='#444' d='M7.406 7.828l4.594 4.594 4.594-4.594 1.406 1.406-6 6-6-6z'></path></svg>");
    background-position: 100% 50%;
    background-repeat: no-repeat;
    padding: 0 1.25rem;
}

/* --- Editable text fields --- */

.module-title {
  @extend %font-nunito-regular;
  font-size: 1.8rem;
	line-height: 1.8rem;
  color: $white;
  width: 100%;
  background: none;
}

.module-notes {
  // By default, notes aren't shown. We only show them if they are in focused or
  // if they are non-empty. But we cannot set display:none, because the user
  // may call notesInputRef.current.focus() before they become visible.
  padding: .5rem 0 .2rem 0;
  &:not(.visible) {
    overflow: hidden;
    margin: 0;
    padding: 0;
    height: 0;
  }
}

textarea[name="notes"], .editable-notes-read-only {
  @extend %content-3;
  border: none;
  outline: none;
  width: 25rem;
  min-height: 3rem;
  resize: none;
  @extend %font-nunito-regular;
  font-size: 1.3rem;
	line-height: 2.2rem;
  color: $brand-text--dark;
  background-color:transparent;
  display: table;
  margin:auto;
}

.twitter-picker {
  // Override react-color's style. We can't set `width` because react-color
  // uses JS to set styles. But we can set `max-width`.
  max-width: 24rem;

  // Center horizontally
  // (it's already position:relative)
  left: -.6rem;

  // Place vertically so triangle is just next to button
  top: .3rem;

  // Can't adjust 'border' or 'box-shadow'. TwitterPicker does, but far too
  // pale. Instead, use '::before' and '::after' to create a triangle pointer
  // ... can we all agree that reactcss is terrible for customization?
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 1px solid $light-gray;
  }

  &::after {
    content: '';
    position: absolute;
    top: -.5rem;
    left: 1.1rem; // centered on button
    width: 1rem;
    height: 1rem;
    background: white;
    transform: rotate(-45deg);
    border: 1px solid transparent;
    border-right-color: $light-gray;
    border-top-color: $light-gray;
  }
}
