

// Transition
.btn{
  -webkit-transition:all 0.2s;
}

//getting rid of Blue Focus
button:focus { outline:0 !important; }

/*overriding React styles for contextual button*/

.btn:focus {
  webkit-box-shadow:none;
  box-shadow: none;
}


//Context buttons ///////////

.btn-secondary:not(:disabled):not(.disabled):active,
.btn-secondary:not(:disabled):not(.disabled).active,
.show > .btn-secondary.dropdown-toggle,
.btn-secondary:not(:disabled):not(.disabled):active,
.btn-secondary:not(:disabled):not(.disabled).active,
.show > .btn-secondary.dropdown-toggle{

  background-color:$Vlight-gray;
  border: 0;
}



//Button when clicked only
.btn-secondary:not(:disabled):not(.disabled).active:focus,
.show > .btn-secondary.dropdown-toggle:focus {
  box-shadow: none;
  background-color:$Vlight-gray;
  color:$strong-gray;
  opacity: 1;
}

// BUTTON IN FOCUS, After click
.btn-secondary:focus {
  background-color:$Vlight-gray;
  color:$strong-gray;
  opacity: 1;
  border:0;
}

//Button in focus, onClick
.btn-secondary:not(:disabled):not(.disabled):active:focus,
.btn-secondary:not(:disabled):not(.disabled).active:focus,
.show > .btn-secondary.dropdown-toggle:focus {
  box-shadow: none;
}

//In WF list
.btn-secondary:not(:disabled):not(.disabled):active,
.btn-secondary:not(:disabled):not(.disabled).active,
.show > .btn-secondary.dropdown-toggle {
  color:$strong-gray;
  border:0;
}



.context-button {
  cursor: pointer;
  border: 0;
  width: 2.5rem;
  height: 2.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: transparent;
  color:$strong-gray;
  border-radius: 5rem;
  opacity: 0.5;
  margin-right:0;
  font-size: 1.4rem;
  &:hover {
    border: none;
    color:$strong-gray;
    opacity: 1;
  }
}

.context-button.btn-secondary.active{
  background-color: #E7EAEB;
  border:0px;
  border-radius: 5rem;
  color:#686768;
  opacity:1;
}


.navbar {

  .context-button {
    width: 3rem;
    height: 3rem;
    color:$white;
    opacity:.8;
    &:hover {
      background-color: $light-accent--medium;
      opacity: 1;
    }
  }


  .btn-secondary:not(:disabled):not(.disabled):active,
  .btn-secondary:not(:disabled):not(.disabled).active,
  .show > .btn-secondary.dropdown-toggle {
    box-shadow: none;
    background: $light-accent--strong;
    opacity: 1;
    color:$white;
  }

  .btn-secondary:focus{
    background-color: $light-accent--strong;
  }
}

.wf-card {
  .context-button:hover{
    background-color: $dark-accent--soft;
  }
}


//* - Action button - */

%action-button {
  cursor: pointer;
  text-align: center;
  min-width: 7rem;
	height: 4rem;
  border-radius: 2.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
	font-size: 1.4rem;
  line-height: 1.4rem;
  padding: 0 1.8rem 0 1.8rem;
  -webkit-transition: opacity 0.1s;
  transition: opacity 0.1s;
}

.action-button { @extend %action-button; }

.action-button + .action-button {
  margin-left: 1rem;
}

.button-white {
  color: $white;
  border: 1px solid $white;
  background-color: transparent;
  &:hover {
  background-color: $light-accent--strong;
  }
  &:active {
    background-color: $light-accent--Vstrong;
  }
}

.button-white--fill {
  background-color: #FFF;
  color: $brand-workspace;
  border:1px solid #fff;
  &:hover{
    background-color:$light-accent--strong;
    color:$white;
  }
  &:active {
    background-color: $light-accent--Vstrong;
    border:1px solid $white;
  }
}

.button-gray {
  color: $medium-gray;
  border: 1px solid $medium-gray;
  background-color: transparent;
  &:hover {background-color:$light-accent--Vstrong;}
  &:active {
    background-color:$dark-accent--soft;
  }
}

%button-blue {
  color: $brand-workspace;
  border: 1px solid $brand-workspace ;
  background-color: transparent;
  &:hover {background-color: $brand-workspace--light}
  &:active {
    background-color: $brand-workspace !important;
    color: $white !important;
  }
}

.button-blue { @extend %button-blue; }

%button-blue--fill {
  background-color: $brand-workspace;
  color: $white;
  border:none;
  &:hover {
    background-color: $brand-workspace--light;
    border: 1px solid $brand-workspace;
    color:$brand-workspace;
  }
  &:active {
    background-color: $brand-workspace !important;
    color: $white !important;
  }
}

.button-blue--fill { @extend %button-blue--fill; }


.button-orange {
  color: $brand-orange;
  border: 1px solid $brand-orange ;
  background-color: transparent;
  &:hover {background-color: $brand-orange--light}
  &:active {
    background: $brand-orange;
    color:$white;
  }
}


/* help button --> Help center in the bottom left screen  */

// On Worklow list page
.help-container{
  z-index: 2000;
  position: fixed;
  bottom: 9rem;
  left: 4.5rem;
  display: none;
}

// On Worklow page
.workflows-page {
  .help-container{
    left: 3.5rem;
  }
}

.help-shortcut{
  margin: auto;
  background-color: #769BB0;
  height: 3rem;
  width:3rem;
  z-index: 1000;
  border-radius: 50px;
  //border:2px solid #fff;
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0 0 1rem 0 rgba(0,0,0,0.10);
  cursor:pointer;
  -webkit-transition: opacity 0.1s;
    transition: opacity 0.1s;
  box-shadow: 0.3rem 0.3rem 2.5rem 0 rgba(0,0,0,0.20);
}

.help-container a:hover{
  text-decoration: none;
}


/*checkbox-list*/

// All - none selectors

.mc-select-all{
  border: 0px;
  background-color: transparent;
  border-right:1px solid $light-gray;
  padding: 0 1rem 0 0;
  cursor: pointer;
}

.mc-select-none {
  background-color: transparent;
  border: 0px;
  padding: 0 0 0 1rem;
  cursor: pointer;
}

.mc-select-all:hover,
.mc-select-none:hover {
  color:$brand-orange;
}

//Checkboxes

.checkbox-container {
  background-color: $white;
  height: 3.4rem;
  width: 100%;
  margin-bottom: 1px;
  padding: 0 1rem;
  display:flex;
  align-items: center;
  &:last-child{
  margin-bottom: 0px;
  }
}


.list-wrapper{
  background-color: #ededed;
  resize: vertical;
  border-radius: 3px;
  max-height: 26rem;
  overflow: auto;
  border: 1px solid $Vlight-gray;
}

.list-scroll{
  overflow-y:hidden;
}

/*Solo-checkboxes*/
.checkbox-content{
  overflow:hidden;
}
.checkbox-wrapper{
  margin-top: 0.3rem;
  margin-right: 2rem;
  display:inline-block;
}

/*Bigger size checkbox for non webkit browsers*/

input[type=checkbox]
{
  -webkit-appearance: none;
	background-color: #fff;
	border: 1px solid $Vlight-gray;
	padding: 0.7rem;
	border-radius: 3px;
	display: inline-block;
	position: relative;
  margin-right: 0.5rem;
  -ms-transform: scale(1.3); /* IE */
  -moz-transform: scale(1.3); /* FF */
  -o-transform: scale(1.3); /* Opera */
}


input[type=checkbox]:active, input[type=checkbox]:checked:active {
	box-shadow: inset 0px 1px 0px $brand-orange;
}

input[type=checkbox]:checked {
	background-color: $brand-orange;
	border: 1px solid $brand-orange;
	box-shadow: 0 1px 2px rgba(0,0,0,0.05), inset 0px -15px 10px -12px rgba(0,0,0,0.05), inset 15px 10px -12px rgba(255,255,255,0.1);
	color: #99a1a7;
}

input[type=checkbox]:checked:after {
  font-family:'Workbench';
	content: '\e904';
	font-size: 0.8rem;
	position: absolute;
	top: 1.5px;
	left: 2.5px;
	color: $white;
}

// ADD REMOVE BUTTONS FOR PARAMETERS

.checkbox-wrapper.addremove {
  margin-right:0;
}

.addremove .checkbox {
  display: none;
}

.checkbox-wrapper label {
  margin-bottom: 0;
}

.addremove label {
  @extend .icon;
  background: transparent;
  width:1.3rem;
  height:1.3rem;
  font-size:1.3rem;
  display:block;
  color: #B4B4B4;
  cursor: pointer;
}

.addremove label:hover{
  color: #686768;
}

.addremove .checkbox + label {
  @extend .icon-addc;
  position: relative;
  padding:0 0.5rem;
  left: 21.2rem;
  top:0.2rem;
}

.addremove .checkbox:checked + label {
  @extend .icon-addm;
  margin-right: 0.5rem;
}

.addremove .checkbox:checked + label, .addremove + .addremove label {
  padding:0 0.5rem;
  left: 19.25rem;
  top:0.2rem;
}

.addremove.last .checkbox:checked + label {
  padding:0 0.5rem;
  left: 21.2rem;
  top:0.2rem;
}

/* This is here until we create actual grouped parameters. When the
next group down has its 'active' checkbox checked, we insert an element
before the previous checkbox, then hide both that checkbox and its
sibling. This is a terrible hack and also the most lightweight way
to do this until we make larger architectural changes. */
.cheat, .cheat + .addremove {
  display:none;
}

.hide-with-sibling {
  display:none;
}

.show-sibling + .hide-with-sibling {
  display: block;
}
