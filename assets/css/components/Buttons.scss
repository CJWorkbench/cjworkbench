


//getting rid of Blue Focus
button:focus { outline:0 !important; }

/*overriding React styles for contextual button*/

.btn {
  animation: none;
}

.btn:focus {
  webkit-box-shadow:none;
  box-shadow: none;
}


//Context buttons ///////////

.btn-secondary:not(:disabled):not(.disabled):active,
.btn-secondary:not(:disabled):not(.disabled).active,
.show > .btn-secondary.dropdown-toggle,
.btn-secondary:not(:disabled):not(.disabled):active,
.btn-secondary:not(:disabled):not(.disabled).active,
.show > .btn-secondary.dropdown-toggle{

  background-color:$Vlight-gray;
  border: 0;
}



//Button when clicked only
.btn-secondary:not(:disabled):not(.disabled).active:focus,
.show > .btn-secondary.dropdown-toggle:focus {
  box-shadow: none;
  background-color:$Vlight-gray;
  color:$dark-gray;
  opacity: 1;
}

// BUTTON IN FOCUS, After click
.btn-secondary:focus {
  background-color:$Vlight-gray;
  color:$dark-gray;
  opacity: 1;
  border:0;
}

//Button in focus, onClick
.btn-secondary:not(:disabled):not(.disabled):active:focus,
.btn-secondary:not(:disabled):not(.disabled).active:focus,
.show > .btn-secondary.dropdown-toggle:focus {
  box-shadow: none;
}

//In WF list
.btn-secondary:not(:disabled):not(.disabled):active,
.btn-secondary:not(:disabled):not(.disabled).active,
.show > .btn-secondary.dropdown-toggle {
  color:$dark-gray;
  border:0;
}


.context-button {
  cursor: pointer;
  border: 0;
  width: 2.5rem;
  height: 2.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: transparent;
  color:$dark-gray;
  border-radius: 5rem;
  opacity: 0.6;
  margin-right:0;
  font-size: 1.4rem;
  &:hover {
    border: none;
    color:$dark-gray;
    opacity: 1;
  }
}

.context-button.btn-secondary.active{
  background-color: #E7EAEB;
  border:0px;
  border-radius: 5rem;
  color:#686768;
  opacity:1;
}

.navbar {

  .context-button {
    width: 3rem;
    height: 3rem;
    color:$white;
    opacity:.8;
    &:hover {
      background-color: $light-accent--medium;
      opacity: 1;
      color:$white;
    }
  }


  .btn-secondary:not(:disabled):not(.disabled):active,
  .btn-secondary:not(:disabled):not(.disabled).active,
  .show > .btn-secondary.dropdown-toggle {
    box-shadow: none;
    background: $light-accent--strong;
    opacity: 1;
    color:$white;
  }

  .btn-secondary:focus{
    background-color: $light-accent--strong;
  }
}

.wf-card {
  .context-button:hover{
    background-color: $dark-accent--soft;
  }
}


//* - Action button - */

.action-button {
  cursor: pointer;
  border: 2px solid $brand-workspace;
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 7rem;
	height: 3.5rem;
  border-radius: 2.5rem;
	font-size: 1.4rem;
  line-height: 1.4rem;
  padding: 0 1.6rem;
  text-decoration: none;
}

.action-button:disabled {
  color: $light-gray;
  border-color: $light-gray;
  &:hover{
    background-color: transparent;
    cursor: default;
  }
}

// In lesson left pannel:
.lesson {
  .action-button:disabled {
    color: $light-accent--Vstrong;
    border-color: $light-accent--Vstrong;
    &:hover{
      background-color: transparent;
      cursor: default;
    }
  }
}

.action-button + .action-button {
  margin-left: 1rem;
}

.action-button .busy {
  color:red;
}

.action-button .spinner {
  $background-color: white; // default -- we'll override it
  $spinner-color: $brand-orange;
  position: absolute!important;

  // overlap into the border's margin. There's tons of room because we use
  // rounded buttons and the spinner is also round
  // https://projects.lukehaas.me/css-loaders/
  width: 1.5rem;
  height: 1.5rem;
  border-radius: 50%;
  background: #ffffff;
  background: -moz-linear-gradient(left, $spinner-color 10%, rgba($spinner-color, 0) 42%);
  background: -webkit-linear-gradient(left, $spinner-color 10%, rgba($spinner-color, 0) 42%);
  background: -o-linear-gradient(left, $spinner-color 10%, rgba($spinner-color, 0) 42%);
  background: linear-gradient(to right, $spinner-color 10%, rgba($spinner-color, 0) 42%);
  position: relative;
  -webkit-animation: spinner-in-button 1.4s infinite linear;
  animation: spinner-in-button 1.4s infinite linear;
  -webkit-transform: translateZ(0);
  -ms-transform: translateZ(0);
  transform: translateZ(0);

  &::before {
    width: 50%;
    height: 50%;
    background: $spinner-color;
    border-radius: 100% 0 0 0;
    position: absolute;
    top: 0;
    left: 0;
    content: '';
  }

  &::after {
    background: $brand-orange--light;
    width: 75%;
    height: 75%;
    border-radius: 50%;
    content: '';
    margin: auto;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
  }
}


@-webkit-keyframes spinner-in-button {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}
@keyframes spinner-in-button {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

.button-white {
  color: white;
  border-color: $white;
  background-color: transparent;
  &:hover, &:hover .spinner::after {
    background-color: $light-accent--strong;
  }
  &:active, &:active .spinner::after {
    background-color: $light-accent--Vstrong;
  }
}

.button-white--fill {
  color: $brand-workspace;
  border-color: $white;
  &, .spinner::after {
    background-color: white;
  }
  &:hover, &:hover .spinner::after {
    background-color:$light-accent--strong;
    color: white;
  }
  &:active, &:active .spinner::after {
    background-color: $light-accent--Vstrong;
    border: 2px solid white;
  }
}

%button-gray {
  color: $medium-gray;
  border-color: $medium-gray;
  background-color: transparent;
  &:hover {background-color:$light-accent--Vstrong;}
  &:active {
    background-color:$dark-accent--soft;
  }
}

.button-gray { @extend %button-gray; }

%button-blue {
  color: $brand-workspace;
  border-color: $brand-workspace ;
  background-color: transparent;
  &:hover, &:hover .spinner::after {
    background-color: $brand-workspace--light
  }
  &:active, &:active .spinner::after {
    background-color: $brand-workspace;
    color: white;
  }
}

.button-blue {
  @extend %button-blue;
}

%button-blue--fill {
  background-color: $brand-workspace;
  color: white;
  border-color:transparent;
  &:hover {
    background-color: $brand-workspace--light;
    border-color: $brand-workspace;
    color:$brand-workspace;
  }
  &:active {
    background-color: $brand-workspace;
    color: white;
  }
}

.button-blue--fill { @extend %button-blue--fill; }


.button-orange {
  color: $brand-orange;
  border-color: $brand-orange ;
  background-color: transparent;
  &:hover {background-color: $brand-orange--light}
  &:active {
    background: $brand-orange;
    color: $white;
  }
}

// Style for button with Icon within
.button-icon {
  cursor: pointer;
  height: 3.5rem;
  width: 6rem;
  border: 2px solid $Vlight-gray;
  background-color: $white;
  display: flex;
  align-items: center;
  justify-content: center;
  color:$medium-gray;
  border-radius: 0 3px 3px 0;
  font-size: 1.5rem;
  text-decoration: none;
  &:hover {
    background-color: $SuperLightGray;
    text-decoration:none;
    color: $brand-text--dark;
  }
}

.help-shortcut{
  margin: auto;
  background-color: #769BB0;
  height: 3rem;
  width:3rem;
  z-index: 1000;
  border-radius: 50px;
  //border:2px solid #fff;
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0 0 1rem 0 rgba(0,0,0,0.10);
  cursor:pointer;
  -webkit-transition: opacity 0.1s;
    transition: opacity 0.1s;
  box-shadow: 0.3rem 0.3rem 2.5rem 0 rgba(0,0,0,0.20);
}


/*checkbox-list*/

// All - none selectors

.mc-select-all{
  border: 0px;
  background-color: transparent;
  border-right:1px solid $light-gray;
  padding: 0 1rem 0 0;
  cursor: pointer;
}

.mc-select-none {
  background-color: transparent;
  border: 0px;
  padding: 0 0 0 1rem;
  cursor: pointer;
}

.mc-select-all:hover,
.mc-select-none:hover {
  color:$brand-orange;
}

//Checkboxes

.checkbox-container {
  background-color: $white;
  height: 3.4rem;
  width: 100%;
  margin-bottom: 1px;
  padding: 0 1rem;
  display:flex;
  align-items: center;
  &:last-child{
  margin-bottom: 0px;
  }
}


.list-wrapper{
  background-color: #ededed;
  resize: vertical;
  border-radius: 3px;
  max-height: 24rem;
  overflow: auto;
  border: 1px solid $Vlight-gray;
}

.list-scroll{
  overflow-y:hidden;
}

/*Solo-checkboxes*/
.checkbox-content{
  overflow:hidden;
}
.checkbox-wrapper{
  margin-top: 0.3rem;
  margin-right: 2rem;
  display:inline-block;
}

/*Bigger size checkbox for non webkit browsers*/

input[type=checkbox]
{
  -webkit-appearance: none;
	background-color: transparent;
	border: 1px solid $dark-accent--medium;
	padding: 0.7rem;
	border-radius: 3px;
	display: inline-block;
	position: relative;
  margin-right: 0.5rem;
  -ms-transform: scale(1.3); /* IE */
  -moz-transform: scale(1.3); /* FF */
  -o-transform: scale(1.3); /* Opera */
}


input[type=checkbox]:active, input[type=checkbox]:checked:active {
	box-shadow: inset 0px 1px 0px $brand-orange;
}

input[type=checkbox]:checked {
	background-color: $brand-orange;
	border: 1px solid $brand-orange;
	box-shadow: 0 1px 2px rgba(0,0,0,0.05), inset 0px -15px 10px -12px rgba(0,0,0,0.05), inset 15px 10px -12px rgba(255,255,255,0.1);
	color: #99a1a7;
}

input[type=checkbox]:checked:after {
  font-family:'Workbench';
	content: '\e904';
	font-size: 0.8rem;
	position: absolute;
	top: 1.5px;
	left: 2.5px;
	color: $white;
}

// ADD REMOVE BUTTONS FOR PARAMETERS

.checkbox-wrapper.addremove {
  margin-right:0;
}

.addremove .checkbox {
  display: none;
}

.checkbox-wrapper label {
  margin-bottom: 0;
}

.addremove label {
  @extend .icon;
  background: transparent;
  width:1.5rem;
  height:1.5rem;
  font-size:1.5rem;
  display:block;
  color: $brand-text--dark;
  cursor: pointer;
  opacity: .7;
}

.addremove label:hover{
  opacity: 1;
}

.addremove .checkbox + label {
  @extend .icon-addc;
  position: relative;
  padding:0 0.5rem;
  left: 21rem;
  top:0.2rem;
}

.addremove .checkbox:checked + label {
  @extend .icon-addm;
  margin-right: 0.5rem;
}

.addremove .checkbox:checked + label, .addremove + .addremove label {
  padding:0 0.5rem;
  left: 19rem;
  top:0.2rem;
}

.addremove.last .checkbox:checked + label {
  padding:0 0.5rem;
  left: 21.2rem;
  top:0.2rem;
}

/* This is here until we create actual grouped parameters. When the
next group down has its 'active' checkbox checked, we insert an element
before the previous checkbox, then hide both that checkbox and its
sibling. This is a terrible hack and also the most lightweight way
to do this until we make larger architectural changes. */
.cheat, .cheat + .addremove {
  display:none;
}

.hide-with-sibling {
  display:none;
}

.show-sibling + .hide-with-sibling {
  display: block;
}

// Application links

%action-link {
  cursor: pointer;
  color: $brand-workspace!important;
	&:hover {
		color: #2D9DAA!important;
		text-decoration: none;
	}
}
.action-link {
	@extend %action-link;
}

.system-link {
	@extend %action-link;
  color: $brand-orange!important;
	&:hover {
		color: $dark-orange!important;
		text-decoration: none;
	}
}
