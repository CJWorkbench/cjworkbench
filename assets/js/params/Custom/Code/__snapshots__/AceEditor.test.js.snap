// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AceEditor matches snapshot 1`] = `
<Fragment>
  <div
    className="help"
  >
    Define a 
    <kbd>
      process(table)
    </kbd>
     function that accepts a 
    <kbd>
      pd.DataFrame
    </kbd>
     and returns a 
    <kbd>
      pd.DataFrame
    </kbd>
    . You may use the 
    <a
      href="https://docs.python.org/3/library/math.html"
      rel="noopener noreferrer"
      target="_blank"
    >
      <kbd>
        math
      </kbd>
    </a>
    ,
     
    <kbd>
      pd
    </kbd>
     
    (
    <a
      href="https://pandas.pydata.org/pandas-docs/stable/api.html#dataframe"
      rel="noopener noreferrer"
      target="_blank"
    >
      Pandas
    </a>
    )
     
    and 
    <kbd>
      np
    </kbd>
     
    (
    <a
      href="https://docs.scipy.org/doc/numpy/reference/routines.html"
      rel="noopener noreferrer"
      target="_blank"
    >
      Numpy
    </a>
    )
     
    modules.
  </div>
  <div
    className="ace-aspect-ratio-container"
  >
    <div
      className="ace-wrapper"
    >
      <ReactAce
        annotations={Array []}
        cursorStart={1}
        editorProps={
          Object {
            "$blockScrolling": Infinity,
          }
        }
        enableBasicAutocompletion={false}
        enableLiveAutocompletion={false}
        enableSnippets={false}
        focus={false}
        fontSize={12}
        height="100%"
        highlightActiveLine={true}
        maxLines={null}
        minLines={null}
        mode="python"
        name="code-editor"
        navigateToFileEnd={true}
        onChange={[MockFunction]}
        onLoad={null}
        onPaste={null}
        onScroll={null}
        placeholder={null}
        readOnly={false}
        scrollMargin={
          Array [
            0,
            0,
            0,
            0,
          ]
        }
        setOptions={Object {}}
        showGutter={false}
        showPrintMargin={true}
        style={Object {}}
        tabSize={4}
        theme="xcode"
        value="def process(table)
    return table"
        width="100%"
        wrapEnabled={true}
      />
    </div>
  </div>
</Fragment>
`;
