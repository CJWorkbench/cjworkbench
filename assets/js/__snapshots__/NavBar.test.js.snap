// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NavBar WorkflowListNavBar Renders correctly 1`] = `
<div>
  <nav
    className="navbar"
  >
    <div
      className="d-flex align-items-center"
    >
      <img
        className="logo"
        src="/static/images/logo.svg"
      />
      <div
        className="logo-1"
      >
        Workbench
      </div>
    </div>
    <WfHamburgerMenu />
  </nav>
</div>
`;

exports[`NavBar WorkflowNavBar In Private mode, Share button invites user to set to Public 1`] = `
<WorkflowNavBar
  api={
    Object {
      "duplicateWorkflow": [MockFunction] {
        "calls": Array [
          Array [
            undefined,
          ],
        ],
      },
      "setWorkflowPublic": [MockFunction],
    }
  }
  isReadOnly={false}
  loggedInUser={
    Object {
      "id": 99,
    }
  }
  workflow={
    Object {
      "id": 808,
      "name": "Original Version",
      "owner_name": "Fred Frederson",
      "public": false,
    }
  }
>
  <div>
    <div
      className="d-flex justify-content-center"
    />
    <nav
      className="navbar"
    >
      <div
        className="title-metadata-stack"
      >
        <EditableWorkflowName
          api={
            Object {
              "duplicateWorkflow": [MockFunction] {
                "calls": Array [
                  Array [
                    undefined,
                  ],
                ],
              },
              "setWorkflowPublic": [MockFunction],
            }
          }
          value="Original Version"
          wfId={808}
        >
          <div
            className="editable-title--container"
            onClick={[Function]}
          >
            <input
              className="editable-title--field"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyPress={[Function]}
              type="text"
              value="Original Version"
            />
          </div>
        </EditableWorkflowName>
        <WorkflowMetadata
          api={
            Object {
              "duplicateWorkflow": [MockFunction] {
                "calls": Array [
                  Array [
                    undefined,
                  ],
                ],
              },
              "setWorkflowPublic": [MockFunction],
            }
          }
          isPublic={false}
          workflow={
            Object {
              "id": 808,
              "name": "Original Version",
              "owner_name": "Fred Frederson",
              "public": false,
            }
          }
        >
          <div>
            <ul
              className="WF-meta"
            >
              <div
                className="WF-meta--item"
              >
                <li
                  className="content-3 t-m-gray"
                >
                  by 
                  Fred Frederson
                </li>
                <span
                  className="content-3 metadataSeparator t-m-gray"
                >
                  -
                </span>
              </div>
              <li
                className="WF-meta--item content-3 t-m-gray"
              >
                Updated 
                now
              </li>
              <li
                className="WF-meta--item content-3 t-m-gray"
              >
                <div
                  className="WF-meta--item test-button"
                  onClick={[Function]}
                >
                  <div
                    className="content-3 metadataSeparator t-m-gray"
                  >
                    -
                  </div>
                  <div
                    className="t-f-blue"
                  >
                    private
                  </div>
                </div>
              </li>
            </ul>
          </div>
        </WorkflowMetadata>
      </div>
      <div
        className="d-flex flex-row align-items-center"
      >
        <div
          className="button-white--fill action-button test-duplicate-button"
          onClick={[Function]}
        >
          Duplicate
        </div>
        <div
          className="button-white action-button test-share-button"
          onClick={[Function]}
        >
          Share
        </div>
        <WfHamburgerMenu
          api={
            Object {
              "duplicateWorkflow": [MockFunction] {
                "calls": Array [
                  Array [
                    undefined,
                  ],
                ],
              },
              "setWorkflowPublic": [MockFunction],
            }
          }
          isReadOnly={false}
          user={
            Object {
              "id": 99,
            }
          }
          wfId={808}
        >
          <UncontrolledDropdown>
            <Dropdown
              isOpen={false}
              tag="div"
              toggle={[Function]}
            >
              <div
                className="dropdown"
              >
                <DropdownToggle
                  aria-haspopup={true}
                  className="context-button"
                  color="secondary"
                  data-toggle="dropdown"
                >
                  <Button
                    aria-expanded={false}
                    aria-haspopup="true"
                    className="context-button"
                    color="secondary"
                    data-toggle="dropdown"
                    onClick={[Function]}
                    tag="button"
                  >
                    <button
                      aria-expanded={false}
                      aria-haspopup="true"
                      className="context-button btn btn-secondary"
                      data-toggle="dropdown"
                      onClick={[Function]}
                      type="button"
                    >
                      <div
                        className="context-button--icon icon-more"
                      />
                    </button>
                  </Button>
                </DropdownToggle>
                <DropdownMenu
                  right={true}
                  tag="div"
                >
                  <div
                    aria-hidden={true}
                    className="dropdown-menu dropdown-menu-right"
                    role="menu"
                    tabIndex="-1"
                  >
                    <DropdownItem
                      className="dropdown-menu--item"
                      href="/workflows"
                      tag="a"
                      toggle={true}
                    >
                      <a
                        className="dropdown-menu--item dropdown-item"
                        href="/workflows"
                        onClick={[Function]}
                        tabIndex="0"
                      >
                        <span
                          className="content-3 ml-3"
                        >
                          My Workflows
                        </span>
                      </a>
                    </DropdownItem>
                    <div>
                      <DropdownItem
                        divider={true}
                        tag="button"
                        toggle={true}
                      >
                        <div
                          className="dropdown-divider"
                          onClick={[Function]}
                          tabIndex="-1"
                        />
                      </DropdownItem>
                      <DropdownItem
                        className="dropdown-menu--item"
                        onClick={[Function]}
                        tag="button"
                        toggle={true}
                      >
                        <button
                          className="dropdown-menu--item dropdown-item"
                          onClick={[Function]}
                          tabIndex="0"
                          type="button"
                        >
                          <span
                            className="content-3 ml-3"
                          >
                            Undo
                          </span>
                        </button>
                      </DropdownItem>
                      <DropdownItem
                        className="dropdown-menu--item"
                        onClick={[Function]}
                        tag="button"
                        toggle={true}
                      >
                        <button
                          className="dropdown-menu--item dropdown-item"
                          onClick={[Function]}
                          tabIndex="0"
                          type="button"
                        >
                          <span
                            className="content-3 ml-3"
                          >
                            Redo
                          </span>
                        </button>
                      </DropdownItem>
                      <DropdownItem
                        divider={true}
                        tag="button"
                        toggle={true}
                      >
                        <div
                          className="dropdown-divider"
                          onClick={[Function]}
                          tabIndex="-1"
                        />
                      </DropdownItem>
                    </div>
                    <div>
                      <DropdownItem
                        className="dropdown-menu--item"
                        href="/account/logout"
                        tag="a"
                        toggle={true}
                      >
                        <a
                          className="dropdown-menu--item dropdown-item"
                          href="/account/logout"
                          onClick={[Function]}
                          tabIndex="0"
                        >
                          <span
                            className="content-3 ml-3"
                          >
                            Logout
                          </span>
                        </a>
                      </DropdownItem>
                    </div>
                  </div>
                </DropdownMenu>
              </div>
            </Dropdown>
          </UncontrolledDropdown>
        </WfHamburgerMenu>
      </div>
    </nav>
  </div>
</WorkflowNavBar>
`;

exports[`NavBar WorkflowNavBar In Private mode, Share button invites user to set to Public 2`] = `
<div
  className="modal-dialog test-setpublic-modal"
  role="document"
>
  <div
    className="modal-content"
  >
    <ModalHeader
      className="dialog-header modal-header d-flex align-items-center"
      tag="h4"
      toggle={[Function]}
      wrapTag="div"
    >
      <div
        className="dialog-header modal-header d-flex align-items-center modal-header"
      >
        <h4
          className="modal-title"
        >
          <div
            className="t-d-gray title-4"
          >
            SHARE THIS WORKFLOW
          </div>
        </h4>
        <button
          aria-label="Close"
          className="close"
          onClick={[Function]}
          type="button"
        >
          <span
            aria-hidden="true"
          >
            ×
          </span>
        </button>
      </div>
    </ModalHeader>
    <ModalBody
      className="dialog-body"
      tag="div"
    >
      <div
        className="dialog-body modal-body"
      >
        <div
          className="title-3 mb-3"
        >
          This workflow is currently private
        </div>
        <div
          className="info-2 t-d-gray"
        >
          Set this workflow to Public in order to share it? Anyone with the URL will be able to access and duplicate it.
        </div>
      </div>
    </ModalBody>
    <div
      className="modal-footer dialog-footer"
    >
      <div
        className="button-gray action-button mr-4"
        onClick={[Function]}
      >
        Cancel
      </div>
      <div
        className="button-blue action-button test-public-button"
        onClick={[Function]}
      >
        Set Public
      </div>
    </div>
  </div>
</div>
`;

exports[`NavBar WorkflowNavBar In Private mode, Share button invites user to set to Public 3`] = `
<div
  className="modal-dialog test-share-modal"
  role="document"
>
  <div
    className="modal-content"
  >
    <ModalHeader
      className="dialog-header modal-header d-flex align-items-center"
      tag="h4"
      toggle={[Function]}
      wrapTag="div"
    >
      <div
        className="dialog-header modal-header d-flex align-items-center modal-header"
      >
        <h4
          className="modal-title"
        >
          <div
            className="t-d-gray title-4"
          >
            SHARE THIS WORKFLOW
          </div>
        </h4>
        <button
          aria-label="Close"
          className="close"
          onClick={[Function]}
          type="button"
        >
          <span
            aria-hidden="true"
          >
            ×
          </span>
        </button>
      </div>
    </ModalHeader>
    <ModalBody
      className="dialog-body"
      tag="div"
    >
      <div
        className="dialog-body modal-body"
      >
        <FormGroup
          tag="div"
        >
          <div
            className="form-group"
          >
            <div
              className="d-flex align-items-center justify-content-between flex-row"
            >
              <Label
                className="label-margin info-1"
                tag="label"
              >
                <label
                  className="label-margin info-1  form-control-label"
                >
                  Public link
                </label>
              </Label>
              <CopyToClipboard
                className="info-2 t-f-blue"
                onCopy={[Function]}
                text="/workflows/808"
              >
                <div
                  className="info-2 t-f-blue"
                  onClick={[Function]}
                >
                  Copy to clipboard
                </div>
              </CopyToClipboard>
            </div>
            <div
              className="mb-3"
            >
              <Input
                className="url-link t-d-gray content-2 test-link-field"
                placeholder="/workflows/808"
                readOnly={true}
                tag="p"
                type="url"
              >
                <input
                  className="url-link t-d-gray content-2 test-link-field form-control"
                  placeholder="/workflows/808"
                  readOnly={true}
                  type="url"
                />
              </Input>
            </div>
          </div>
        </FormGroup>
        <div
          className="d-flex justify-content-start mt-4"
        >
          <div
            className="twitter-button-container"
          >
            <Share
              onLoad={[Function]}
              options={
                Object {
                  "text": "Check out this chart I made using @cjworkbench:",
                }
              }
              url="/workflows/808"
            >
              <AbstractWidget
                ready={[Function]}
              >
                <div />
              </AbstractWidget>
            </Share>
          </div>
          <a
            className="button-icon facebook-share ml-4"
            href="https://www.facebook.com/sharer.php?u=/workflows/808"
            onClick={[Function]}
            target="_blank"
          >
            <div
              className="icon-facebook"
            />
            Share
          </a>
        </div>
      </div>
    </ModalBody>
  </div>
</div>
`;

exports[`NavBar WorkflowNavBar In Public mode, Share button opens modal with links 1`] = `
<WorkflowNavBar
  api={
    Object {
      "duplicateWorkflow": [MockFunction] {
        "calls": Array [
          Array [
            undefined,
          ],
        ],
      },
      "setWorkflowPublic": [MockFunction] {
        "calls": Array [
          Array [
            808,
            true,
          ],
        ],
      },
    }
  }
  isReadOnly={false}
  loggedInUser={
    Object {
      "id": 47,
    }
  }
  workflow={
    Object {
      "id": 808,
      "name": "Original Version",
      "owner_name": "Fred Frederson",
      "public": true,
    }
  }
>
  <div>
    <div
      className="d-flex justify-content-center"
    />
    <nav
      className="navbar"
    >
      <div
        className="title-metadata-stack"
      >
        <EditableWorkflowName
          api={
            Object {
              "duplicateWorkflow": [MockFunction] {
                "calls": Array [
                  Array [
                    undefined,
                  ],
                ],
              },
              "setWorkflowPublic": [MockFunction] {
                "calls": Array [
                  Array [
                    808,
                    true,
                  ],
                ],
              },
            }
          }
          value="Original Version"
          wfId={808}
        >
          <div
            className="editable-title--container"
            onClick={[Function]}
          >
            <input
              className="editable-title--field"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyPress={[Function]}
              type="text"
              value="Original Version"
            />
          </div>
        </EditableWorkflowName>
        <WorkflowMetadata
          api={
            Object {
              "duplicateWorkflow": [MockFunction] {
                "calls": Array [
                  Array [
                    undefined,
                  ],
                ],
              },
              "setWorkflowPublic": [MockFunction] {
                "calls": Array [
                  Array [
                    808,
                    true,
                  ],
                ],
              },
            }
          }
          isPublic={true}
          workflow={
            Object {
              "id": 808,
              "name": "Original Version",
              "owner_name": "Fred Frederson",
              "public": true,
            }
          }
        >
          <div>
            <ul
              className="WF-meta"
            >
              <div
                className="WF-meta--item"
              >
                <li
                  className="content-3 t-m-gray"
                >
                  by 
                  Fred Frederson
                </li>
                <span
                  className="content-3 metadataSeparator t-m-gray"
                >
                  -
                </span>
              </div>
              <li
                className="WF-meta--item content-3 t-m-gray"
              >
                Updated 
                now
              </li>
              <li
                className="WF-meta--item content-3 t-m-gray"
              >
                <div
                  className="WF-meta--item test-button"
                  onClick={[Function]}
                >
                  <div
                    className="content-3 metadataSeparator t-m-gray"
                  >
                    -
                  </div>
                  <div
                    className="t-f-blue"
                  >
                    public
                  </div>
                </div>
              </li>
            </ul>
          </div>
        </WorkflowMetadata>
      </div>
      <div
        className="d-flex flex-row align-items-center"
      >
        <div
          className="button-white--fill action-button test-duplicate-button"
          onClick={[Function]}
        >
          Duplicate
        </div>
        <div
          className="button-white action-button test-share-button"
          onClick={[Function]}
        >
          Share
        </div>
        <WfHamburgerMenu
          api={
            Object {
              "duplicateWorkflow": [MockFunction] {
                "calls": Array [
                  Array [
                    undefined,
                  ],
                ],
              },
              "setWorkflowPublic": [MockFunction] {
                "calls": Array [
                  Array [
                    808,
                    true,
                  ],
                ],
              },
            }
          }
          isReadOnly={false}
          user={
            Object {
              "id": 47,
            }
          }
          wfId={808}
        >
          <UncontrolledDropdown>
            <Dropdown
              isOpen={false}
              tag="div"
              toggle={[Function]}
            >
              <div
                className="dropdown"
              >
                <DropdownToggle
                  aria-haspopup={true}
                  className="context-button"
                  color="secondary"
                  data-toggle="dropdown"
                >
                  <Button
                    aria-expanded={false}
                    aria-haspopup="true"
                    className="context-button"
                    color="secondary"
                    data-toggle="dropdown"
                    onClick={[Function]}
                    tag="button"
                  >
                    <button
                      aria-expanded={false}
                      aria-haspopup="true"
                      className="context-button btn btn-secondary"
                      data-toggle="dropdown"
                      onClick={[Function]}
                      type="button"
                    >
                      <div
                        className="context-button--icon icon-more"
                      />
                    </button>
                  </Button>
                </DropdownToggle>
                <DropdownMenu
                  right={true}
                  tag="div"
                >
                  <div
                    aria-hidden={true}
                    className="dropdown-menu dropdown-menu-right"
                    role="menu"
                    tabIndex="-1"
                  >
                    <DropdownItem
                      className="dropdown-menu--item"
                      href="/workflows"
                      tag="a"
                      toggle={true}
                    >
                      <a
                        className="dropdown-menu--item dropdown-item"
                        href="/workflows"
                        onClick={[Function]}
                        tabIndex="0"
                      >
                        <span
                          className="content-3 ml-3"
                        >
                          My Workflows
                        </span>
                      </a>
                    </DropdownItem>
                    <div>
                      <DropdownItem
                        divider={true}
                        tag="button"
                        toggle={true}
                      >
                        <div
                          className="dropdown-divider"
                          onClick={[Function]}
                          tabIndex="-1"
                        />
                      </DropdownItem>
                      <DropdownItem
                        className="dropdown-menu--item"
                        onClick={[Function]}
                        tag="button"
                        toggle={true}
                      >
                        <button
                          className="dropdown-menu--item dropdown-item"
                          onClick={[Function]}
                          tabIndex="0"
                          type="button"
                        >
                          <span
                            className="content-3 ml-3"
                          >
                            Undo
                          </span>
                        </button>
                      </DropdownItem>
                      <DropdownItem
                        className="dropdown-menu--item"
                        onClick={[Function]}
                        tag="button"
                        toggle={true}
                      >
                        <button
                          className="dropdown-menu--item dropdown-item"
                          onClick={[Function]}
                          tabIndex="0"
                          type="button"
                        >
                          <span
                            className="content-3 ml-3"
                          >
                            Redo
                          </span>
                        </button>
                      </DropdownItem>
                      <DropdownItem
                        divider={true}
                        tag="button"
                        toggle={true}
                      >
                        <div
                          className="dropdown-divider"
                          onClick={[Function]}
                          tabIndex="-1"
                        />
                      </DropdownItem>
                    </div>
                    <div>
                      <DropdownItem
                        className="dropdown-menu--item"
                        href="/account/logout"
                        tag="a"
                        toggle={true}
                      >
                        <a
                          className="dropdown-menu--item dropdown-item"
                          href="/account/logout"
                          onClick={[Function]}
                          tabIndex="0"
                        >
                          <span
                            className="content-3 ml-3"
                          >
                            Logout
                          </span>
                        </a>
                      </DropdownItem>
                    </div>
                  </div>
                </DropdownMenu>
              </div>
            </Dropdown>
          </UncontrolledDropdown>
        </WfHamburgerMenu>
      </div>
    </nav>
  </div>
</WorkflowNavBar>
`;

exports[`NavBar WorkflowNavBar In Public mode, Share button opens modal with links 2`] = `
<div
  className="modal-dialog test-share-modal"
  role="document"
>
  <div
    className="modal-content"
  >
    <ModalHeader
      className="dialog-header modal-header d-flex align-items-center"
      tag="h4"
      toggle={[Function]}
      wrapTag="div"
    >
      <div
        className="dialog-header modal-header d-flex align-items-center modal-header"
      >
        <h4
          className="modal-title"
        >
          <div
            className="t-d-gray title-4"
          >
            SHARE THIS WORKFLOW
          </div>
        </h4>
        <button
          aria-label="Close"
          className="close"
          onClick={[Function]}
          type="button"
        >
          <span
            aria-hidden="true"
          >
            ×
          </span>
        </button>
      </div>
    </ModalHeader>
    <ModalBody
      className="dialog-body"
      tag="div"
    >
      <div
        className="dialog-body modal-body"
      >
        <FormGroup
          tag="div"
        >
          <div
            className="form-group"
          >
            <div
              className="d-flex align-items-center justify-content-between flex-row"
            >
              <Label
                className="label-margin info-1"
                tag="label"
              >
                <label
                  className="label-margin info-1  form-control-label"
                >
                  Public link
                </label>
              </Label>
              <CopyToClipboard
                className="info-2 t-f-blue"
                onCopy={[Function]}
                text="/workflows/808"
              >
                <div
                  className="info-2 t-f-blue"
                  onClick={[Function]}
                >
                  Copy to clipboard
                </div>
              </CopyToClipboard>
            </div>
            <div
              className="mb-3"
            >
              <Input
                className="url-link t-d-gray content-2 test-link-field"
                placeholder="/workflows/808"
                readOnly={true}
                tag="p"
                type="url"
              >
                <input
                  className="url-link t-d-gray content-2 test-link-field form-control"
                  placeholder="/workflows/808"
                  readOnly={true}
                  type="url"
                />
              </Input>
            </div>
          </div>
        </FormGroup>
        <div
          className="d-flex justify-content-start mt-4"
        >
          <div
            className="twitter-button-container"
          >
            <Share
              onLoad={[Function]}
              options={
                Object {
                  "text": "Check out this chart I made using @cjworkbench:",
                }
              }
              url="/workflows/808"
            >
              <AbstractWidget
                ready={[Function]}
              >
                <div />
              </AbstractWidget>
            </Share>
          </div>
          <a
            className="button-icon facebook-share ml-4"
            href="https://www.facebook.com/sharer.php?u=/workflows/808"
            onClick={[Function]}
            target="_blank"
          >
            <div
              className="icon-facebook"
            />
            Share
          </a>
        </div>
      </div>
    </ModalBody>
  </div>
</div>
`;

exports[`NavBar WorkflowNavBar With user NOT logged in, Duplicate button sends user to sign-in page 1`] = `
<WorkflowNavBar
  api={
    Object {
      "duplicateWorkflow": [MockFunction] {
        "calls": Array [
          Array [
            undefined,
          ],
        ],
      },
      "setWorkflowPublic": [MockFunction],
    }
  }
  isReadOnly={false}
  workflow={
    Object {
      "id": 303,
      "name": "Original Version",
      "owner_name": "Not LogggedIn",
      "public": true,
    }
  }
>
  <div>
    <div
      className="d-flex justify-content-center"
    />
    <nav
      className="navbar"
    >
      <div
        className="title-metadata-stack"
      >
        <EditableWorkflowName
          api={
            Object {
              "duplicateWorkflow": [MockFunction] {
                "calls": Array [
                  Array [
                    undefined,
                  ],
                ],
              },
              "setWorkflowPublic": [MockFunction],
            }
          }
          value="Original Version"
          wfId={303}
        >
          <div
            className="editable-title--container"
            onClick={[Function]}
          >
            <input
              className="editable-title--field"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyPress={[Function]}
              type="text"
              value="Original Version"
            />
          </div>
        </EditableWorkflowName>
        <WorkflowMetadata
          api={
            Object {
              "duplicateWorkflow": [MockFunction] {
                "calls": Array [
                  Array [
                    undefined,
                  ],
                ],
              },
              "setWorkflowPublic": [MockFunction],
            }
          }
          isPublic={true}
          workflow={
            Object {
              "id": 303,
              "name": "Original Version",
              "owner_name": "Not LogggedIn",
              "public": true,
            }
          }
        >
          <div>
            <ul
              className="WF-meta"
            >
              <div
                className="WF-meta--item"
              >
                <li
                  className="content-3 t-m-gray"
                >
                  by 
                  Not LogggedIn
                </li>
                <span
                  className="content-3 metadataSeparator t-m-gray"
                >
                  -
                </span>
              </div>
              <li
                className="WF-meta--item content-3 t-m-gray"
              >
                Updated 
                now
              </li>
              <li
                className="WF-meta--item content-3 t-m-gray"
              >
                <div
                  className="WF-meta--item test-button"
                  onClick={[Function]}
                >
                  <div
                    className="content-3 metadataSeparator t-m-gray"
                  >
                    -
                  </div>
                  <div
                    className="t-f-blue"
                  >
                    public
                  </div>
                </div>
              </li>
            </ul>
          </div>
        </WorkflowMetadata>
      </div>
      <div
        className="d-flex flex-row align-items-center"
      >
        <div
          className="button-white--fill action-button test-duplicate-button"
          onClick={[Function]}
        >
          Duplicate
        </div>
        <div
          className="button-white action-button test-share-button"
          onClick={[Function]}
        >
          Share
        </div>
        <a
          className="nav--link t-white content-2"
          href="http://app.cjworkbench.org/account/login"
        >
          Sign in
        </a>
      </div>
    </nav>
  </div>
</WorkflowNavBar>
`;

exports[`NavBar WorkflowNavBar With user logged in, Duplicate button sends user to new copy 1`] = `
<WorkflowNavBar
  api={
    Object {
      "duplicateWorkflow": [MockFunction],
      "setWorkflowPublic": [MockFunction],
    }
  }
  isReadOnly={false}
  loggedInUser={
    Object {
      "id": 8,
    }
  }
  workflow={
    Object {
      "name": "Original Version",
      "owner_name": "John Johnson",
      "public": true,
    }
  }
>
  <div>
    <div
      className="d-flex justify-content-center"
    />
    <nav
      className="navbar"
    >
      <div
        className="title-metadata-stack"
      >
        <EditableWorkflowName
          api={
            Object {
              "duplicateWorkflow": [MockFunction],
              "setWorkflowPublic": [MockFunction],
            }
          }
          value="Original Version"
        >
          <div
            className="editable-title--container"
            onClick={[Function]}
          >
            <input
              className="editable-title--field"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyPress={[Function]}
              type="text"
              value="Original Version"
            />
          </div>
        </EditableWorkflowName>
        <WorkflowMetadata
          api={
            Object {
              "duplicateWorkflow": [MockFunction],
              "setWorkflowPublic": [MockFunction],
            }
          }
          isPublic={true}
          workflow={
            Object {
              "name": "Original Version",
              "owner_name": "John Johnson",
              "public": true,
            }
          }
        >
          <div>
            <ul
              className="WF-meta"
            >
              <div
                className="WF-meta--item"
              >
                <li
                  className="content-3 t-m-gray"
                >
                  by 
                  John Johnson
                </li>
                <span
                  className="content-3 metadataSeparator t-m-gray"
                >
                  -
                </span>
              </div>
              <li
                className="WF-meta--item content-3 t-m-gray"
              >
                Updated 
                now
              </li>
              <li
                className="WF-meta--item content-3 t-m-gray"
              >
                <div
                  className="WF-meta--item test-button"
                  onClick={[Function]}
                >
                  <div
                    className="content-3 metadataSeparator t-m-gray"
                  >
                    -
                  </div>
                  <div
                    className="t-f-blue"
                  >
                    public
                  </div>
                </div>
              </li>
            </ul>
          </div>
        </WorkflowMetadata>
      </div>
      <div
        className="d-flex flex-row align-items-center"
      >
        <div
          className="button-white--fill action-button test-duplicate-button"
          onClick={[Function]}
        >
          Duplicate
        </div>
        <div
          className="button-white action-button test-share-button"
          onClick={[Function]}
        >
          Share
        </div>
        <WfHamburgerMenu
          api={
            Object {
              "duplicateWorkflow": [MockFunction],
              "setWorkflowPublic": [MockFunction],
            }
          }
          isReadOnly={false}
          user={
            Object {
              "id": 8,
            }
          }
        >
          <UncontrolledDropdown>
            <Dropdown
              isOpen={false}
              tag="div"
              toggle={[Function]}
            >
              <div
                className="dropdown"
              >
                <DropdownToggle
                  aria-haspopup={true}
                  className="context-button"
                  color="secondary"
                  data-toggle="dropdown"
                >
                  <Button
                    aria-expanded={false}
                    aria-haspopup="true"
                    className="context-button"
                    color="secondary"
                    data-toggle="dropdown"
                    onClick={[Function]}
                    tag="button"
                  >
                    <button
                      aria-expanded={false}
                      aria-haspopup="true"
                      className="context-button btn btn-secondary"
                      data-toggle="dropdown"
                      onClick={[Function]}
                      type="button"
                    >
                      <div
                        className="context-button--icon icon-more"
                      />
                    </button>
                  </Button>
                </DropdownToggle>
                <DropdownMenu
                  right={true}
                  tag="div"
                >
                  <div
                    aria-hidden={true}
                    className="dropdown-menu dropdown-menu-right"
                    role="menu"
                    tabIndex="-1"
                  >
                    <div>
                      <DropdownItem
                        className="dropdown-menu--item"
                        href="/account/logout"
                        tag="a"
                        toggle={true}
                      >
                        <a
                          className="dropdown-menu--item dropdown-item"
                          href="/account/logout"
                          onClick={[Function]}
                          tabIndex="0"
                        >
                          <span
                            className="content-3 ml-3"
                          >
                            Logout
                          </span>
                        </a>
                      </DropdownItem>
                    </div>
                  </div>
                </DropdownMenu>
              </div>
            </Dropdown>
          </UncontrolledDropdown>
        </WfHamburgerMenu>
      </div>
    </nav>
  </div>
</WorkflowNavBar>
`;
