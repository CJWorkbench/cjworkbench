// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WorkflowNavBar In Private mode, Share button invites user to set to Public 1`] = `
<WorkflowNavBar
  api={
    Object {
      "duplicateWorkflow": [MockFunction],
      "setWorkflowPublic": [MockFunction],
    }
  }
  isReadOnly={false}
  loggedInUser={
    Object {
      "id": 99,
    }
  }
  workflow={
    Object {
      "id": 808,
      "name": "Original Version",
      "owner_name": "Fred Frederson",
      "public": false,
    }
  }
>
  <nav
    className="navbar"
  >
    <a
      className="logo-navbar"
      href="/workflows/"
    >
      <img
        className="image"
        src="/static/images/logo.svg"
      />
    </a>
    <div
      className="title-metadata-stack"
    >
      <EditableWorkflowName
        api={
          Object {
            "duplicateWorkflow": [MockFunction],
            "setWorkflowPublic": [MockFunction],
          }
        }
        value="Original Version"
        workflowId={808}
      >
        <div
          className="editable-title--container"
          onClick={[Function]}
        >
          <input
            className="editable-title--field"
            name="name"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyPress={[Function]}
            type="text"
            value="Original Version"
          />
        </div>
      </EditableWorkflowName>
      <WorkflowMetadata
        api={
          Object {
            "duplicateWorkflow": [MockFunction],
            "setWorkflowPublic": [MockFunction],
          }
        }
        isPublic={false}
        workflow={
          Object {
            "id": 808,
            "name": "Original Version",
            "owner_name": "Fred Frederson",
            "public": false,
          }
        }
      >
        <ul
          className="metadata-container"
        >
          <li
            className="attribution"
          >
            <span
              className="metadata"
            >
              by 
              Fred Frederson
            </span>
            <span
              className="separator"
            >
              -
            </span>
          </li>
          <li>
            Updated 
            now
          </li>
          <li>
            <div
              className="metadata test-button"
              onClick={[Function]}
            >
              <span
                className="separator"
              >
                -
              </span>
              <span
                className="publicPrivate"
              >
                private
              </span>
            </div>
          </li>
        </ul>
      </WorkflowMetadata>
    </div>
    <div
      className="d-flex flex-row align-items-center"
    >
      <button
        className="button-white--fill action-button test-duplicate-button"
        onClick={[Function]}
      >
        Duplicate
      </button>
      <button
        className="button-white action-button test-share-button"
        onClick={[Function]}
      >
        Share
      </button>
      <WfHamburgerMenu
        api={
          Object {
            "duplicateWorkflow": [MockFunction],
            "setWorkflowPublic": [MockFunction],
          }
        }
        isReadOnly={false}
        user={
          Object {
            "id": 99,
          }
        }
        workflowId={808}
      >
        <UncontrolledDropdown>
          <Dropdown
            active={false}
            addonType={false}
            direction="down"
            inNavbar={false}
            isOpen={false}
            nav={false}
            setActiveFromChild={false}
            toggle={[Function]}
          >
            <Manager
              className="dropdown"
              onKeyDown={[Function]}
              tag="div"
            >
              <div
                className="dropdown"
                onKeyDown={[Function]}
              >
                <DropdownToggle
                  aria-haspopup={true}
                  className="context-button"
                  color="secondary"
                  title="menu"
                >
                  <Target
                    aria-expanded={false}
                    aria-haspopup={true}
                    className="context-button"
                    color="secondary"
                    component={[Function]}
                    onClick={[Function]}
                    title="menu"
                  >
                    <Button
                      aria-expanded={false}
                      aria-haspopup={true}
                      className="context-button"
                      color="secondary"
                      innerRef={[Function]}
                      onClick={[Function]}
                      tag="button"
                      title="menu"
                    >
                      <button
                        aria-expanded={false}
                        aria-haspopup={true}
                        className="context-button btn btn-secondary"
                        onClick={[Function]}
                        title="menu"
                        type="button"
                      >
                        <i
                          className="context-button--icon icon-more"
                        />
                      </button>
                    </Button>
                  </Target>
                </DropdownToggle>
                <DropdownMenu
                  flip={true}
                  right={true}
                  tag="div"
                >
                  <div
                    aria-hidden={true}
                    className="dropdown-menu dropdown-menu-right"
                    role="menu"
                    tabIndex="-1"
                  >
                    <DropdownItem
                      href="/workflows"
                      tag="button"
                      toggle={true}
                    >
                      <a
                        className="dropdown-item"
                        href="/workflows"
                        onClick={[Function]}
                        tabIndex="0"
                      >
                        <span>
                          My Workflows
                        </span>
                      </a>
                    </DropdownItem>
                    <DropdownItem
                      divider={true}
                      tag="button"
                      toggle={true}
                    >
                      <div
                        className="dropdown-divider"
                        onClick={[Function]}
                        tabIndex="-1"
                      />
                    </DropdownItem>
                    <DropdownItem
                      onClick={[Function]}
                      tag="button"
                      toggle={true}
                    >
                      <button
                        className="dropdown-item"
                        onClick={[Function]}
                        tabIndex="0"
                        type="button"
                      >
                        <span>
                          Undo
                        </span>
                      </button>
                    </DropdownItem>
                    <DropdownItem
                      onClick={[Function]}
                      tag="button"
                      toggle={true}
                    >
                      <button
                        className="dropdown-item"
                        onClick={[Function]}
                        tabIndex="0"
                        type="button"
                      >
                        <span>
                          Redo
                        </span>
                      </button>
                    </DropdownItem>
                    <DropdownItem
                      divider={true}
                      tag="button"
                      toggle={true}
                    >
                      <div
                        className="dropdown-divider"
                        onClick={[Function]}
                        tabIndex="-1"
                      />
                    </DropdownItem>
                    <DropdownItem
                      className="test-export-button"
                      onClick={[Function]}
                      tag="button"
                      toggle={true}
                    >
                      <button
                        className="test-export-button dropdown-item"
                        onClick={[Function]}
                        tabIndex="0"
                        type="button"
                      >
                        <span>
                          Import Module
                        </span>
                      </button>
                    </DropdownItem>
                    <DropdownItem
                      href="/account/logout"
                      tag="button"
                      toggle={true}
                    >
                      <a
                        className="dropdown-item"
                        href="/account/logout"
                        onClick={[Function]}
                        tabIndex="0"
                      >
                        <span>
                          Log Out
                        </span>
                      </a>
                    </DropdownItem>
                  </div>
                </DropdownMenu>
              </div>
            </Manager>
          </Dropdown>
        </UncontrolledDropdown>
      </WfHamburgerMenu>
    </div>
  </nav>
</WorkflowNavBar>
`;

exports[`WorkflowNavBar In Private mode, Share button invites user to set to Public 2`] = `
<div
  className="modal-dialog test-setpublic-modal"
  role="document"
>
  <div
    className="modal-content"
  >
    <ModalHeader
      className="dialog-header modal-header d-flex align-items-center"
      closeAriaLabel="Close"
      tag="h5"
      toggle={[Function]}
      wrapTag="div"
    >
      <div
        className="dialog-header modal-header d-flex align-items-center modal-header"
      >
        <h5
          className="modal-title"
        >
          <div
            className="modal-title"
          >
            SHARE THIS WORKFLOW
          </div>
        </h5>
        <button
          aria-label="Close"
          className="close"
          onClick={[Function]}
          type="button"
        >
          <span
            aria-hidden="true"
          >
            ×
          </span>
        </button>
      </div>
    </ModalHeader>
    <ModalBody
      tag="div"
    >
      <div
        className="modal-body"
      >
        <div
          className="title-3 mb-3"
        >
          This workflow is currently private
        </div>
        <div
          className="info-2 t-d-gray"
        >
          Set this workflow to Public in order to share it? Anyone with the URL will be able to access and duplicate it.
        </div>
      </div>
    </ModalBody>
    <div
      className="modal-footer "
    >
      <div
        className="button-gray action-button mr-4"
        onClick={[Function]}
      >
        Cancel
      </div>
      <div
        className="button-blue action-button test-public-button"
        onClick={[Function]}
      >
        Set Public
      </div>
    </div>
  </div>
</div>
`;

exports[`WorkflowNavBar In Private mode, Share button invites user to set to Public 3`] = `
<div
  className="modal-dialog test-share-modal"
  role="document"
>
  <div
    className="modal-content"
  >
    <ModalHeader
      className="dialog-header modal-header d-flex align-items-center"
      closeAriaLabel="Close"
      tag="h5"
      toggle={[Function]}
      wrapTag="div"
    >
      <div
        className="dialog-header modal-header d-flex align-items-center modal-header"
      >
        <h5
          className="modal-title"
        >
          <div
            className="modal-title"
          >
            SHARE THIS WORKFLOW
          </div>
        </h5>
        <button
          aria-label="Close"
          className="close"
          onClick={[Function]}
          type="button"
        >
          <span
            aria-hidden="true"
          >
            ×
          </span>
        </button>
      </div>
    </ModalHeader>
    <ModalBody
      tag="div"
    >
      <div
        className="modal-body"
      >
        <FormGroup
          tag="div"
        >
          <div
            className="form-group"
          >
            <div
              className="d-flex align-items-center justify-content-between flex-row"
            >
              <Label
                className="dl-file"
                tag="label"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <label
                  className="dl-file "
                >
                  PUBLIC URL
                </label>
              </Label>
              <CopyToClipboard
                className="clipboard"
                onCopy={[Function]}
                text="/workflows/808"
              >
                <div
                  className="clipboard"
                  onClick={[Function]}
                >
                  COPY TO CLIPBOARD
                </div>
              </CopyToClipboard>
            </div>
            <div
              className="mb-3"
            >
              <Input
                className="url-link test-link-field"
                readOnly={true}
                type="url"
                value="/workflows/808"
              >
                <input
                  className="url-link test-link-field form-control"
                  readOnly={true}
                  type="url"
                  value="/workflows/808"
                />
              </Input>
            </div>
          </div>
        </FormGroup>
        <div
          className="d-flex justify-content-start mt-4"
        >
          <div
            className="twitter-button-container"
          >
            <Share
              onLoad={[Function]}
              options={
                Object {
                  "text": "Check out this chart I made using @cjworkbench:",
                }
              }
              url="/workflows/808"
            >
              <AbstractWidget
                ready={[Function]}
              >
                <div />
              </AbstractWidget>
            </Share>
          </div>
          <a
            className="button-icon facebook-share ml-4"
            href="https://www.facebook.com/sharer.php?u=/workflows/808"
            onClick={[Function]}
            target="_blank"
          >
            <div
              className="icon-facebook"
            />
            Share
          </a>
        </div>
      </div>
    </ModalBody>
  </div>
</div>
`;

exports[`WorkflowNavBar In Public mode, Share button opens modal with links 1`] = `
<WorkflowNavBar
  api={
    Object {
      "duplicateWorkflow": [MockFunction],
      "setWorkflowPublic": [MockFunction],
    }
  }
  isReadOnly={false}
  loggedInUser={
    Object {
      "id": 47,
    }
  }
  workflow={
    Object {
      "id": 808,
      "name": "Original Version",
      "owner_name": "Fred Frederson",
      "public": true,
    }
  }
>
  <nav
    className="navbar"
  >
    <a
      className="logo-navbar"
      href="/workflows/"
    >
      <img
        className="image"
        src="/static/images/logo.svg"
      />
    </a>
    <div
      className="title-metadata-stack"
    >
      <EditableWorkflowName
        api={
          Object {
            "duplicateWorkflow": [MockFunction],
            "setWorkflowPublic": [MockFunction],
          }
        }
        value="Original Version"
        workflowId={808}
      >
        <div
          className="editable-title--container"
          onClick={[Function]}
        >
          <input
            className="editable-title--field"
            name="name"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyPress={[Function]}
            type="text"
            value="Original Version"
          />
        </div>
      </EditableWorkflowName>
      <WorkflowMetadata
        api={
          Object {
            "duplicateWorkflow": [MockFunction],
            "setWorkflowPublic": [MockFunction],
          }
        }
        isPublic={true}
        workflow={
          Object {
            "id": 808,
            "name": "Original Version",
            "owner_name": "Fred Frederson",
            "public": true,
          }
        }
      >
        <ul
          className="metadata-container"
        >
          <li
            className="attribution"
          >
            <span
              className="metadata"
            >
              by 
              Fred Frederson
            </span>
            <span
              className="separator"
            >
              -
            </span>
          </li>
          <li>
            Updated 
            now
          </li>
          <li>
            <div
              className="metadata test-button"
              onClick={[Function]}
            >
              <span
                className="separator"
              >
                -
              </span>
              <span
                className="publicPrivate"
              >
                public
              </span>
            </div>
          </li>
        </ul>
      </WorkflowMetadata>
    </div>
    <div
      className="d-flex flex-row align-items-center"
    >
      <button
        className="button-white--fill action-button test-duplicate-button"
        onClick={[Function]}
      >
        Duplicate
      </button>
      <button
        className="button-white action-button test-share-button"
        onClick={[Function]}
      >
        Share
      </button>
      <WfHamburgerMenu
        api={
          Object {
            "duplicateWorkflow": [MockFunction],
            "setWorkflowPublic": [MockFunction],
          }
        }
        isReadOnly={false}
        user={
          Object {
            "id": 47,
          }
        }
        workflowId={808}
      >
        <UncontrolledDropdown>
          <Dropdown
            active={false}
            addonType={false}
            direction="down"
            inNavbar={false}
            isOpen={false}
            nav={false}
            setActiveFromChild={false}
            toggle={[Function]}
          >
            <Manager
              className="dropdown"
              onKeyDown={[Function]}
              tag="div"
            >
              <div
                className="dropdown"
                onKeyDown={[Function]}
              >
                <DropdownToggle
                  aria-haspopup={true}
                  className="context-button"
                  color="secondary"
                  title="menu"
                >
                  <Target
                    aria-expanded={false}
                    aria-haspopup={true}
                    className="context-button"
                    color="secondary"
                    component={[Function]}
                    onClick={[Function]}
                    title="menu"
                  >
                    <Button
                      aria-expanded={false}
                      aria-haspopup={true}
                      className="context-button"
                      color="secondary"
                      innerRef={[Function]}
                      onClick={[Function]}
                      tag="button"
                      title="menu"
                    >
                      <button
                        aria-expanded={false}
                        aria-haspopup={true}
                        className="context-button btn btn-secondary"
                        onClick={[Function]}
                        title="menu"
                        type="button"
                      >
                        <i
                          className="context-button--icon icon-more"
                        />
                      </button>
                    </Button>
                  </Target>
                </DropdownToggle>
                <DropdownMenu
                  flip={true}
                  right={true}
                  tag="div"
                >
                  <div
                    aria-hidden={true}
                    className="dropdown-menu dropdown-menu-right"
                    role="menu"
                    tabIndex="-1"
                  >
                    <DropdownItem
                      href="/workflows"
                      tag="button"
                      toggle={true}
                    >
                      <a
                        className="dropdown-item"
                        href="/workflows"
                        onClick={[Function]}
                        tabIndex="0"
                      >
                        <span>
                          My Workflows
                        </span>
                      </a>
                    </DropdownItem>
                    <DropdownItem
                      divider={true}
                      tag="button"
                      toggle={true}
                    >
                      <div
                        className="dropdown-divider"
                        onClick={[Function]}
                        tabIndex="-1"
                      />
                    </DropdownItem>
                    <DropdownItem
                      onClick={[Function]}
                      tag="button"
                      toggle={true}
                    >
                      <button
                        className="dropdown-item"
                        onClick={[Function]}
                        tabIndex="0"
                        type="button"
                      >
                        <span>
                          Undo
                        </span>
                      </button>
                    </DropdownItem>
                    <DropdownItem
                      onClick={[Function]}
                      tag="button"
                      toggle={true}
                    >
                      <button
                        className="dropdown-item"
                        onClick={[Function]}
                        tabIndex="0"
                        type="button"
                      >
                        <span>
                          Redo
                        </span>
                      </button>
                    </DropdownItem>
                    <DropdownItem
                      divider={true}
                      tag="button"
                      toggle={true}
                    >
                      <div
                        className="dropdown-divider"
                        onClick={[Function]}
                        tabIndex="-1"
                      />
                    </DropdownItem>
                    <DropdownItem
                      className="test-export-button"
                      onClick={[Function]}
                      tag="button"
                      toggle={true}
                    >
                      <button
                        className="test-export-button dropdown-item"
                        onClick={[Function]}
                        tabIndex="0"
                        type="button"
                      >
                        <span>
                          Import Module
                        </span>
                      </button>
                    </DropdownItem>
                    <DropdownItem
                      href="/account/logout"
                      tag="button"
                      toggle={true}
                    >
                      <a
                        className="dropdown-item"
                        href="/account/logout"
                        onClick={[Function]}
                        tabIndex="0"
                      >
                        <span>
                          Log Out
                        </span>
                      </a>
                    </DropdownItem>
                  </div>
                </DropdownMenu>
              </div>
            </Manager>
          </Dropdown>
        </UncontrolledDropdown>
      </WfHamburgerMenu>
    </div>
  </nav>
</WorkflowNavBar>
`;

exports[`WorkflowNavBar In Public mode, Share button opens modal with links 2`] = `
<div
  className="modal-dialog test-share-modal"
  role="document"
>
  <div
    className="modal-content"
  >
    <ModalHeader
      className="dialog-header modal-header d-flex align-items-center"
      closeAriaLabel="Close"
      tag="h5"
      toggle={[Function]}
      wrapTag="div"
    >
      <div
        className="dialog-header modal-header d-flex align-items-center modal-header"
      >
        <h5
          className="modal-title"
        >
          <div
            className="modal-title"
          >
            SHARE THIS WORKFLOW
          </div>
        </h5>
        <button
          aria-label="Close"
          className="close"
          onClick={[Function]}
          type="button"
        >
          <span
            aria-hidden="true"
          >
            ×
          </span>
        </button>
      </div>
    </ModalHeader>
    <ModalBody
      tag="div"
    >
      <div
        className="modal-body"
      >
        <FormGroup
          tag="div"
        >
          <div
            className="form-group"
          >
            <div
              className="d-flex align-items-center justify-content-between flex-row"
            >
              <Label
                className="dl-file"
                tag="label"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <label
                  className="dl-file "
                >
                  PUBLIC URL
                </label>
              </Label>
              <CopyToClipboard
                className="clipboard"
                onCopy={[Function]}
                text="/workflows/808"
              >
                <div
                  className="clipboard"
                  onClick={[Function]}
                >
                  COPY TO CLIPBOARD
                </div>
              </CopyToClipboard>
            </div>
            <div
              className="mb-3"
            >
              <Input
                className="url-link test-link-field"
                readOnly={true}
                type="url"
                value="/workflows/808"
              >
                <input
                  className="url-link test-link-field form-control"
                  readOnly={true}
                  type="url"
                  value="/workflows/808"
                />
              </Input>
            </div>
          </div>
        </FormGroup>
        <div
          className="d-flex justify-content-start mt-4"
        >
          <div
            className="twitter-button-container"
          >
            <Share
              onLoad={[Function]}
              options={
                Object {
                  "text": "Check out this chart I made using @cjworkbench:",
                }
              }
              url="/workflows/808"
            >
              <AbstractWidget
                ready={[Function]}
              >
                <div />
              </AbstractWidget>
            </Share>
          </div>
          <a
            className="button-icon facebook-share ml-4"
            href="https://www.facebook.com/sharer.php?u=/workflows/808"
            onClick={[Function]}
            target="_blank"
          >
            <div
              className="icon-facebook"
            />
            Share
          </a>
        </div>
      </div>
    </ModalBody>
  </div>
</div>
`;

exports[`WorkflowNavBar With user NOT logged in, Duplicate button sends user to sign-in page 1`] = `
<WorkflowNavBar
  api={
    Object {
      "duplicateWorkflow": [MockFunction],
      "setWorkflowPublic": [MockFunction],
    }
  }
  isReadOnly={false}
  workflow={
    Object {
      "id": 303,
      "name": "Original Version",
      "owner_name": "Not LogggedIn",
      "public": true,
    }
  }
>
  <nav
    className="navbar"
  >
    <a
      className="logo-navbar"
      href="/workflows/"
    >
      <img
        className="image"
        src="/static/images/logo.svg"
      />
    </a>
    <div
      className="title-metadata-stack"
    >
      <EditableWorkflowName
        api={
          Object {
            "duplicateWorkflow": [MockFunction],
            "setWorkflowPublic": [MockFunction],
          }
        }
        value="Original Version"
        workflowId={303}
      >
        <div
          className="editable-title--container"
          onClick={[Function]}
        >
          <input
            className="editable-title--field"
            name="name"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyPress={[Function]}
            type="text"
            value="Original Version"
          />
        </div>
      </EditableWorkflowName>
      <WorkflowMetadata
        api={
          Object {
            "duplicateWorkflow": [MockFunction],
            "setWorkflowPublic": [MockFunction],
          }
        }
        isPublic={true}
        workflow={
          Object {
            "id": 303,
            "name": "Original Version",
            "owner_name": "Not LogggedIn",
            "public": true,
          }
        }
      >
        <ul
          className="metadata-container"
        >
          <li
            className="attribution"
          >
            <span
              className="metadata"
            >
              by 
              Not LogggedIn
            </span>
            <span
              className="separator"
            >
              -
            </span>
          </li>
          <li>
            Updated 
            now
          </li>
          <li>
            <div
              className="metadata test-button"
              onClick={[Function]}
            >
              <span
                className="separator"
              >
                -
              </span>
              <span
                className="publicPrivate"
              >
                public
              </span>
            </div>
          </li>
        </ul>
      </WorkflowMetadata>
    </div>
    <div
      className="d-flex flex-row align-items-center"
    >
      <button
        className="button-white--fill action-button test-duplicate-button"
        onClick={[Function]}
      >
        Duplicate
      </button>
      <button
        className="button-white action-button test-share-button"
        onClick={[Function]}
      >
        Share
      </button>
      <a
        className="nav--link"
        href="/account/login"
      >
        Sign in
      </a>
    </div>
  </nav>
</WorkflowNavBar>
`;

exports[`WorkflowNavBar With user logged in, Duplicate button sends user to new copy 1`] = `
<WorkflowNavBar
  api={
    Object {
      "duplicateWorkflow": [MockFunction],
      "setWorkflowPublic": [MockFunction],
    }
  }
  isReadOnly={false}
  loggedInUser={
    Object {
      "id": 8,
    }
  }
  workflow={
    Object {
      "id": 12,
      "name": "Original Version",
      "owner_name": "John Johnson",
      "public": true,
    }
  }
>
  <nav
    className="navbar"
  >
    <a
      className="logo-navbar"
      href="/workflows/"
    >
      <img
        className="image"
        src="/static/images/logo.svg"
      />
    </a>
    <div
      className="title-metadata-stack"
    >
      <EditableWorkflowName
        api={
          Object {
            "duplicateWorkflow": [MockFunction],
            "setWorkflowPublic": [MockFunction],
          }
        }
        value="Original Version"
        workflowId={12}
      >
        <div
          className="editable-title--container"
          onClick={[Function]}
        >
          <input
            className="editable-title--field"
            name="name"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyPress={[Function]}
            type="text"
            value="Original Version"
          />
        </div>
      </EditableWorkflowName>
      <WorkflowMetadata
        api={
          Object {
            "duplicateWorkflow": [MockFunction],
            "setWorkflowPublic": [MockFunction],
          }
        }
        isPublic={true}
        workflow={
          Object {
            "id": 12,
            "name": "Original Version",
            "owner_name": "John Johnson",
            "public": true,
          }
        }
      >
        <ul
          className="metadata-container"
        >
          <li
            className="attribution"
          >
            <span
              className="metadata"
            >
              by 
              John Johnson
            </span>
            <span
              className="separator"
            >
              -
            </span>
          </li>
          <li>
            Updated 
            now
          </li>
          <li>
            <div
              className="metadata test-button"
              onClick={[Function]}
            >
              <span
                className="separator"
              >
                -
              </span>
              <span
                className="publicPrivate"
              >
                public
              </span>
            </div>
          </li>
        </ul>
      </WorkflowMetadata>
    </div>
    <div
      className="d-flex flex-row align-items-center"
    >
      <button
        className="button-white--fill action-button test-duplicate-button"
        onClick={[Function]}
      >
        Duplicate
      </button>
      <button
        className="button-white action-button test-share-button"
        onClick={[Function]}
      >
        Share
      </button>
      <WfHamburgerMenu
        api={
          Object {
            "duplicateWorkflow": [MockFunction],
            "setWorkflowPublic": [MockFunction],
          }
        }
        isReadOnly={false}
        user={
          Object {
            "id": 8,
          }
        }
        workflowId={12}
      >
        <UncontrolledDropdown>
          <Dropdown
            active={false}
            addonType={false}
            direction="down"
            inNavbar={false}
            isOpen={false}
            nav={false}
            setActiveFromChild={false}
            toggle={[Function]}
          >
            <Manager
              className="dropdown"
              onKeyDown={[Function]}
              tag="div"
            >
              <div
                className="dropdown"
                onKeyDown={[Function]}
              >
                <DropdownToggle
                  aria-haspopup={true}
                  className="context-button"
                  color="secondary"
                  title="menu"
                >
                  <Target
                    aria-expanded={false}
                    aria-haspopup={true}
                    className="context-button"
                    color="secondary"
                    component={[Function]}
                    onClick={[Function]}
                    title="menu"
                  >
                    <Button
                      aria-expanded={false}
                      aria-haspopup={true}
                      className="context-button"
                      color="secondary"
                      innerRef={[Function]}
                      onClick={[Function]}
                      tag="button"
                      title="menu"
                    >
                      <button
                        aria-expanded={false}
                        aria-haspopup={true}
                        className="context-button btn btn-secondary"
                        onClick={[Function]}
                        title="menu"
                        type="button"
                      >
                        <i
                          className="context-button--icon icon-more"
                        />
                      </button>
                    </Button>
                  </Target>
                </DropdownToggle>
                <DropdownMenu
                  flip={true}
                  right={true}
                  tag="div"
                >
                  <div
                    aria-hidden={true}
                    className="dropdown-menu dropdown-menu-right"
                    role="menu"
                    tabIndex="-1"
                  >
                    <DropdownItem
                      href="/workflows"
                      tag="button"
                      toggle={true}
                    >
                      <a
                        className="dropdown-item"
                        href="/workflows"
                        onClick={[Function]}
                        tabIndex="0"
                      >
                        <span>
                          My Workflows
                        </span>
                      </a>
                    </DropdownItem>
                    <DropdownItem
                      divider={true}
                      tag="button"
                      toggle={true}
                    >
                      <div
                        className="dropdown-divider"
                        onClick={[Function]}
                        tabIndex="-1"
                      />
                    </DropdownItem>
                    <DropdownItem
                      onClick={[Function]}
                      tag="button"
                      toggle={true}
                    >
                      <button
                        className="dropdown-item"
                        onClick={[Function]}
                        tabIndex="0"
                        type="button"
                      >
                        <span>
                          Undo
                        </span>
                      </button>
                    </DropdownItem>
                    <DropdownItem
                      onClick={[Function]}
                      tag="button"
                      toggle={true}
                    >
                      <button
                        className="dropdown-item"
                        onClick={[Function]}
                        tabIndex="0"
                        type="button"
                      >
                        <span>
                          Redo
                        </span>
                      </button>
                    </DropdownItem>
                    <DropdownItem
                      divider={true}
                      tag="button"
                      toggle={true}
                    >
                      <div
                        className="dropdown-divider"
                        onClick={[Function]}
                        tabIndex="-1"
                      />
                    </DropdownItem>
                    <DropdownItem
                      className="test-export-button"
                      onClick={[Function]}
                      tag="button"
                      toggle={true}
                    >
                      <button
                        className="test-export-button dropdown-item"
                        onClick={[Function]}
                        tabIndex="0"
                        type="button"
                      >
                        <span>
                          Import Module
                        </span>
                      </button>
                    </DropdownItem>
                    <DropdownItem
                      href="/account/logout"
                      tag="button"
                      toggle={true}
                    >
                      <a
                        className="dropdown-item"
                        href="/account/logout"
                        onClick={[Function]}
                        tabIndex="0"
                      >
                        <span>
                          Log Out
                        </span>
                      </a>
                    </DropdownItem>
                  </div>
                </DropdownMenu>
              </div>
            </Manager>
          </Dropdown>
        </UncontrolledDropdown>
      </WfHamburgerMenu>
    </div>
  </nav>
</WorkflowNavBar>
`;
