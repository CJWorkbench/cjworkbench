// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WorkflowNavBar In Private mode, Share button invites user to set to Public 1`] = `
<WorkflowNavBar
  api={
    Object {
      "duplicateWorkflow": [MockFunction],
      "setWorkflowPublic": [MockFunction],
    }
  }
  isReadOnly={false}
  loggedInUser={
    Object {
      "id": 99,
    }
  }
  workflow={
    Object {
      "id": 808,
      "name": "Original Version",
      "owner_name": "Fred Frederson",
      "public": false,
    }
  }
>
  <div>
    <div
      className="d-flex justify-content-center"
    />
    <nav
      className="navbar"
    >
      <div
        className="title-metadata-stack"
      >
        <EditableWorkflowName
          api={
            Object {
              "duplicateWorkflow": [MockFunction],
              "setWorkflowPublic": [MockFunction],
            }
          }
          value="Original Version"
          wfId={808}
        >
          <div
            className="editable-title--container"
            onClick={[Function]}
          >
            <input
              className="editable-title--field"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyPress={[Function]}
              type="text"
              value="Original Version"
            />
          </div>
        </EditableWorkflowName>
        <WorkflowMetadata
          api={
            Object {
              "duplicateWorkflow": [MockFunction],
              "setWorkflowPublic": [MockFunction],
            }
          }
          isPublic={false}
          workflow={
            Object {
              "id": 808,
              "name": "Original Version",
              "owner_name": "Fred Frederson",
              "public": false,
            }
          }
        >
          <div>
            <ul
              className="WF-meta"
            >
              <li
                className="WF-meta--item content-3 t-m-gray attribution"
              >
                <span
                  className="content-3 t-m-gray"
                >
                  by 
                  Fred Frederson
                </span>
                <span
                  className="content-3 metadataSeparator t-m-gray"
                >
                  -
                </span>
              </li>
              <li
                className="WF-meta--item content-3 t-m-gray"
              >
                Updated 
                now
              </li>
              <li
                className="WF-meta--item content-3 t-m-gray"
              >
                <div
                  className="WF-meta--item test-button"
                  onClick={[Function]}
                >
                  <div
                    className="content-3 metadataSeparator t-m-gray"
                  >
                    -
                  </div>
                  <div
                    className="t-f-blue"
                  >
                    private
                  </div>
                </div>
              </li>
            </ul>
          </div>
        </WorkflowMetadata>
      </div>
      <div
        className="d-flex flex-row align-items-center"
      >
        <div
          className="button-white--fill action-button test-duplicate-button"
          onClick={[Function]}
        >
          Duplicate
        </div>
        <div
          className="button-white action-button test-share-button"
          onClick={[Function]}
        >
          Share
        </div>
        <WfHamburgerMenu
          api={
            Object {
              "duplicateWorkflow": [MockFunction],
              "setWorkflowPublic": [MockFunction],
            }
          }
          isReadOnly={false}
          user={
            Object {
              "id": 99,
            }
          }
          workflowId={808}
        >
          <UncontrolledDropdown>
            <Dropdown
              isOpen={false}
              tag="div"
              toggle={[Function]}
            >
              <div
                className="dropdown"
              >
                <DropdownToggle
                  aria-haspopup={true}
                  className="context-button"
                  color="secondary"
                  data-toggle="dropdown"
                  key=".$.0"
                >
                  <Button
                    aria-expanded={false}
                    aria-haspopup="true"
                    className="context-button"
                    color="secondary"
                    data-toggle="dropdown"
                    onClick={[Function]}
                    tag="button"
                  >
                    <button
                      aria-expanded={false}
                      aria-haspopup="true"
                      className="context-button btn btn-secondary"
                      data-toggle="dropdown"
                      onClick={[Function]}
                      type="button"
                    >
                      <div
                        className="context-button--icon icon-more"
                      />
                    </button>
                  </Button>
                </DropdownToggle>
                <DropdownMenu
                  key=".$.1"
                  right={true}
                  tag="div"
                >
                  <div
                    aria-hidden={true}
                    className="dropdown-menu dropdown-menu-right"
                    role="menu"
                    tabIndex="-1"
                  >
                    <DropdownItem
                      className="dropdown-menu--item"
                      href="/workflows"
                      key="1"
                      tag="a"
                      toggle={true}
                    >
                      <a
                        className="dropdown-menu--item dropdown-item"
                        href="/workflows"
                        onClick={[Function]}
                        tabIndex="0"
                      >
                        <span
                          className="content-3 ml-3"
                        >
                          My Workflows
                        </span>
                      </a>
                    </DropdownItem>
                    <div>
                      <DropdownItem
                        divider={true}
                        key="100"
                        tag="button"
                        toggle={true}
                      >
                        <div
                          className="dropdown-divider"
                          onClick={[Function]}
                          tabIndex="-1"
                        />
                      </DropdownItem>
                      <DropdownItem
                        className="dropdown-menu--item"
                        key="2"
                        onClick={[Function]}
                        tag="button"
                        toggle={true}
                      >
                        <button
                          className="dropdown-menu--item dropdown-item"
                          onClick={[Function]}
                          tabIndex="0"
                          type="button"
                        >
                          <span
                            className="content-3 ml-3"
                          >
                            Undo
                          </span>
                        </button>
                      </DropdownItem>
                      <DropdownItem
                        className="dropdown-menu--item"
                        key="3"
                        onClick={[Function]}
                        tag="button"
                        toggle={true}
                      >
                        <button
                          className="dropdown-menu--item dropdown-item"
                          onClick={[Function]}
                          tabIndex="0"
                          type="button"
                        >
                          <span
                            className="content-3 ml-3"
                          >
                            Redo
                          </span>
                        </button>
                      </DropdownItem>
                      <DropdownItem
                        divider={true}
                        key="200"
                        tag="button"
                        toggle={true}
                      >
                        <div
                          className="dropdown-divider"
                          onClick={[Function]}
                          tabIndex="-1"
                        />
                      </DropdownItem>
                    </div>
                    <div>
                      <DropdownItem
                        divider={true}
                        key="100"
                        tag="button"
                        toggle={true}
                      >
                        <div
                          className="dropdown-divider"
                          onClick={[Function]}
                          tabIndex="-1"
                        />
                      </DropdownItem>
                      <DropdownItem
                        className="dropdown-menu--item mb-1 test-export-button"
                        key="4"
                        onClick={[Function]}
                        tag="button"
                        toggle={true}
                      >
                        <button
                          className="dropdown-menu--item mb-1 test-export-button dropdown-item"
                          onClick={[Function]}
                          tabIndex="0"
                          type="button"
                        >
                          <span
                            className="content-3 ml-3"
                          >
                            Import Module
                          </span>
                        </button>
                      </DropdownItem>
                    </div>
                    <DropdownItem
                      className="dropdown-menu--item"
                      href="/account/logout"
                      key="5"
                      tag="a"
                      toggle={true}
                    >
                      <a
                        className="dropdown-menu--item dropdown-item"
                        href="/account/logout"
                        onClick={[Function]}
                        tabIndex="0"
                      >
                        <span
                          className="content-3 ml-3"
                        >
                          Log Out
                        </span>
                      </a>
                    </DropdownItem>
                  </div>
                </DropdownMenu>
              </div>
            </Dropdown>
          </UncontrolledDropdown>
        </WfHamburgerMenu>
      </div>
    </nav>
  </div>
</WorkflowNavBar>
`;

exports[`WorkflowNavBar In Public mode, Share button opens modal with links 1`] = `
<WorkflowNavBar
  api={
    Object {
      "duplicateWorkflow": [MockFunction],
      "setWorkflowPublic": [MockFunction],
    }
  }
  isReadOnly={false}
  loggedInUser={
    Object {
      "id": 47,
    }
  }
  workflow={
    Object {
      "id": 808,
      "name": "Original Version",
      "owner_name": "Fred Frederson",
      "public": true,
    }
  }
>
  <div>
    <div
      className="d-flex justify-content-center"
    />
    <nav
      className="navbar"
    >
      <div
        className="title-metadata-stack"
      >
        <EditableWorkflowName
          api={
            Object {
              "duplicateWorkflow": [MockFunction],
              "setWorkflowPublic": [MockFunction],
            }
          }
          value="Original Version"
          wfId={808}
        >
          <div
            className="editable-title--container"
            onClick={[Function]}
          >
            <input
              className="editable-title--field"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyPress={[Function]}
              type="text"
              value="Original Version"
            />
          </div>
        </EditableWorkflowName>
        <WorkflowMetadata
          api={
            Object {
              "duplicateWorkflow": [MockFunction],
              "setWorkflowPublic": [MockFunction],
            }
          }
          isPublic={true}
          workflow={
            Object {
              "id": 808,
              "name": "Original Version",
              "owner_name": "Fred Frederson",
              "public": true,
            }
          }
        >
          <div>
            <ul
              className="WF-meta"
            >
              <li
                className="WF-meta--item content-3 t-m-gray attribution"
              >
                <span
                  className="content-3 t-m-gray"
                >
                  by 
                  Fred Frederson
                </span>
                <span
                  className="content-3 metadataSeparator t-m-gray"
                >
                  -
                </span>
              </li>
              <li
                className="WF-meta--item content-3 t-m-gray"
              >
                Updated 
                now
              </li>
              <li
                className="WF-meta--item content-3 t-m-gray"
              >
                <div
                  className="WF-meta--item test-button"
                  onClick={[Function]}
                >
                  <div
                    className="content-3 metadataSeparator t-m-gray"
                  >
                    -
                  </div>
                  <div
                    className="t-f-blue"
                  >
                    public
                  </div>
                </div>
              </li>
            </ul>
          </div>
        </WorkflowMetadata>
      </div>
      <div
        className="d-flex flex-row align-items-center"
      >
        <div
          className="button-white--fill action-button test-duplicate-button"
          onClick={[Function]}
        >
          Duplicate
        </div>
        <div
          className="button-white action-button test-share-button"
          onClick={[Function]}
        >
          Share
        </div>
        <WfHamburgerMenu
          api={
            Object {
              "duplicateWorkflow": [MockFunction],
              "setWorkflowPublic": [MockFunction],
            }
          }
          isReadOnly={false}
          user={
            Object {
              "id": 47,
            }
          }
          workflowId={808}
        >
          <UncontrolledDropdown>
            <Dropdown
              isOpen={false}
              tag="div"
              toggle={[Function]}
            >
              <div
                className="dropdown"
              >
                <DropdownToggle
                  aria-haspopup={true}
                  className="context-button"
                  color="secondary"
                  data-toggle="dropdown"
                  key=".$.0"
                >
                  <Button
                    aria-expanded={false}
                    aria-haspopup="true"
                    className="context-button"
                    color="secondary"
                    data-toggle="dropdown"
                    onClick={[Function]}
                    tag="button"
                  >
                    <button
                      aria-expanded={false}
                      aria-haspopup="true"
                      className="context-button btn btn-secondary"
                      data-toggle="dropdown"
                      onClick={[Function]}
                      type="button"
                    >
                      <div
                        className="context-button--icon icon-more"
                      />
                    </button>
                  </Button>
                </DropdownToggle>
                <DropdownMenu
                  key=".$.1"
                  right={true}
                  tag="div"
                >
                  <div
                    aria-hidden={true}
                    className="dropdown-menu dropdown-menu-right"
                    role="menu"
                    tabIndex="-1"
                  >
                    <DropdownItem
                      className="dropdown-menu--item"
                      href="/workflows"
                      key="1"
                      tag="a"
                      toggle={true}
                    >
                      <a
                        className="dropdown-menu--item dropdown-item"
                        href="/workflows"
                        onClick={[Function]}
                        tabIndex="0"
                      >
                        <span
                          className="content-3 ml-3"
                        >
                          My Workflows
                        </span>
                      </a>
                    </DropdownItem>
                    <div>
                      <DropdownItem
                        divider={true}
                        key="100"
                        tag="button"
                        toggle={true}
                      >
                        <div
                          className="dropdown-divider"
                          onClick={[Function]}
                          tabIndex="-1"
                        />
                      </DropdownItem>
                      <DropdownItem
                        className="dropdown-menu--item"
                        key="2"
                        onClick={[Function]}
                        tag="button"
                        toggle={true}
                      >
                        <button
                          className="dropdown-menu--item dropdown-item"
                          onClick={[Function]}
                          tabIndex="0"
                          type="button"
                        >
                          <span
                            className="content-3 ml-3"
                          >
                            Undo
                          </span>
                        </button>
                      </DropdownItem>
                      <DropdownItem
                        className="dropdown-menu--item"
                        key="3"
                        onClick={[Function]}
                        tag="button"
                        toggle={true}
                      >
                        <button
                          className="dropdown-menu--item dropdown-item"
                          onClick={[Function]}
                          tabIndex="0"
                          type="button"
                        >
                          <span
                            className="content-3 ml-3"
                          >
                            Redo
                          </span>
                        </button>
                      </DropdownItem>
                      <DropdownItem
                        divider={true}
                        key="200"
                        tag="button"
                        toggle={true}
                      >
                        <div
                          className="dropdown-divider"
                          onClick={[Function]}
                          tabIndex="-1"
                        />
                      </DropdownItem>
                    </div>
                    <div>
                      <DropdownItem
                        divider={true}
                        key="100"
                        tag="button"
                        toggle={true}
                      >
                        <div
                          className="dropdown-divider"
                          onClick={[Function]}
                          tabIndex="-1"
                        />
                      </DropdownItem>
                      <DropdownItem
                        className="dropdown-menu--item mb-1 test-export-button"
                        key="4"
                        onClick={[Function]}
                        tag="button"
                        toggle={true}
                      >
                        <button
                          className="dropdown-menu--item mb-1 test-export-button dropdown-item"
                          onClick={[Function]}
                          tabIndex="0"
                          type="button"
                        >
                          <span
                            className="content-3 ml-3"
                          >
                            Import Module
                          </span>
                        </button>
                      </DropdownItem>
                    </div>
                    <DropdownItem
                      className="dropdown-menu--item"
                      href="/account/logout"
                      key="5"
                      tag="a"
                      toggle={true}
                    >
                      <a
                        className="dropdown-menu--item dropdown-item"
                        href="/account/logout"
                        onClick={[Function]}
                        tabIndex="0"
                      >
                        <span
                          className="content-3 ml-3"
                        >
                          Log Out
                        </span>
                      </a>
                    </DropdownItem>
                  </div>
                </DropdownMenu>
              </div>
            </Dropdown>
          </UncontrolledDropdown>
        </WfHamburgerMenu>
      </div>
    </nav>
  </div>
</WorkflowNavBar>
`;

exports[`WorkflowNavBar With user NOT logged in, Duplicate button sends user to sign-in page 1`] = `
<WorkflowNavBar
  api={
    Object {
      "duplicateWorkflow": [MockFunction],
      "setWorkflowPublic": [MockFunction],
    }
  }
  isReadOnly={false}
  workflow={
    Object {
      "id": 303,
      "name": "Original Version",
      "owner_name": "Not LogggedIn",
      "public": true,
    }
  }
>
  <div>
    <div
      className="d-flex justify-content-center"
    />
    <nav
      className="navbar"
    >
      <div
        className="title-metadata-stack"
      >
        <EditableWorkflowName
          api={
            Object {
              "duplicateWorkflow": [MockFunction],
              "setWorkflowPublic": [MockFunction],
            }
          }
          value="Original Version"
          wfId={303}
        >
          <div
            className="editable-title--container"
            onClick={[Function]}
          >
            <input
              className="editable-title--field"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyPress={[Function]}
              type="text"
              value="Original Version"
            />
          </div>
        </EditableWorkflowName>
        <WorkflowMetadata
          api={
            Object {
              "duplicateWorkflow": [MockFunction],
              "setWorkflowPublic": [MockFunction],
            }
          }
          isPublic={true}
          workflow={
            Object {
              "id": 303,
              "name": "Original Version",
              "owner_name": "Not LogggedIn",
              "public": true,
            }
          }
        >
          <div>
            <ul
              className="WF-meta"
            >
              <li
                className="WF-meta--item content-3 t-m-gray attribution"
              >
                <span
                  className="content-3 t-m-gray"
                >
                  by 
                  Not LogggedIn
                </span>
                <span
                  className="content-3 metadataSeparator t-m-gray"
                >
                  -
                </span>
              </li>
              <li
                className="WF-meta--item content-3 t-m-gray"
              >
                Updated 
                now
              </li>
              <li
                className="WF-meta--item content-3 t-m-gray"
              >
                <div
                  className="WF-meta--item test-button"
                  onClick={[Function]}
                >
                  <div
                    className="content-3 metadataSeparator t-m-gray"
                  >
                    -
                  </div>
                  <div
                    className="t-f-blue"
                  >
                    public
                  </div>
                </div>
              </li>
            </ul>
          </div>
        </WorkflowMetadata>
      </div>
      <div
        className="d-flex flex-row align-items-center"
      >
        <div
          className="button-white--fill action-button test-duplicate-button"
          onClick={[Function]}
        >
          Duplicate
        </div>
        <div
          className="button-white action-button test-share-button"
          onClick={[Function]}
        >
          Share
        </div>
        <a
          className="nav--link t-white content-2"
          href="http://app.workbenchdata.com/account/login"
        >
          Sign in
        </a>
      </div>
    </nav>
  </div>
</WorkflowNavBar>
`;

exports[`WorkflowNavBar With user logged in, Duplicate button sends user to new copy 1`] = `
<WorkflowNavBar
  api={
    Object {
      "duplicateWorkflow": [MockFunction],
      "setWorkflowPublic": [MockFunction],
    }
  }
  isReadOnly={false}
  loggedInUser={
    Object {
      "id": 8,
    }
  }
  workflow={
    Object {
      "name": "Original Version",
      "owner_name": "John Johnson",
      "public": true,
    }
  }
>
  <div>
    <div
      className="d-flex justify-content-center"
    />
    <nav
      className="navbar"
    >
      <div
        className="title-metadata-stack"
      >
        <EditableWorkflowName
          api={
            Object {
              "duplicateWorkflow": [MockFunction],
              "setWorkflowPublic": [MockFunction],
            }
          }
          value="Original Version"
        >
          <div
            className="editable-title--container"
            onClick={[Function]}
          >
            <input
              className="editable-title--field"
              onBlur={[Function]}
              onChange={[Function]}
              onKeyPress={[Function]}
              type="text"
              value="Original Version"
            />
          </div>
        </EditableWorkflowName>
        <WorkflowMetadata
          api={
            Object {
              "duplicateWorkflow": [MockFunction],
              "setWorkflowPublic": [MockFunction],
            }
          }
          isPublic={true}
          workflow={
            Object {
              "name": "Original Version",
              "owner_name": "John Johnson",
              "public": true,
            }
          }
        >
          <div>
            <ul
              className="WF-meta"
            >
              <li
                className="WF-meta--item content-3 t-m-gray attribution"
              >
                <span
                  className="content-3 t-m-gray"
                >
                  by 
                  John Johnson
                </span>
                <span
                  className="content-3 metadataSeparator t-m-gray"
                >
                  -
                </span>
              </li>
              <li
                className="WF-meta--item content-3 t-m-gray"
              >
                Updated 
                now
              </li>
              <li
                className="WF-meta--item content-3 t-m-gray"
              >
                <div
                  className="WF-meta--item test-button"
                  onClick={[Function]}
                >
                  <div
                    className="content-3 metadataSeparator t-m-gray"
                  >
                    -
                  </div>
                  <div
                    className="t-f-blue"
                  >
                    public
                  </div>
                </div>
              </li>
            </ul>
          </div>
        </WorkflowMetadata>
      </div>
      <div
        className="d-flex flex-row align-items-center"
      >
        <div
          className="button-white--fill action-button test-duplicate-button"
          onClick={[Function]}
        >
          Duplicate
        </div>
        <div
          className="button-white action-button test-share-button"
          onClick={[Function]}
        >
          Share
        </div>
        <WfHamburgerMenu
          api={
            Object {
              "duplicateWorkflow": [MockFunction],
              "setWorkflowPublic": [MockFunction],
            }
          }
          isReadOnly={false}
          user={
            Object {
              "id": 8,
            }
          }
        >
          <UncontrolledDropdown>
            <Dropdown
              isOpen={false}
              tag="div"
              toggle={[Function]}
            >
              <div
                className="dropdown"
              >
                <DropdownToggle
                  aria-haspopup={true}
                  className="context-button"
                  color="secondary"
                  data-toggle="dropdown"
                  key=".$.0"
                >
                  <Button
                    aria-expanded={false}
                    aria-haspopup="true"
                    className="context-button"
                    color="secondary"
                    data-toggle="dropdown"
                    onClick={[Function]}
                    tag="button"
                  >
                    <button
                      aria-expanded={false}
                      aria-haspopup="true"
                      className="context-button btn btn-secondary"
                      data-toggle="dropdown"
                      onClick={[Function]}
                      type="button"
                    >
                      <div
                        className="context-button--icon icon-more"
                      />
                    </button>
                  </Button>
                </DropdownToggle>
                <DropdownMenu
                  key=".$.1"
                  right={true}
                  tag="div"
                >
                  <div
                    aria-hidden={true}
                    className="dropdown-menu dropdown-menu-right"
                    role="menu"
                    tabIndex="-1"
                  >
                    <div>
                      <DropdownItem
                        divider={true}
                        key="100"
                        tag="button"
                        toggle={true}
                      >
                        <div
                          className="dropdown-divider"
                          onClick={[Function]}
                          tabIndex="-1"
                        />
                      </DropdownItem>
                      <DropdownItem
                        className="dropdown-menu--item mb-1 test-export-button"
                        key="4"
                        onClick={[Function]}
                        tag="button"
                        toggle={true}
                      >
                        <button
                          className="dropdown-menu--item mb-1 test-export-button dropdown-item"
                          onClick={[Function]}
                          tabIndex="0"
                          type="button"
                        >
                          <span
                            className="content-3 ml-3"
                          >
                            Import Module
                          </span>
                        </button>
                      </DropdownItem>
                    </div>
                    <DropdownItem
                      className="dropdown-menu--item"
                      href="/account/logout"
                      key="5"
                      tag="a"
                      toggle={true}
                    >
                      <a
                        className="dropdown-menu--item dropdown-item"
                        href="/account/logout"
                        onClick={[Function]}
                        tabIndex="0"
                      >
                        <span
                          className="content-3 ml-3"
                        >
                          Log Out
                        </span>
                      </a>
                    </DropdownItem>
                  </div>
                </DropdownMenu>
              </div>
            </Dropdown>
          </UncontrolledDropdown>
        </WfHamburgerMenu>
      </div>
    </nav>
  </div>
</WorkflowNavBar>
`;
