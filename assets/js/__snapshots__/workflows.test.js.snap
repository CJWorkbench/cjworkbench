// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Workflow list page renders correctly 1`] = `
<Workflows
  api={
    Object {
      "deleteWorkflow": [MockFunction],
      "duplicateWorkflow": [MockFunction],
      "newWorkflow": [MockFunction],
    }
  }
  workflows={
    Object {
      "owned": Array [
        Object {
          "id": 1,
          "is_owner": true,
          "last_update": "2010-10-18T00:30:00",
          "name": "Cleaning",
          "owner_name": "Fred Frederson",
          "public": true,
        },
        Object {
          "id": 2,
          "is_owner": true,
          "last_update": "2010-10-18T00:20:00",
          "name": "Charting",
          "owner_name": "Fred Frederson",
          "public": false,
        },
        Object {
          "id": 3,
          "is_owner": true,
          "last_update": "2010-10-18T07:45:00",
          "name": "Analysis",
          "owner_name": "Fred Frederson",
          "public": false,
        },
      ],
      "shared": Array [
        Object {
          "id": 7,
          "is_owner": false,
          "last_update": "2010-10-18T00:30:00",
          "name": "Messy data cleanup",
          "owner_name": "John Johnson",
          "public": false,
        },
        Object {
          "id": 8,
          "is_owner": false,
          "last_update": "2010-10-18T00:45:00",
          "name": "Document search",
          "owner_name": "Sally Sallerson",
          "public": true,
        },
      ],
      "templates": Array [
        Object {
          "id": 10,
          "is_owner": false,
          "last_update": "2010-10-18T00:30:00",
          "name": "Demo 1",
          "owner_name": "Workbench",
          "public": false,
        },
      ],
    }
  }
>
  <div
    className="workflows-page"
  >
    <WorkflowListNavBar>
      <div>
        <nav
          className="navbar"
        >
          <div
            className="logo"
          >
            <img
              className="logo"
              src="undefinedimages/logo.svg"
            />
            <img
              className="logo-text"
              src="undefinedimages/logo-text.svg"
            />
          </div>
          <div
            className="links"
          >
            <a
              className="inactive"
              href="/workflows"
            >
              WORKFLOWS
            </a>
            <a
              className="active"
              href={null}
            >
              TRAINING
            </a>
          </div>
          <WfHamburgerMenu>
            <UncontrolledDropdown>
              <Dropdown
                active={false}
                addonType={false}
                direction="down"
                inNavbar={false}
                isOpen={false}
                nav={false}
                setActiveFromChild={false}
                toggle={[Function]}
              >
                <Manager
                  className="dropdown"
                  onKeyDown={[Function]}
                  tag="div"
                >
                  <div
                    className="dropdown"
                    onKeyDown={[Function]}
                  >
                    <DropdownToggle
                      aria-haspopup={true}
                      className="context-button"
                      color="secondary"
                      title="menu"
                    >
                      <Target
                        aria-expanded={false}
                        aria-haspopup={true}
                        className="context-button"
                        color="secondary"
                        component={[Function]}
                        onClick={[Function]}
                        title="menu"
                      >
                        <Button
                          aria-expanded={false}
                          aria-haspopup={true}
                          className="context-button"
                          color="secondary"
                          innerRef={[Function]}
                          onClick={[Function]}
                          tag="button"
                          title="menu"
                        >
                          <button
                            aria-expanded={false}
                            aria-haspopup={true}
                            aria-label={null}
                            className="context-button btn btn-secondary"
                            onClick={[Function]}
                            title="menu"
                            type="button"
                          >
                            <i
                              className="context-button--icon icon-more"
                            />
                          </button>
                        </Button>
                      </Target>
                    </DropdownToggle>
                    <DropdownMenu
                      flip={true}
                      positionFixed={true}
                      right={true}
                      tag="div"
                    >
                      <div
                        aria-hidden={true}
                        className="dropdown-menu dropdown-menu-right"
                        positionFixed={true}
                        role="menu"
                        tabIndex="-1"
                      >
                        <DropdownItem
                          href="/account/logout"
                          tag="button"
                          toggle={true}
                        >
                          <a
                            className="dropdown-item"
                            href="/account/logout"
                            onClick={[Function]}
                            role="menuitem"
                            tabIndex="0"
                          >
                            <span>
                              Log out
                            </span>
                          </a>
                        </DropdownItem>
                      </div>
                    </DropdownMenu>
                  </div>
                </Manager>
              </Dropdown>
            </UncontrolledDropdown>
          </WfHamburgerMenu>
        </nav>
      </div>
    </WorkflowListNavBar>
    <div
      className="container"
    >
      <a
        className="lesson-banner mx-auto"
        href="/lessons/"
      >
        <div>
          <div
            className="content-1"
          >
            NEW
          </div>
          <div
            className="d-flex"
          >
            <span
              className="icon-star"
            />
            <div
              className=" title-1 "
            >
              TRAINING
            </div>
          </div>
        </div>
        <p>
          Learn how to work with data without coding
        </p>
      </a>
      <div
        className="d-flex justify-content-center"
      >
        <button
          className="button-blue action-button new-workflow-button"
          onClick={[Function]}
        >
          Create Workflow
        </button>
      </div>
      <div
        className="mx-auto workflows-list"
      >
        <Nav
          tabs={true}
          tag="ul"
          vertical={false}
        >
          <ul
            className="nav nav-tabs"
          >
            <div
              className="tab-group"
            >
              <NavItem
                active={true}
                onClick={[Function]}
                tag="li"
              >
                <li
                  className="nav-item active"
                  onClick={[Function]}
                >
                  <NavLink
                    tag="a"
                  >
                    <a
                      className="nav-link"
                      onClick={[Function]}
                    >
                      My workflows
                    </a>
                  </NavLink>
                </li>
              </NavItem>
              <NavItem
                active={false}
                onClick={[Function]}
                tag="li"
              >
                <li
                  className="nav-item"
                  onClick={[Function]}
                >
                  <NavLink
                    tag="a"
                  >
                    <a
                      className="nav-link"
                      onClick={[Function]}
                    >
                      Shared with me
                    </a>
                  </NavLink>
                </li>
              </NavItem>
              <NavItem
                active={false}
                onClick={[Function]}
                tag="li"
              >
                <li
                  className="nav-item"
                  onClick={[Function]}
                >
                  <NavLink
                    tag="a"
                  >
                    <a
                      className="nav-link"
                      onClick={[Function]}
                    >
                      Recipes
                    </a>
                  </NavLink>
                </li>
              </NavItem>
            </div>
            <div
              className="sort-group"
            >
              <span>
                Sort
              </span>
              <WfSortMenu
                setSortType={[Function]}
                sortDirection="descending"
              >
                <UncontrolledDropdown>
                  <Dropdown
                    active={false}
                    addonType={false}
                    direction="down"
                    inNavbar={false}
                    isOpen={false}
                    nav={false}
                    setActiveFromChild={false}
                    toggle={[Function]}
                  >
                    <Manager
                      className="dropdown"
                      onKeyDown={[Function]}
                      tag="div"
                    >
                      <div
                        className="dropdown"
                        onKeyDown={[Function]}
                      >
                        <DropdownToggle
                          aria-haspopup={true}
                          className="btn btn-secondary context-button"
                          color="secondary"
                        >
                          <Target
                            aria-expanded={false}
                            aria-haspopup={true}
                            className="btn btn-secondary context-button"
                            color="secondary"
                            component={[Function]}
                            onClick={[Function]}
                          >
                            <Button
                              aria-expanded={false}
                              aria-haspopup={true}
                              className="btn btn-secondary context-button"
                              color="secondary"
                              innerRef={[Function]}
                              onClick={[Function]}
                              tag="button"
                            >
                              <button
                                aria-expanded={false}
                                aria-haspopup={true}
                                aria-label={null}
                                className="btn btn-secondary context-button btn btn-secondary"
                                onClick={[Function]}
                                type="button"
                              >
                                <i
                                  className="icon-caret-down"
                                />
                              </button>
                            </Button>
                          </Target>
                        </DropdownToggle>
                        <DropdownMenu
                          flip={true}
                          positionFixed={true}
                          right={true}
                          tag="div"
                        >
                          <div
                            aria-hidden={true}
                            className="dropdown-menu dropdown-menu-right"
                            positionFixed={true}
                            role="menu"
                            tabIndex="-1"
                          >
                            <DropdownItem
                              className="test-sort-date-ascending"
                              onClick={[Function]}
                              tag="button"
                              toggle={true}
                            >
                              <button
                                className="test-sort-date-ascending dropdown-item"
                                onClick={[Function]}
                                role="menuitem"
                                tabIndex="0"
                                type="button"
                              >
                                <span>
                                  Last modified
                                </span>
                              </button>
                            </DropdownItem>
                            <DropdownItem
                              className="test-sort-date-descending"
                              onClick={[Function]}
                              tag="button"
                              toggle={true}
                            >
                              <button
                                className="test-sort-date-descending dropdown-item"
                                onClick={[Function]}
                                role="menuitem"
                                tabIndex="0"
                                type="button"
                              >
                                <span>
                                  Oldest modified
                                </span>
                              </button>
                            </DropdownItem>
                            <DropdownItem
                              divider={true}
                              tag="button"
                              toggle={true}
                            >
                              <div
                                className="dropdown-divider"
                                onClick={[Function]}
                                tabIndex="-1"
                              />
                            </DropdownItem>
                            <DropdownItem
                              className="test-sort-name-ascending"
                              onClick={[Function]}
                              tag="button"
                              toggle={true}
                            >
                              <button
                                className="test-sort-name-ascending dropdown-item"
                                onClick={[Function]}
                                role="menuitem"
                                tabIndex="0"
                                type="button"
                              >
                                <span>
                                  Alphabetical
                                </span>
                              </button>
                            </DropdownItem>
                            <DropdownItem
                              className="test-sort-name-descending"
                              onClick={[Function]}
                              tag="button"
                              toggle={true}
                            >
                              <button
                                className="test-sort-name-descending dropdown-item"
                                onClick={[Function]}
                                role="menuitem"
                                tabIndex="0"
                                type="button"
                              >
                                <span>
                                  Reverse alphabetical
                                </span>
                              </button>
                            </DropdownItem>
                          </div>
                        </DropdownMenu>
                      </div>
                    </Manager>
                  </Dropdown>
                </UncontrolledDropdown>
              </WfSortMenu>
            </div>
          </ul>
        </Nav>
        <TabContent
          activeTab="owned"
          tag="div"
        >
          <div
            className="tab-content"
          >
            <TabPane
              tabId="owned"
              tag="div"
            >
              <div
                className="tab-pane active"
              >
                <div
                  className="workflows-item--wrap"
                >
                  <a
                    className="workflow-item"
                    href="/workflows/3"
                    key="3"
                  >
                    <div
                      className="mt-1"
                    >
                      <div
                        className="workflow-title"
                      >
                        Analysis
                      </div>
                      <div
                        className="wf-meta--id"
                      >
                        <WorkflowMetadata
                          openShareModal={[Function]}
                          workflow={
                            Object {
                              "id": 3,
                              "is_owner": true,
                              "last_update": "2010-10-18T07:45:00",
                              "name": "Analysis",
                              "owner_name": "Fred Frederson",
                              "public": false,
                            }
                          }
                        >
                          <ul
                            className="metadata-container"
                          >
                            <li
                              className="attribution"
                            >
                              <span
                                className="metadata"
                              >
                                by 
                                Fred Frederson
                              </span>
                              <span
                                className="separator"
                              >
                                -
                              </span>
                            </li>
                            <li>
                              Updated 
                              8y ago
                            </li>
                            <li>
                              <span
                                className="separator"
                              >
                                -
                              </span>
                              <button
                                className="public-private"
                                onClick={[Function]}
                                title="Change privacy"
                              >
                                private
                              </button>
                            </li>
                          </ul>
                        </WorkflowMetadata>
                      </div>
                    </div>
                    <div
                      className="menu-test-class"
                      onClick={[Function]}
                    >
                      <WfContextMenu
                        canDelete={true}
                        deleteWorkflow={[Function]}
                        duplicateWorkflow={[Function]}
                      >
                        <UncontrolledDropdown>
                          <Dropdown
                            active={false}
                            addonType={false}
                            direction="down"
                            inNavbar={false}
                            isOpen={false}
                            nav={false}
                            setActiveFromChild={false}
                            toggle={[Function]}
                          >
                            <Manager
                              className="dropdown"
                              onKeyDown={[Function]}
                              tag="div"
                            >
                              <div
                                className="dropdown"
                                onKeyDown={[Function]}
                              >
                                <DropdownToggle
                                  aria-haspopup={true}
                                  className="context-button"
                                  color="secondary"
                                >
                                  <Target
                                    aria-expanded={false}
                                    aria-haspopup={true}
                                    className="context-button"
                                    color="secondary"
                                    component={[Function]}
                                    onClick={[Function]}
                                  >
                                    <Button
                                      aria-expanded={false}
                                      aria-haspopup={true}
                                      className="context-button"
                                      color="secondary"
                                      innerRef={[Function]}
                                      onClick={[Function]}
                                      tag="button"
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        aria-label={null}
                                        className="context-button btn btn-secondary"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <i
                                          className="context-button--icon icon-more"
                                        />
                                      </button>
                                    </Button>
                                  </Target>
                                </DropdownToggle>
                                <DropdownMenu
                                  flip={true}
                                  positionFixed={true}
                                  right={true}
                                  tag="div"
                                >
                                  <div
                                    aria-hidden={true}
                                    className="dropdown-menu dropdown-menu-right"
                                    positionFixed={true}
                                    role="menu"
                                    tabIndex="-1"
                                  >
                                    <DropdownItem
                                      className="test-duplicate-button"
                                      onClick={[Function]}
                                      tag="button"
                                      toggle={true}
                                    >
                                      <button
                                        className="test-duplicate-button dropdown-item"
                                        onClick={[Function]}
                                        role="menuitem"
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <i
                                          className="icon-duplicate"
                                        />
                                        <span>
                                          Duplicate
                                        </span>
                                      </button>
                                    </DropdownItem>
                                    <DropdownItem
                                      className="test-delete-button"
                                      onClick={[Function]}
                                      tag="button"
                                      toggle={true}
                                    >
                                      <button
                                        className="test-delete-button dropdown-item"
                                        onClick={[Function]}
                                        role="menuitem"
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <i
                                          className="icon-bin"
                                        />
                                        <span>
                                          Delete
                                        </span>
                                      </button>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </Manager>
                          </Dropdown>
                        </UncontrolledDropdown>
                      </WfContextMenu>
                    </div>
                  </a>
                  <a
                    className="workflow-item"
                    href="/workflows/1"
                    key="1"
                  >
                    <div
                      className="mt-1"
                    >
                      <div
                        className="workflow-title"
                      >
                        Cleaning
                      </div>
                      <div
                        className="wf-meta--id"
                      >
                        <WorkflowMetadata
                          openShareModal={[Function]}
                          workflow={
                            Object {
                              "id": 1,
                              "is_owner": true,
                              "last_update": "2010-10-18T00:30:00",
                              "name": "Cleaning",
                              "owner_name": "Fred Frederson",
                              "public": true,
                            }
                          }
                        >
                          <ul
                            className="metadata-container"
                          >
                            <li
                              className="attribution"
                            >
                              <span
                                className="metadata"
                              >
                                by 
                                Fred Frederson
                              </span>
                              <span
                                className="separator"
                              >
                                -
                              </span>
                            </li>
                            <li>
                              Updated 
                              8y ago
                            </li>
                            <li>
                              <span
                                className="separator"
                              >
                                -
                              </span>
                              <button
                                className="public-private"
                                onClick={[Function]}
                                title="Change privacy"
                              >
                                public
                              </button>
                            </li>
                          </ul>
                        </WorkflowMetadata>
                      </div>
                    </div>
                    <div
                      className="menu-test-class"
                      onClick={[Function]}
                    >
                      <WfContextMenu
                        canDelete={true}
                        deleteWorkflow={[Function]}
                        duplicateWorkflow={[Function]}
                      >
                        <UncontrolledDropdown>
                          <Dropdown
                            active={false}
                            addonType={false}
                            direction="down"
                            inNavbar={false}
                            isOpen={false}
                            nav={false}
                            setActiveFromChild={false}
                            toggle={[Function]}
                          >
                            <Manager
                              className="dropdown"
                              onKeyDown={[Function]}
                              tag="div"
                            >
                              <div
                                className="dropdown"
                                onKeyDown={[Function]}
                              >
                                <DropdownToggle
                                  aria-haspopup={true}
                                  className="context-button"
                                  color="secondary"
                                >
                                  <Target
                                    aria-expanded={false}
                                    aria-haspopup={true}
                                    className="context-button"
                                    color="secondary"
                                    component={[Function]}
                                    onClick={[Function]}
                                  >
                                    <Button
                                      aria-expanded={false}
                                      aria-haspopup={true}
                                      className="context-button"
                                      color="secondary"
                                      innerRef={[Function]}
                                      onClick={[Function]}
                                      tag="button"
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        aria-label={null}
                                        className="context-button btn btn-secondary"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <i
                                          className="context-button--icon icon-more"
                                        />
                                      </button>
                                    </Button>
                                  </Target>
                                </DropdownToggle>
                                <DropdownMenu
                                  flip={true}
                                  positionFixed={true}
                                  right={true}
                                  tag="div"
                                >
                                  <div
                                    aria-hidden={true}
                                    className="dropdown-menu dropdown-menu-right"
                                    positionFixed={true}
                                    role="menu"
                                    tabIndex="-1"
                                  >
                                    <DropdownItem
                                      className="test-duplicate-button"
                                      onClick={[Function]}
                                      tag="button"
                                      toggle={true}
                                    >
                                      <button
                                        className="test-duplicate-button dropdown-item"
                                        onClick={[Function]}
                                        role="menuitem"
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <i
                                          className="icon-duplicate"
                                        />
                                        <span>
                                          Duplicate
                                        </span>
                                      </button>
                                    </DropdownItem>
                                    <DropdownItem
                                      className="test-delete-button"
                                      onClick={[Function]}
                                      tag="button"
                                      toggle={true}
                                    >
                                      <button
                                        className="test-delete-button dropdown-item"
                                        onClick={[Function]}
                                        role="menuitem"
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <i
                                          className="icon-bin"
                                        />
                                        <span>
                                          Delete
                                        </span>
                                      </button>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </Manager>
                          </Dropdown>
                        </UncontrolledDropdown>
                      </WfContextMenu>
                    </div>
                  </a>
                  <a
                    className="workflow-item"
                    href="/workflows/2"
                    key="2"
                  >
                    <div
                      className="mt-1"
                    >
                      <div
                        className="workflow-title"
                      >
                        Charting
                      </div>
                      <div
                        className="wf-meta--id"
                      >
                        <WorkflowMetadata
                          openShareModal={[Function]}
                          workflow={
                            Object {
                              "id": 2,
                              "is_owner": true,
                              "last_update": "2010-10-18T00:20:00",
                              "name": "Charting",
                              "owner_name": "Fred Frederson",
                              "public": false,
                            }
                          }
                        >
                          <ul
                            className="metadata-container"
                          >
                            <li
                              className="attribution"
                            >
                              <span
                                className="metadata"
                              >
                                by 
                                Fred Frederson
                              </span>
                              <span
                                className="separator"
                              >
                                -
                              </span>
                            </li>
                            <li>
                              Updated 
                              8y ago
                            </li>
                            <li>
                              <span
                                className="separator"
                              >
                                -
                              </span>
                              <button
                                className="public-private"
                                onClick={[Function]}
                                title="Change privacy"
                              >
                                private
                              </button>
                            </li>
                          </ul>
                        </WorkflowMetadata>
                      </div>
                    </div>
                    <div
                      className="menu-test-class"
                      onClick={[Function]}
                    >
                      <WfContextMenu
                        canDelete={true}
                        deleteWorkflow={[Function]}
                        duplicateWorkflow={[Function]}
                      >
                        <UncontrolledDropdown>
                          <Dropdown
                            active={false}
                            addonType={false}
                            direction="down"
                            inNavbar={false}
                            isOpen={false}
                            nav={false}
                            setActiveFromChild={false}
                            toggle={[Function]}
                          >
                            <Manager
                              className="dropdown"
                              onKeyDown={[Function]}
                              tag="div"
                            >
                              <div
                                className="dropdown"
                                onKeyDown={[Function]}
                              >
                                <DropdownToggle
                                  aria-haspopup={true}
                                  className="context-button"
                                  color="secondary"
                                >
                                  <Target
                                    aria-expanded={false}
                                    aria-haspopup={true}
                                    className="context-button"
                                    color="secondary"
                                    component={[Function]}
                                    onClick={[Function]}
                                  >
                                    <Button
                                      aria-expanded={false}
                                      aria-haspopup={true}
                                      className="context-button"
                                      color="secondary"
                                      innerRef={[Function]}
                                      onClick={[Function]}
                                      tag="button"
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        aria-label={null}
                                        className="context-button btn btn-secondary"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <i
                                          className="context-button--icon icon-more"
                                        />
                                      </button>
                                    </Button>
                                  </Target>
                                </DropdownToggle>
                                <DropdownMenu
                                  flip={true}
                                  positionFixed={true}
                                  right={true}
                                  tag="div"
                                >
                                  <div
                                    aria-hidden={true}
                                    className="dropdown-menu dropdown-menu-right"
                                    positionFixed={true}
                                    role="menu"
                                    tabIndex="-1"
                                  >
                                    <DropdownItem
                                      className="test-duplicate-button"
                                      onClick={[Function]}
                                      tag="button"
                                      toggle={true}
                                    >
                                      <button
                                        className="test-duplicate-button dropdown-item"
                                        onClick={[Function]}
                                        role="menuitem"
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <i
                                          className="icon-duplicate"
                                        />
                                        <span>
                                          Duplicate
                                        </span>
                                      </button>
                                    </DropdownItem>
                                    <DropdownItem
                                      className="test-delete-button"
                                      onClick={[Function]}
                                      tag="button"
                                      toggle={true}
                                    >
                                      <button
                                        className="test-delete-button dropdown-item"
                                        onClick={[Function]}
                                        role="menuitem"
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <i
                                          className="icon-bin"
                                        />
                                        <span>
                                          Delete
                                        </span>
                                      </button>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </Manager>
                          </Dropdown>
                        </UncontrolledDropdown>
                      </WfContextMenu>
                    </div>
                  </a>
                </div>
              </div>
            </TabPane>
            <TabPane
              tabId="shared"
              tag="div"
            >
              <div
                className="tab-pane"
              >
                <div
                  className="workflows-item--wrap"
                >
                  <a
                    className="workflow-item"
                    href="/workflows/8"
                    key="8"
                  >
                    <div
                      className="mt-1"
                    >
                      <div
                        className="workflow-title"
                      >
                        Document search
                      </div>
                      <div
                        className="wf-meta--id"
                      >
                        <WorkflowMetadata
                          openShareModal={[Function]}
                          workflow={
                            Object {
                              "id": 8,
                              "is_owner": false,
                              "last_update": "2010-10-18T00:45:00",
                              "name": "Document search",
                              "owner_name": "Sally Sallerson",
                              "public": true,
                            }
                          }
                        >
                          <ul
                            className="metadata-container"
                          >
                            <li
                              className="attribution"
                            >
                              <span
                                className="metadata"
                              >
                                by 
                                Sally Sallerson
                              </span>
                              <span
                                className="separator"
                              >
                                -
                              </span>
                            </li>
                            <li>
                              Updated 
                              8y ago
                            </li>
                            <li>
                              <span
                                className="separator"
                              >
                                -
                              </span>
                              <button
                                className="public-private"
                                onClick={[Function]}
                                title="Change privacy"
                              >
                                public
                              </button>
                            </li>
                          </ul>
                        </WorkflowMetadata>
                      </div>
                    </div>
                    <div
                      className="menu-test-class"
                      onClick={[Function]}
                    >
                      <WfContextMenu
                        canDelete={false}
                        deleteWorkflow={[Function]}
                        duplicateWorkflow={[Function]}
                      >
                        <UncontrolledDropdown>
                          <Dropdown
                            active={false}
                            addonType={false}
                            direction="down"
                            inNavbar={false}
                            isOpen={false}
                            nav={false}
                            setActiveFromChild={false}
                            toggle={[Function]}
                          >
                            <Manager
                              className="dropdown"
                              onKeyDown={[Function]}
                              tag="div"
                            >
                              <div
                                className="dropdown"
                                onKeyDown={[Function]}
                              >
                                <DropdownToggle
                                  aria-haspopup={true}
                                  className="context-button"
                                  color="secondary"
                                >
                                  <Target
                                    aria-expanded={false}
                                    aria-haspopup={true}
                                    className="context-button"
                                    color="secondary"
                                    component={[Function]}
                                    onClick={[Function]}
                                  >
                                    <Button
                                      aria-expanded={false}
                                      aria-haspopup={true}
                                      className="context-button"
                                      color="secondary"
                                      innerRef={[Function]}
                                      onClick={[Function]}
                                      tag="button"
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        aria-label={null}
                                        className="context-button btn btn-secondary"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <i
                                          className="context-button--icon icon-more"
                                        />
                                      </button>
                                    </Button>
                                  </Target>
                                </DropdownToggle>
                                <DropdownMenu
                                  flip={true}
                                  positionFixed={true}
                                  right={true}
                                  tag="div"
                                >
                                  <div
                                    aria-hidden={true}
                                    className="dropdown-menu dropdown-menu-right"
                                    positionFixed={true}
                                    role="menu"
                                    tabIndex="-1"
                                  >
                                    <DropdownItem
                                      className="test-duplicate-button"
                                      onClick={[Function]}
                                      tag="button"
                                      toggle={true}
                                    >
                                      <button
                                        className="test-duplicate-button dropdown-item"
                                        onClick={[Function]}
                                        role="menuitem"
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <i
                                          className="icon-duplicate"
                                        />
                                        <span>
                                          Duplicate
                                        </span>
                                      </button>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </Manager>
                          </Dropdown>
                        </UncontrolledDropdown>
                      </WfContextMenu>
                    </div>
                  </a>
                  <a
                    className="workflow-item"
                    href="/workflows/7"
                    key="7"
                  >
                    <div
                      className="mt-1"
                    >
                      <div
                        className="workflow-title"
                      >
                        Messy data cleanup
                      </div>
                      <div
                        className="wf-meta--id"
                      >
                        <WorkflowMetadata
                          openShareModal={[Function]}
                          workflow={
                            Object {
                              "id": 7,
                              "is_owner": false,
                              "last_update": "2010-10-18T00:30:00",
                              "name": "Messy data cleanup",
                              "owner_name": "John Johnson",
                              "public": false,
                            }
                          }
                        >
                          <ul
                            className="metadata-container"
                          >
                            <li
                              className="attribution"
                            >
                              <span
                                className="metadata"
                              >
                                by 
                                John Johnson
                              </span>
                              <span
                                className="separator"
                              >
                                -
                              </span>
                            </li>
                            <li>
                              Updated 
                              8y ago
                            </li>
                            <li>
                              <span
                                className="separator"
                              >
                                -
                              </span>
                              <button
                                className="public-private"
                                onClick={[Function]}
                                title="Change privacy"
                              >
                                private
                              </button>
                            </li>
                          </ul>
                        </WorkflowMetadata>
                      </div>
                    </div>
                    <div
                      className="menu-test-class"
                      onClick={[Function]}
                    >
                      <WfContextMenu
                        canDelete={false}
                        deleteWorkflow={[Function]}
                        duplicateWorkflow={[Function]}
                      >
                        <UncontrolledDropdown>
                          <Dropdown
                            active={false}
                            addonType={false}
                            direction="down"
                            inNavbar={false}
                            isOpen={false}
                            nav={false}
                            setActiveFromChild={false}
                            toggle={[Function]}
                          >
                            <Manager
                              className="dropdown"
                              onKeyDown={[Function]}
                              tag="div"
                            >
                              <div
                                className="dropdown"
                                onKeyDown={[Function]}
                              >
                                <DropdownToggle
                                  aria-haspopup={true}
                                  className="context-button"
                                  color="secondary"
                                >
                                  <Target
                                    aria-expanded={false}
                                    aria-haspopup={true}
                                    className="context-button"
                                    color="secondary"
                                    component={[Function]}
                                    onClick={[Function]}
                                  >
                                    <Button
                                      aria-expanded={false}
                                      aria-haspopup={true}
                                      className="context-button"
                                      color="secondary"
                                      innerRef={[Function]}
                                      onClick={[Function]}
                                      tag="button"
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        aria-label={null}
                                        className="context-button btn btn-secondary"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <i
                                          className="context-button--icon icon-more"
                                        />
                                      </button>
                                    </Button>
                                  </Target>
                                </DropdownToggle>
                                <DropdownMenu
                                  flip={true}
                                  positionFixed={true}
                                  right={true}
                                  tag="div"
                                >
                                  <div
                                    aria-hidden={true}
                                    className="dropdown-menu dropdown-menu-right"
                                    positionFixed={true}
                                    role="menu"
                                    tabIndex="-1"
                                  >
                                    <DropdownItem
                                      className="test-duplicate-button"
                                      onClick={[Function]}
                                      tag="button"
                                      toggle={true}
                                    >
                                      <button
                                        className="test-duplicate-button dropdown-item"
                                        onClick={[Function]}
                                        role="menuitem"
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <i
                                          className="icon-duplicate"
                                        />
                                        <span>
                                          Duplicate
                                        </span>
                                      </button>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </Manager>
                          </Dropdown>
                        </UncontrolledDropdown>
                      </WfContextMenu>
                    </div>
                  </a>
                </div>
              </div>
            </TabPane>
            <TabPane
              tabId="templates"
              tag="div"
            >
              <div
                className="tab-pane"
              >
                <div
                  className="workflows-item--wrap"
                >
                  <a
                    className="workflow-item"
                    href="/workflows/10"
                    key="10"
                  >
                    <div
                      className="mt-1"
                    >
                      <div
                        className="workflow-title"
                      >
                        Demo 1
                      </div>
                      <div
                        className="wf-meta--id"
                      >
                        <WorkflowMetadata
                          openShareModal={[Function]}
                          workflow={
                            Object {
                              "id": 10,
                              "is_owner": false,
                              "last_update": "2010-10-18T00:30:00",
                              "name": "Demo 1",
                              "owner_name": "Workbench",
                              "public": false,
                            }
                          }
                        >
                          <ul
                            className="metadata-container"
                          >
                            <li
                              className="attribution"
                            >
                              <span
                                className="metadata"
                              >
                                by 
                                Workbench
                              </span>
                              <span
                                className="separator"
                              >
                                -
                              </span>
                            </li>
                            <li>
                              Updated 
                              8y ago
                            </li>
                            <li>
                              <span
                                className="separator"
                              >
                                -
                              </span>
                              <button
                                className="public-private"
                                onClick={[Function]}
                                title="Change privacy"
                              >
                                private
                              </button>
                            </li>
                          </ul>
                        </WorkflowMetadata>
                      </div>
                    </div>
                    <div
                      className="menu-test-class"
                      onClick={[Function]}
                    >
                      <WfContextMenu
                        canDelete={false}
                        deleteWorkflow={[Function]}
                        duplicateWorkflow={[Function]}
                      >
                        <UncontrolledDropdown>
                          <Dropdown
                            active={false}
                            addonType={false}
                            direction="down"
                            inNavbar={false}
                            isOpen={false}
                            nav={false}
                            setActiveFromChild={false}
                            toggle={[Function]}
                          >
                            <Manager
                              className="dropdown"
                              onKeyDown={[Function]}
                              tag="div"
                            >
                              <div
                                className="dropdown"
                                onKeyDown={[Function]}
                              >
                                <DropdownToggle
                                  aria-haspopup={true}
                                  className="context-button"
                                  color="secondary"
                                >
                                  <Target
                                    aria-expanded={false}
                                    aria-haspopup={true}
                                    className="context-button"
                                    color="secondary"
                                    component={[Function]}
                                    onClick={[Function]}
                                  >
                                    <Button
                                      aria-expanded={false}
                                      aria-haspopup={true}
                                      className="context-button"
                                      color="secondary"
                                      innerRef={[Function]}
                                      onClick={[Function]}
                                      tag="button"
                                    >
                                      <button
                                        aria-expanded={false}
                                        aria-haspopup={true}
                                        aria-label={null}
                                        className="context-button btn btn-secondary"
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <i
                                          className="context-button--icon icon-more"
                                        />
                                      </button>
                                    </Button>
                                  </Target>
                                </DropdownToggle>
                                <DropdownMenu
                                  flip={true}
                                  positionFixed={true}
                                  right={true}
                                  tag="div"
                                >
                                  <div
                                    aria-hidden={true}
                                    className="dropdown-menu dropdown-menu-right"
                                    positionFixed={true}
                                    role="menu"
                                    tabIndex="-1"
                                  >
                                    <DropdownItem
                                      className="test-duplicate-button"
                                      onClick={[Function]}
                                      tag="button"
                                      toggle={true}
                                    >
                                      <button
                                        className="test-duplicate-button dropdown-item"
                                        onClick={[Function]}
                                        role="menuitem"
                                        tabIndex="0"
                                        type="button"
                                      >
                                        <i
                                          className="icon-duplicate"
                                        />
                                        <span>
                                          Duplicate
                                        </span>
                                      </button>
                                    </DropdownItem>
                                  </div>
                                </DropdownMenu>
                              </div>
                            </Manager>
                          </Dropdown>
                        </UncontrolledDropdown>
                      </WfContextMenu>
                    </div>
                  </a>
                </div>
              </div>
            </TabPane>
          </div>
        </TabContent>
      </div>
    </div>
  </div>
</Workflows>
`;
