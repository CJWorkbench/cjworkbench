// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Workflow list page renders correctly 1`] = `
<Workflows
  api={
    Object {
      "deleteWorkflow": [MockFunction],
      "duplicateWorkflow": [MockFunction],
      "listWorkflows": [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": Promise {},
          },
        ],
      },
      "newWorkflow": [MockFunction],
    }
  }
>
  <div
    className="workflows-page"
  >
    <WorkflowListNavBar>
      <div>
        <nav
          className="navbar"
        >
          <div
            className="logo"
          >
            <img
              className="logo"
              src="undefinedimages/logo.svg"
            />
            <img
              className="logo-text"
              src="undefinedimages/logo-text.svg"
            />
          </div>
          <div
            className="links"
          >
            <a
              className="WF-toggle--link"
              href={null}
            >
              <div>
                WORKFLOWS
              </div>
              <div
                className="WF-link--under"
              />
            </a>
            <a
              className="LS-toggle--link"
              href="/lessons/"
            >
              <div>
                Tutorials
              </div>
              <div
                className="LS-link--under"
              />
            </a>
          </div>
          <WfHamburgerMenu>
            <UncontrolledDropdown>
              <Dropdown
                active={false}
                addonType={false}
                direction="down"
                inNavbar={false}
                isOpen={false}
                nav={false}
                setActiveFromChild={false}
                toggle={[Function]}
              >
                <Manager
                  className="dropdown"
                  onKeyDown={[Function]}
                  tag="div"
                >
                  <div
                    className="dropdown"
                    onKeyDown={[Function]}
                  >
                    <DropdownToggle
                      aria-haspopup={true}
                      className="context-button"
                      color="secondary"
                      title="menu"
                    >
                      <Target
                        aria-expanded={false}
                        aria-haspopup={true}
                        className="context-button"
                        color="secondary"
                        component={[Function]}
                        onClick={[Function]}
                        title="menu"
                      >
                        <Button
                          aria-expanded={false}
                          aria-haspopup={true}
                          className="context-button"
                          color="secondary"
                          innerRef={[Function]}
                          onClick={[Function]}
                          tag="button"
                          title="menu"
                        >
                          <button
                            aria-expanded={false}
                            aria-haspopup={true}
                            aria-label={null}
                            className="context-button btn btn-secondary"
                            onClick={[Function]}
                            title="menu"
                            type="button"
                          >
                            <i
                              className="context-button--icon icon-more"
                            />
                          </button>
                        </Button>
                      </Target>
                    </DropdownToggle>
                    <DropdownMenu
                      flip={true}
                      right={true}
                      tag="div"
                    >
                      <div
                        aria-hidden={true}
                        className="dropdown-menu dropdown-menu-right"
                        role="menu"
                        tabIndex="-1"
                      >
                        <DropdownItem
                          href="/account/logout"
                          tag="button"
                          toggle={true}
                        >
                          <a
                            className="dropdown-item"
                            href="/account/logout"
                            onClick={[Function]}
                            tabIndex="0"
                          >
                            <span>
                              Log out
                            </span>
                          </a>
                        </DropdownItem>
                      </div>
                    </DropdownMenu>
                  </div>
                </Manager>
              </Dropdown>
            </UncontrolledDropdown>
          </WfHamburgerMenu>
        </nav>
      </div>
    </WorkflowListNavBar>
    <div
      className="container"
    >
      <a
        className="lesson-banner mx-auto"
        href="/lessons/"
      >
        <div>
          <div
            className="content-3"
          >
            NEW
          </div>
          <div
            className="d-flex"
          >
            <span
              className="icon-star"
            />
            <div
              className=" title-2 "
            >
              TUTORIALS
            </div>
          </div>
        </div>
        <p>
          Learn how to work with data without coding
        </p>
      </a>
      <div
        className="d-flex justify-content-center"
      >
        <button
          className="button-blue action-button new-workflow-button"
          onClick={[Function]}
        >
          Create Workflow
        </button>
      </div>
      <div
        className="mx-auto workflows-list"
      >
        <h3
          className="workflows-list--title"
        >
          WORKFLOWS
        </h3>
        <div
          className="workflows-item--wrap"
        >
          <a
            className="workflow-item"
            href="/workflows/1"
            key="1"
          >
            <div
              className="mt-1"
            >
              <div
                className="workflow-title"
              >
                Charting
              </div>
              <div
                className="wf-meta--id"
              >
                <WorkflowMetadata
                  openShareModal={[Function]}
                  workflow={
                    Object {
                      "id": 1,
                      "name": "Charting",
                      "owner_name": "Fred Frederson",
                      "public": true,
                    }
                  }
                >
                  <ul
                    className="metadata-container"
                  >
                    <li
                      className="attribution"
                    >
                      <span
                        className="metadata"
                      >
                        by 
                        Fred Frederson
                      </span>
                      <span
                        className="separator"
                      >
                        -
                      </span>
                    </li>
                    <li>
                      Updated 
                      now
                    </li>
                    <li>
                      <span
                        className="separator"
                      >
                        -
                      </span>
                      <button
                        className="public-private"
                        onClick={[Function]}
                        title="Change privacy"
                      >
                        public
                      </button>
                    </li>
                  </ul>
                </WorkflowMetadata>
              </div>
            </div>
            <div
              className="menu-test-class"
              onClick={[Function]}
            >
              <WfContextMenu
                deleteWorkflow={[Function]}
                duplicateWorkflow={[Function]}
              >
                <UncontrolledDropdown>
                  <Dropdown
                    active={false}
                    addonType={false}
                    direction="down"
                    inNavbar={false}
                    isOpen={false}
                    nav={false}
                    setActiveFromChild={false}
                    toggle={[Function]}
                  >
                    <Manager
                      className="dropdown"
                      onKeyDown={[Function]}
                      tag="div"
                    >
                      <div
                        className="dropdown"
                        onKeyDown={[Function]}
                      >
                        <DropdownToggle
                          aria-haspopup={true}
                          className="context-button"
                          color="secondary"
                        >
                          <Target
                            aria-expanded={false}
                            aria-haspopup={true}
                            className="context-button"
                            color="secondary"
                            component={[Function]}
                            onClick={[Function]}
                          >
                            <Button
                              aria-expanded={false}
                              aria-haspopup={true}
                              className="context-button"
                              color="secondary"
                              innerRef={[Function]}
                              onClick={[Function]}
                              tag="button"
                            >
                              <button
                                aria-expanded={false}
                                aria-haspopup={true}
                                aria-label={null}
                                className="context-button btn btn-secondary"
                                onClick={[Function]}
                                type="button"
                              >
                                <i
                                  className="context-button--icon icon-more"
                                />
                              </button>
                            </Button>
                          </Target>
                        </DropdownToggle>
                        <DropdownMenu
                          flip={true}
                          right={true}
                          tag="div"
                        >
                          <div
                            aria-hidden={true}
                            className="dropdown-menu dropdown-menu-right"
                            role="menu"
                            tabIndex="-1"
                          >
                            <DropdownItem
                              className="test-duplicate-button"
                              onClick={[Function]}
                              tag="button"
                              toggle={true}
                            >
                              <button
                                className="test-duplicate-button dropdown-item"
                                onClick={[Function]}
                                tabIndex="0"
                                type="button"
                              >
                                <i
                                  className="icon-duplicate"
                                />
                                <span>
                                  Duplicate
                                </span>
                              </button>
                            </DropdownItem>
                            <DropdownItem
                              className="test-delete-button"
                              onClick={[Function]}
                              tag="button"
                              toggle={true}
                            >
                              <button
                                className="test-delete-button dropdown-item"
                                onClick={[Function]}
                                tabIndex="0"
                                type="button"
                              >
                                <i
                                  className="icon-bin"
                                />
                                <span>
                                  Delete
                                </span>
                              </button>
                            </DropdownItem>
                          </div>
                        </DropdownMenu>
                      </div>
                    </Manager>
                  </Dropdown>
                </UncontrolledDropdown>
              </WfContextMenu>
            </div>
          </a>
          <a
            className="workflow-item"
            href="/workflows/7"
            key="7"
          >
            <div
              className="mt-1"
            >
              <div
                className="workflow-title"
              >
                Messy data cleanup
              </div>
              <div
                className="wf-meta--id"
              >
                <WorkflowMetadata
                  openShareModal={[Function]}
                  workflow={
                    Object {
                      "id": 7,
                      "name": "Messy data cleanup",
                      "owner_name": "John Johnson",
                      "public": false,
                    }
                  }
                >
                  <ul
                    className="metadata-container"
                  >
                    <li
                      className="attribution"
                    >
                      <span
                        className="metadata"
                      >
                        by 
                        John Johnson
                      </span>
                      <span
                        className="separator"
                      >
                        -
                      </span>
                    </li>
                    <li>
                      Updated 
                      now
                    </li>
                    <li>
                      <span
                        className="separator"
                      >
                        -
                      </span>
                      <button
                        className="public-private"
                        onClick={[Function]}
                        title="Change privacy"
                      >
                        private
                      </button>
                    </li>
                  </ul>
                </WorkflowMetadata>
              </div>
            </div>
            <div
              className="menu-test-class"
              onClick={[Function]}
            >
              <WfContextMenu
                deleteWorkflow={[Function]}
                duplicateWorkflow={[Function]}
              >
                <UncontrolledDropdown>
                  <Dropdown
                    active={false}
                    addonType={false}
                    direction="down"
                    inNavbar={false}
                    isOpen={false}
                    nav={false}
                    setActiveFromChild={false}
                    toggle={[Function]}
                  >
                    <Manager
                      className="dropdown"
                      onKeyDown={[Function]}
                      tag="div"
                    >
                      <div
                        className="dropdown"
                        onKeyDown={[Function]}
                      >
                        <DropdownToggle
                          aria-haspopup={true}
                          className="context-button"
                          color="secondary"
                        >
                          <Target
                            aria-expanded={false}
                            aria-haspopup={true}
                            className="context-button"
                            color="secondary"
                            component={[Function]}
                            onClick={[Function]}
                          >
                            <Button
                              aria-expanded={false}
                              aria-haspopup={true}
                              className="context-button"
                              color="secondary"
                              innerRef={[Function]}
                              onClick={[Function]}
                              tag="button"
                            >
                              <button
                                aria-expanded={false}
                                aria-haspopup={true}
                                aria-label={null}
                                className="context-button btn btn-secondary"
                                onClick={[Function]}
                                type="button"
                              >
                                <i
                                  className="context-button--icon icon-more"
                                />
                              </button>
                            </Button>
                          </Target>
                        </DropdownToggle>
                        <DropdownMenu
                          flip={true}
                          right={true}
                          tag="div"
                        >
                          <div
                            aria-hidden={true}
                            className="dropdown-menu dropdown-menu-right"
                            role="menu"
                            tabIndex="-1"
                          >
                            <DropdownItem
                              className="test-duplicate-button"
                              onClick={[Function]}
                              tag="button"
                              toggle={true}
                            >
                              <button
                                className="test-duplicate-button dropdown-item"
                                onClick={[Function]}
                                tabIndex="0"
                                type="button"
                              >
                                <i
                                  className="icon-duplicate"
                                />
                                <span>
                                  Duplicate
                                </span>
                              </button>
                            </DropdownItem>
                            <DropdownItem
                              className="test-delete-button"
                              onClick={[Function]}
                              tag="button"
                              toggle={true}
                            >
                              <button
                                className="test-delete-button dropdown-item"
                                onClick={[Function]}
                                tabIndex="0"
                                type="button"
                              >
                                <i
                                  className="icon-bin"
                                />
                                <span>
                                  Delete
                                </span>
                              </button>
                            </DropdownItem>
                          </div>
                        </DropdownMenu>
                      </div>
                    </Manager>
                  </Dropdown>
                </UncontrolledDropdown>
              </WfContextMenu>
            </div>
          </a>
          <a
            className="workflow-item"
            href="/workflows/8"
            key="8"
          >
            <div
              className="mt-1"
            >
              <div
                className="workflow-title"
              >
                Document search
              </div>
              <div
                className="wf-meta--id"
              >
                <WorkflowMetadata
                  openShareModal={[Function]}
                  workflow={
                    Object {
                      "id": 8,
                      "name": "Document search",
                      "owner_name": "Sally Sallerson",
                      "public": true,
                    }
                  }
                >
                  <ul
                    className="metadata-container"
                  >
                    <li
                      className="attribution"
                    >
                      <span
                        className="metadata"
                      >
                        by 
                        Sally Sallerson
                      </span>
                      <span
                        className="separator"
                      >
                        -
                      </span>
                    </li>
                    <li>
                      Updated 
                      now
                    </li>
                    <li>
                      <span
                        className="separator"
                      >
                        -
                      </span>
                      <button
                        className="public-private"
                        onClick={[Function]}
                        title="Change privacy"
                      >
                        public
                      </button>
                    </li>
                  </ul>
                </WorkflowMetadata>
              </div>
            </div>
            <div
              className="menu-test-class"
              onClick={[Function]}
            >
              <WfContextMenu
                deleteWorkflow={[Function]}
                duplicateWorkflow={[Function]}
              >
                <UncontrolledDropdown>
                  <Dropdown
                    active={false}
                    addonType={false}
                    direction="down"
                    inNavbar={false}
                    isOpen={false}
                    nav={false}
                    setActiveFromChild={false}
                    toggle={[Function]}
                  >
                    <Manager
                      className="dropdown"
                      onKeyDown={[Function]}
                      tag="div"
                    >
                      <div
                        className="dropdown"
                        onKeyDown={[Function]}
                      >
                        <DropdownToggle
                          aria-haspopup={true}
                          className="context-button"
                          color="secondary"
                        >
                          <Target
                            aria-expanded={false}
                            aria-haspopup={true}
                            className="context-button"
                            color="secondary"
                            component={[Function]}
                            onClick={[Function]}
                          >
                            <Button
                              aria-expanded={false}
                              aria-haspopup={true}
                              className="context-button"
                              color="secondary"
                              innerRef={[Function]}
                              onClick={[Function]}
                              tag="button"
                            >
                              <button
                                aria-expanded={false}
                                aria-haspopup={true}
                                aria-label={null}
                                className="context-button btn btn-secondary"
                                onClick={[Function]}
                                type="button"
                              >
                                <i
                                  className="context-button--icon icon-more"
                                />
                              </button>
                            </Button>
                          </Target>
                        </DropdownToggle>
                        <DropdownMenu
                          flip={true}
                          right={true}
                          tag="div"
                        >
                          <div
                            aria-hidden={true}
                            className="dropdown-menu dropdown-menu-right"
                            role="menu"
                            tabIndex="-1"
                          >
                            <DropdownItem
                              className="test-duplicate-button"
                              onClick={[Function]}
                              tag="button"
                              toggle={true}
                            >
                              <button
                                className="test-duplicate-button dropdown-item"
                                onClick={[Function]}
                                tabIndex="0"
                                type="button"
                              >
                                <i
                                  className="icon-duplicate"
                                />
                                <span>
                                  Duplicate
                                </span>
                              </button>
                            </DropdownItem>
                            <DropdownItem
                              className="test-delete-button"
                              onClick={[Function]}
                              tag="button"
                              toggle={true}
                            >
                              <button
                                className="test-delete-button dropdown-item"
                                onClick={[Function]}
                                tabIndex="0"
                                type="button"
                              >
                                <i
                                  className="icon-bin"
                                />
                                <span>
                                  Delete
                                </span>
                              </button>
                            </DropdownItem>
                          </div>
                        </DropdownMenu>
                      </div>
                    </Manager>
                  </Dropdown>
                </UncontrolledDropdown>
              </WfContextMenu>
            </div>
          </a>
          <a
            className="workflow-item"
            href="/workflows/9"
            key="9"
          >
            <div
              className="mt-1"
            >
              <div
                className="workflow-title"
              >
                Visualization
              </div>
              <div
                className="wf-meta--id"
              >
                <WorkflowMetadata
                  openShareModal={[Function]}
                  workflow={
                    Object {
                      "id": 9,
                      "name": "Visualization",
                      "owner_name": "Mr. Manfrengenson",
                      "public": false,
                    }
                  }
                >
                  <ul
                    className="metadata-container"
                  >
                    <li
                      className="attribution"
                    >
                      <span
                        className="metadata"
                      >
                        by 
                        Mr. Manfrengenson
                      </span>
                      <span
                        className="separator"
                      >
                        -
                      </span>
                    </li>
                    <li>
                      Updated 
                      now
                    </li>
                    <li>
                      <span
                        className="separator"
                      >
                        -
                      </span>
                      <button
                        className="public-private"
                        onClick={[Function]}
                        title="Change privacy"
                      >
                        private
                      </button>
                    </li>
                  </ul>
                </WorkflowMetadata>
              </div>
            </div>
            <div
              className="menu-test-class"
              onClick={[Function]}
            >
              <WfContextMenu
                deleteWorkflow={[Function]}
                duplicateWorkflow={[Function]}
              >
                <UncontrolledDropdown>
                  <Dropdown
                    active={false}
                    addonType={false}
                    direction="down"
                    inNavbar={false}
                    isOpen={false}
                    nav={false}
                    setActiveFromChild={false}
                    toggle={[Function]}
                  >
                    <Manager
                      className="dropdown"
                      onKeyDown={[Function]}
                      tag="div"
                    >
                      <div
                        className="dropdown"
                        onKeyDown={[Function]}
                      >
                        <DropdownToggle
                          aria-haspopup={true}
                          className="context-button"
                          color="secondary"
                        >
                          <Target
                            aria-expanded={false}
                            aria-haspopup={true}
                            className="context-button"
                            color="secondary"
                            component={[Function]}
                            onClick={[Function]}
                          >
                            <Button
                              aria-expanded={false}
                              aria-haspopup={true}
                              className="context-button"
                              color="secondary"
                              innerRef={[Function]}
                              onClick={[Function]}
                              tag="button"
                            >
                              <button
                                aria-expanded={false}
                                aria-haspopup={true}
                                aria-label={null}
                                className="context-button btn btn-secondary"
                                onClick={[Function]}
                                type="button"
                              >
                                <i
                                  className="context-button--icon icon-more"
                                />
                              </button>
                            </Button>
                          </Target>
                        </DropdownToggle>
                        <DropdownMenu
                          flip={true}
                          right={true}
                          tag="div"
                        >
                          <div
                            aria-hidden={true}
                            className="dropdown-menu dropdown-menu-right"
                            role="menu"
                            tabIndex="-1"
                          >
                            <DropdownItem
                              className="test-duplicate-button"
                              onClick={[Function]}
                              tag="button"
                              toggle={true}
                            >
                              <button
                                className="test-duplicate-button dropdown-item"
                                onClick={[Function]}
                                tabIndex="0"
                                type="button"
                              >
                                <i
                                  className="icon-duplicate"
                                />
                                <span>
                                  Duplicate
                                </span>
                              </button>
                            </DropdownItem>
                            <DropdownItem
                              className="test-delete-button"
                              onClick={[Function]}
                              tag="button"
                              toggle={true}
                            >
                              <button
                                className="test-delete-button dropdown-item"
                                onClick={[Function]}
                                tabIndex="0"
                                type="button"
                              >
                                <i
                                  className="icon-bin"
                                />
                                <span>
                                  Delete
                                </span>
                              </button>
                            </DropdownItem>
                          </div>
                        </DropdownMenu>
                      </div>
                    </Manager>
                  </Dropdown>
                </UncontrolledDropdown>
              </WfContextMenu>
            </div>
          </a>
        </div>
      </div>
    </div>
  </div>
</Workflows>
`;
