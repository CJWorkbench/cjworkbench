// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WfModuleContextMenu Modal window should render modal according to snapshot 1`] = `
<div
  className="modal-dialog menu-test-class"
  role="document"
>
  <div
    className="modal-content"
  >
    <ModalHeader
      className="dialog-header modal-header d-flex align-items-center"
      closeAriaLabel="Close"
      tag="h5"
      wrapTag="div"
    >
      <div
        className="dialog-header modal-header d-flex align-items-center modal-header"
      >
        <h5
          className="modal-title"
        >
          <div
            className="t-d-gray title-4"
          >
            EXPORT DATA
          </div>
          <div
            className="icon-close"
            onClick={[Function]}
          />
        </h5>
      </div>
    </ModalHeader>
    <ModalBody
      tag="div"
    >
      <div
        className="modal-body"
      >
        <FormGroup
          tag="div"
        >
          <div
            className="form-group"
          >
            <div
              className="d-flex justify-content-between flex-row"
            >
              <Label
                className="t-d-gray info-1"
                tag="label"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <label
                  className="t-d-gray info-1 "
                >
                  CSV
                </label>
              </Label>
              <CopyToClipboard
                className="info-1 t-f-blue test-csv-copy"
                onCopy={[Function]}
                text="/public/moduledata/live/415.csv"
              >
                <div
                  className="info-1 t-f-blue test-csv-copy"
                  onClick={[Function]}
                >
                  COPY LIVE LINK
                </div>
              </CopyToClipboard>
            </div>
            <div
              className="d-flex justify-content-between flex-row mb-3"
            >
              <Input
                className="url-link t-d-gray content-2 test-csv-field"
                placeholder="/public/moduledata/live/415.csv"
                readOnly={true}
                type="url"
              >
                <input
                  className="url-link t-d-gray content-2 test-csv-field form-control"
                  placeholder="/public/moduledata/live/415.csv"
                  readOnly={true}
                  type="url"
                />
              </Input>
              <div
                className="download-icon-box"
              >
                <a
                  className="icon-download t-d-gray button-icon test-csv-download"
                  download={true}
                  href="/public/moduledata/live/415.csv"
                  onClick={[Function]}
                />
              </div>
            </div>
            <div
              className="d-flex justify-content-between flex-row"
            >
              <Label
                className="t-d-gray info-1"
                tag="label"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <label
                  className="t-d-gray info-1 "
                >
                  JSON
                </label>
              </Label>
              <CopyToClipboard
                className="info-1 t-f-blue test-json-copy"
                onCopy={[Function]}
                text="/public/moduledata/live/415.json"
              >
                <div
                  className="info-1 t-f-blue test-json-copy"
                  onClick={[Function]}
                >
                  COPY LIVE LINK
                </div>
              </CopyToClipboard>
            </div>
            <div
              className="d-flex justify-content-between flex-row"
            >
              <Input
                className="url-link t-d-gray content-2 test-json-field"
                placeholder="/public/moduledata/live/415.json"
                readOnly={true}
                type="url"
              >
                <input
                  className="url-link t-d-gray content-2 test-json-field form-control"
                  placeholder="/public/moduledata/live/415.json"
                  readOnly={true}
                  type="url"
                />
              </Input>
              <div
                className="download-icon-box"
              >
                <a
                  className="icon-download t-d-gray button-icon test-json-download"
                  download={true}
                  href="/public/moduledata/live/415.json"
                  onClick={[Function]}
                />
              </div>
            </div>
          </div>
        </FormGroup>
      </div>
    </ModalBody>
    <ModalFooter
      tag="div"
    >
      <div
        className="modal-footer"
      >
        <button
          className="button-blue action-button test-done-button"
          onClick={[Function]}
        >
          Done
        </button>
         
      </div>
    </ModalFooter>
  </div>
</div>
`;

exports[`WfModuleContextMenu should match snapshot 1`] = `
<WfModuleContextMenu
  className="menu-test-class"
  id={415}
  removeModule={[MockFunction]}
  stopProp={[Function]}
>
  <UncontrolledDropdown
    onClick={[Function]}
  >
    <Dropdown
      active={false}
      addonType={false}
      direction="down"
      inNavbar={false}
      isOpen={false}
      nav={false}
      onClick={[Function]}
      setActiveFromChild={false}
      toggle={[Function]}
    >
      <Manager
        className="dropdown"
        onClick={[Function]}
        onKeyDown={[Function]}
        tag="div"
      >
        <div
          className="dropdown"
          onClick={[Function]}
          onKeyDown={[Function]}
        >
          <DropdownToggle
            aria-haspopup={true}
            className="context-button"
            color="secondary"
          >
            <Target
              aria-expanded={false}
              aria-haspopup={true}
              className="context-button"
              color="secondary"
              component={[Function]}
              onClick={[Function]}
            >
              <Button
                aria-expanded={false}
                aria-haspopup={true}
                className="context-button"
                color="secondary"
                innerRef={[Function]}
                onClick={[Function]}
                tag="button"
              >
                <button
                  aria-expanded={false}
                  aria-haspopup={true}
                  className="context-button btn btn-secondary"
                  onClick={[Function]}
                  type="button"
                >
                  <div
                    className="context-button--icon icon-more"
                  />
                </button>
              </Button>
            </Target>
          </DropdownToggle>
          <DropdownMenu
            flip={true}
            right={true}
            tag="div"
          >
            <div
              aria-hidden={true}
              className="dropdown-menu dropdown-menu-right"
              role="menu"
              tabIndex="-1"
            >
              <DropdownItem
                className="test-export-button"
                key="1"
                onClick={[Function]}
                tag="button"
                toggle={true}
              >
                <button
                  className="test-export-button dropdown-item"
                  onClick={[Function]}
                  tabIndex="0"
                  type="button"
                >
                  <i
                    className="icon-download"
                  />
                  <span>
                    Export
                  </span>
                </button>
              </DropdownItem>
              <DropdownItem
                className="test-delete-button"
                key="3"
                onClick={[Function]}
                tag="button"
                toggle={true}
              >
                <button
                  className="test-delete-button dropdown-item"
                  onClick={[Function]}
                  tabIndex="0"
                  type="button"
                >
                  <i
                    className="icon-bin"
                  />
                  <span>
                    Delete
                  </span>
                </button>
              </DropdownItem>
            </div>
          </DropdownMenu>
        </div>
      </Manager>
    </Dropdown>
  </UncontrolledDropdown>
</WfModuleContextMenu>
`;
