// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WfModule, not read-only mode matches snapshot 1`] = `
<div
  className="wf-module expanded"
  data-module-name="Load from URL"
  onClick={[Function]}
>
  <div
    className="wf-card "
    draggable={true}
    onDragEnd={[Function]}
    onDragStart={[Function]}
  >
    <div>
      <div
        className="output-bar-container"
      >
        <StatusBar
          isDragging={false}
          isSelected={true}
        />
      </div>
      <div
        className="module-content"
      >
        <div
          className="module-card-header"
        >
          <WfModuleCollapseButton
            isCollapsed={false}
            isLessonHighlight={false}
            onCollapse={[Function]}
            onExpand={[Function]}
          />
          <i
            className="icon-undefined WFmodule-icon mr-2"
          />
          <div
            className="module-name"
          >
            Load from URL
          </div>
          <div
            className="context-buttons"
          >
            <a
              className="help-button"
              target="_blank"
              title="Help for this module"
            >
              <i
                className="icon-help"
              />
            </a>
            <button
              className="btn edit-note"
              onClick={[Function]}
              title="Edit Note"
            >
              <i
                className="icon-note"
              />
            </button>
            <WfModuleContextMenu
              id={999}
              removeModule={[Function]}
              stopProp={[Function]}
            />
          </div>
        </div>
        <StatusLine />
        <div
          className="module-card-params"
        >
          <WfParameter
            api={
              Object {
                "onParamChanged": [MockFunction],
                "postParamEvent": [MockFunction],
              }
            }
            changeParam={[Function]}
            getParamId={[Function]}
            getParamMenuItems={[Function]}
            getParamText={[Function]}
            isReadOnly={false}
            key="0"
            moduleName="Load from URL"
            p={
              Object {
                "id": 100,
                "parameter_spec": Object {
                  "id_name": "url",
                  "type": "string",
                },
                "value": "http://some.URL.me",
              }
            }
            revision={707}
            setClickNotification={[Function]}
            setParamText={[Function]}
            updateSettings={
              Object {
                "autoUpdateData": undefined,
                "lastUpdateCheck": undefined,
                "updateInterval": undefined,
                "updateUnits": undefined,
              }
            }
            wf_module_id={999}
          />
          <WfParameter
            api={
              Object {
                "onParamChanged": [MockFunction],
                "postParamEvent": [MockFunction],
              }
            }
            changeParam={[Function]}
            getParamId={[Function]}
            getParamMenuItems={[Function]}
            getParamText={[Function]}
            isReadOnly={false}
            key="1"
            moduleName="Load from URL"
            p={
              Object {
                "id": 101,
                "parameter_spec": Object {
                  "id_name": "version_select",
                  "type": "custom",
                },
              }
            }
            revision={707}
            setClickNotification={[Function]}
            setParamText={[Function]}
            updateSettings={
              Object {
                "autoUpdateData": undefined,
                "lastUpdateCheck": undefined,
                "updateInterval": undefined,
                "updateUnits": undefined,
              }
            }
            wf_module_id={999}
          />
        </div>
      </div>
      <div
        className="drop-alert "
      />
    </div>
  </div>
</div>
`;
