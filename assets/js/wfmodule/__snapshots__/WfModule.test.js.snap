// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WfModule, not read-only mode matches snapshot 1`] = `
<div
  className="wf-module selected"
  data-module-name="Load from URL"
  onClick={[Function]}
>
  <div
    className="module-notes"
  >
    <EditableNotes
      inputRef={
        Object {
          "current": null,
        }
      }
      isReadOnly={false}
      onBlur={[Function]}
      onCancel={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="Type something"
      value=""
    />
  </div>
  <h3>
    3
  </h3>
  <div
    className="module-card"
    draggable={true}
    onDragEnd={[Function]}
    onDragStart={[Function]}
  >
    <div
      className="module-card-header"
    >
      <WfModuleCollapseButton
        isCollapsed={false}
        isLessonHighlight={false}
        onCollapse={[Function]}
        onExpand={[Function]}
      />
      <i
        className="icon-icon WFmodule-icon"
      />
      <div
        className="module-name"
      >
        Load from URL
      </div>
      <div
        className="context-buttons"
      >
        <a
          className="help-button"
          href="http://help-url"
          target="_blank"
          title="Help for this module"
        >
          <i
            className="icon-help"
          />
        </a>
        <button
          className="btn edit-note"
          onClick={[Function]}
          title="Edit Note"
        >
          <i
            className="icon-note"
          />
        </button>
        <WfModuleContextMenu
          id={999}
          removeModule={[Function]}
        />
      </div>
    </div>
    <div
      className="module-card-details expanded"
    >
      <StatusLine
        applyQuickFix={[Function]}
        error=""
        quickFixes={Array []}
        status="waiting"
      />
      <div
        className="module-card-params"
      >
        <WfParameter
          api={
            Object {
              "postParamEvent": [MockFunction],
              "setWfModuleNotes": [MockFunction],
            }
          }
          changeParam={[Function]}
          getParamId={[Function]}
          getParamMenuItems={[Function]}
          getParamText={[Function]}
          inputLastRelevantDeltaId={707}
          inputWfModuleId={123}
          isReadOnly={false}
          isZenMode={false}
          key="0"
          moduleName="Load from URL"
          name="url"
          onChange={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          p={
            Object {
              "id": 100,
              "parameter_spec": Object {
                "id_name": "url",
                "type": "string",
              },
              "value": "http://some.URL.me",
            }
          }
          setParamText={[Function]}
          updateSettings={
            Object {
              "autoUpdateData": undefined,
              "lastUpdateCheck": undefined,
              "updateInterval": undefined,
              "updateUnits": undefined,
            }
          }
          value="http://some.URL.me"
          wfModuleId={999}
        />
        <WfParameter
          api={
            Object {
              "postParamEvent": [MockFunction],
              "setWfModuleNotes": [MockFunction],
            }
          }
          changeParam={[Function]}
          getParamId={[Function]}
          getParamMenuItems={[Function]}
          getParamText={[Function]}
          inputLastRelevantDeltaId={707}
          inputWfModuleId={123}
          isReadOnly={false}
          isZenMode={false}
          key="1"
          moduleName="Load from URL"
          name="version_select"
          onChange={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          p={
            Object {
              "id": 101,
              "parameter_spec": Object {
                "id_name": "version_select",
                "type": "custom",
              },
            }
          }
          setParamText={[Function]}
          updateSettings={
            Object {
              "autoUpdateData": undefined,
              "lastUpdateCheck": undefined,
              "updateInterval": undefined,
              "updateUnits": undefined,
            }
          }
          wfModuleId={999}
        />
        <WfParameter
          api={
            Object {
              "postParamEvent": [MockFunction],
              "setWfModuleNotes": [MockFunction],
            }
          }
          changeParam={[Function]}
          getParamId={[Function]}
          getParamMenuItems={[Function]}
          getParamText={[Function]}
          inputLastRelevantDeltaId={707}
          inputWfModuleId={123}
          isReadOnly={false}
          isZenMode={false}
          key="2"
          moduleName="Load from URL"
          name="menu_select"
          onChange={[Function]}
          onReset={[Function]}
          onSubmit={[Function]}
          p={
            Object {
              "id": 102,
              "items": "Mango|Banana",
              "parameter_spec": Object {
                "id_name": "menu_select",
                "type": "menu",
              },
              "value": 1,
            }
          }
          setParamText={[Function]}
          updateSettings={
            Object {
              "autoUpdateData": undefined,
              "lastUpdateCheck": undefined,
              "updateInterval": undefined,
              "updateUnits": undefined,
            }
          }
          value={1}
          wfModuleId={999}
        />
      </div>
    </div>
  </div>
</div>
`;
