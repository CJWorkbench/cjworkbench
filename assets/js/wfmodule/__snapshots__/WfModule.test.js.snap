// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WfModule, not read-only mode matches snapshot 1`] = `
<div
  className="wf-module status-ok selected"
  data-module-name="Load from URL"
  onMouseDown={[Function]}
>
  <div
    className="module-notes"
  >
    <EditableNotes
      inputRef={
        Object {
          "current": null,
        }
      }
      isReadOnly={false}
      onBlur={[Function]}
      onCancel={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="Type a note..."
      value=""
    />
  </div>
  <h3>
    3
  </h3>
  <div
    className="module-card-and-link"
  >
    <div
      className="module-card"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <div
        className="module-card-header"
      >
        <WfModuleCollapseButton
          isCollapsed={false}
          isLessonHighlight={false}
          onCollapse={[Function]}
          onExpand={[Function]}
        />
        <i
          className="icon-icon WFmodule-icon"
        />
        <div
          className="module-name"
        >
          Load from URL
        </div>
        <div
          className="context-buttons"
        >
          <a
            className="help-button"
            href="http://help-url"
            target="_blank"
            title="Help for this module"
          >
            <i
              className="icon-help"
            />
          </a>
          <button
            className="btn edit-note"
            onClick={[Function]}
            title="Edit Note"
          >
            <i
              className="icon-note"
            />
          </button>
          <WfModuleContextMenu
            id={999}
            removeModule={[Function]}
          />
        </div>
      </div>
      <div
        className="module-card-details expanded"
      >
        <StatusLine
          applyQuickFix={[Function]}
          error=""
          quickFixes={Array []}
          status="ok"
        />
        <ParamsForm
          api={
            Object {
              "_fetch": [MockFunction],
              "createOauthAccessToken": [MockFunction],
              "valueCounts": [MockFunction],
            }
          }
          applyQuickFix={[Function]}
          currentTab="tab-1"
          deleteSecret={[Function]}
          edits={Object {}}
          fields={
            Array [
              Object {
                "id_name": "url",
                "multiline": false,
                "name": "",
                "placeholder": "",
                "type": "string",
                "visible_if": null,
              },
              Object {
                "id_name": "menu_select",
                "items": "Mango|Banana",
                "multiline": false,
                "name": "",
                "placeholder": "",
                "type": "menu",
                "visible_if": null,
              },
            ]
          }
          getParamText={[Function]}
          inputDeltaId={null}
          inputWfModuleId={123}
          isReadOnly={false}
          isWfModuleBusy={false}
          isZenMode={false}
          onChange={[Function]}
          onSubmit={[Function]}
          startCreateSecret={[Function]}
          tabs={Array []}
          value={
            Object {
              "menu_select": 1,
              "url": "http://some.URL.me",
            }
          }
          wfModuleId={999}
        />
      </div>
    </div>
  </div>
</div>
`;
