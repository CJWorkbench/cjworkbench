#!/bin/bash

set -e
#set -x

cd "$(dirname "$0")"/..

docker_compose() {
  docker-compose \
    -p 'cjworkbench_integrationtest' \
    -f integrationtests/docker-compose.yml \
    -f integrationtests/docker-compose.dev-override.yml \
    "$@"
}

if [ "$1" = "shell" ]; then
  docker_compose run --rm \
    --service-ports \
    integration-test \
    bash -c '/app/integrationtests/start-vnc & DISPLAY=:1 bash'
  exit 0
elif [ -n "$1" ]; then
  echo "Usage: $0 [shell]" >&2
  exit 1
fi

echo 'Building…' >&2
docker_compose build --pull

echo 'Tearing down old environment (if it exists)…' >&2
docker_compose down -v

echo 'Migrating (and starting database)…' >&2
docker_compose run migrate

echo 'Testing (and starting test environment)…' >&2
if docker_compose run integration-test; then
  echo 'Tests passed!' >&2
  docker_compose down -v
else
  echo 'Tests failed, so we left everything running.' >&2
  echo >&2
  echo 'DEBUGGING IDEAS' >&2
  echo >&2
  echo '1. Find a bug in your web browser' >&2
  echo >&2
  echo '    a. Browse to http://localhost:8080' >&2
  echo '    b. If you need a login, register and then browse to' >&2
  echo '       http://localhost:8080/last-sent-email for the confirmation link' >&2
  echo >&2
  echo '2. Watch tests using VNC' >&2
  echo >&2
  echo "    a. Run \`$0 shell\` to start a new test runner" >&2
  echo '    b. Connect a VNC client to localhost:5901' >&2
  echo '    c. In the test-runner shell, run `python -m unittest discover integrationtests`' >&2
  echo '    d1. If the bug is in the test, edit and re-run python (integrationtests/ is mounted)' >&2
  echo '    d2. If the bug is in Workbench, write a unit-test and restart from scratch' >&2
  echo '    d3. Still not finding the bug? Run `firefox` and test in your VNC client' >&2
  exit 1
fi
