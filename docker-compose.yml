# Bring up all the pieces necessary to run the workbench
# Data persists in Docker volumes and in local dir

# This file passes through all necessary env variables to requisite
# Docker containers and makes them available when running commands via
# `docker exec`.

version: '3.4'

services:
  database:
    image: postgres:10.4
    environment:
      - POSTGRES_USER=cjworkbench
      - POSTGRES_PASSWORD=cjworkbench
      - POSTGRES_DB=cjworkbench
      - PGDATA=/var/lib/postgresql/data/10.4
    networks: [ 'dev' ]
    volumes:
      - dbdata:/var/lib/postgresql/data

  redis:
    image: redis:4.0.10
    networks: [ 'dev' ]

  webpack:
    build:
      context: .
      target: jsbase
    volumes:
      # Migrate 
      - ./:/app/:rw
    networks: [ 'dev' ]
    command: node_modules/.bin/webpack --mode development --watch

  frontend:
    build: &python-build
      context: .
      target: pydev
    volumes: &python-volumes
      - ./:/app/:rw
      - virtualenvs:/root/.local/share/virtualenvs/:rw
    environment: &pydev-environment
      PYTHONUNBUFFERED: '1'
      CJW_DB_HOST: database
      CJW_REDIS_HOST: redis
      CJW_DB_PASSWORD: cjworkbench
      CJW_SECRET_KEY: cjw-secret-key
    ports: [ '8000:8080' ]
    networks: [ 'dev' ]
    depends_on: [ 'database', 'redis' ]
    command: [ 'pipenv', 'run', 'python', './manage.py', 'runserver', '--insecure', '0.0.0.0:8080' ]

  backend:
    build: *python-build
    volumes: *python-volumes
    environment: *pydev-environment
    depends_on: [ 'database', 'redis' ]
    networks: [ 'dev' ]
    command: [ 'pipenv', 'run', 'python', './manage.py', 'run-background-loop' ]

  testdatabase:
    image: postgres:10.4
    environment:
      - POSTGRES_USER=cjworkbench
      - POSTGRES_PASSWORD=cjworkbench
      - POSTGRES_DB=cjworkbench
      - PGDATA=/var/lib/postgresql/data/10.4
    networks: [ 'test' ]
    # no volumes: we wipe this DB a lot

  testredis:
    image: redis:4.0.10
    networks: [ 'test' ]

networks:
  dev: {}
  test: {}

volumes:
  dbdata: {}
  virtualenvs: {}
